static const short _lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	215, 1, 216, 1, 217, 1, 218, 1, 
	219, 1, 220, 1, 221, 1, 222, 1, 
	223, 1, 224, 1, 225, 1, 226, 1, 
	227, 1, 228, 1, 229, 1, 230, 1, 
	231, 1, 232, 1, 233, 1, 234, 1, 
	235, 1, 236, 1, 237, 1, 238, 1, 
	239, 1, 240, 1, 241, 1, 242, 1, 
	243, 1, 244, 1, 245, 1, 246, 1, 
	247, 1, 248, 1, 249, 1, 250, 1, 
	251, 1, 252, 1, 253, 1, 254, 1, 
	255, 1, 256, 1, 257, 1, 258, 1, 
	259, 1, 260, 1, 261, 1, 262, 1, 
	263, 1, 264, 1, 265, 1, 266, 1, 
	267, 1, 268, 1, 269, 1, 270, 1, 
	271, 1, 272, 1, 273, 1, 274, 1, 
	275, 1, 276, 1, 277, 1, 278, 1, 
	279, 1, 280, 1, 281, 1, 282, 1, 
	283, 1, 284, 1, 285, 1, 286, 1, 
	287, 1, 288, 1, 289, 1, 290, 1, 
	291, 1, 292, 1, 293, 1, 294, 1, 
	295, 1, 296, 1, 297, 1, 298, 1, 
	299, 1, 300, 1, 301, 1, 302, 1, 
	303, 1, 304, 1, 305, 1, 306, 1, 
	307, 1, 308, 1, 309, 1, 310, 1, 
	311, 1, 312, 1, 313, 1, 314, 1, 
	315, 1, 316, 1, 317, 1, 318, 1, 
	319, 1, 320, 1, 321, 1, 322, 1, 
	323, 1, 324, 1, 325, 1, 326, 1, 
	327, 1, 328, 1, 329, 1, 330, 1, 
	331, 1, 332, 1, 333, 1, 334, 1, 
	335, 1, 336, 1, 337, 1, 338, 1, 
	339, 1, 340, 1, 341, 1, 342, 1, 
	343, 1, 344, 1, 345, 1, 346, 1, 
	347, 1, 348, 1, 349, 1, 350, 1, 
	351, 1, 352, 1, 353, 1, 354, 1, 
	355, 1, 356, 1, 357, 1, 358, 1, 
	359, 1, 360, 1, 361, 1, 362, 1, 
	363, 1, 364, 1, 365, 1, 366, 1, 
	367, 1, 368, 1, 369, 2, 2, 3, 
	2, 2, 4, 2, 2, 5, 2, 2, 
	6, 2, 2, 7, 2, 2, 8, 2, 
	2, 9, 2, 2, 10, 2, 2, 11, 
	2, 2, 12, 2, 2, 13, 2, 2, 
	14, 2, 2, 15, 2, 2, 16, 2, 
	2, 17, 2, 2, 18, 2, 2, 19, 
	2, 2, 20, 2, 2, 21, 2, 2, 
	22, 2, 2, 23, 2, 2, 24, 2, 
	2, 25, 2, 2, 26, 2, 2, 27, 
	2, 2, 28, 2, 2, 29, 2, 2, 
	30, 2, 2, 31, 2, 2, 32, 2, 
	2, 33, 2, 2, 34, 2, 2, 35, 
	2, 2, 36, 2, 2, 37, 2, 2, 
	38, 2, 2, 39, 2, 2, 40, 2, 
	2, 41, 2, 2, 42, 2, 2, 43, 
	2, 2, 44, 2, 2, 45, 2, 2, 
	46, 2, 2, 47, 2, 2, 48, 2, 
	2, 49, 2, 2, 50, 2, 2, 51, 
	2, 2, 52, 2, 2, 53, 2, 2, 
	54, 2, 2, 55, 2, 2, 56, 2, 
	2, 57, 2, 2, 58, 2, 2, 59, 
	2, 2, 60, 2, 2, 61, 2, 2, 
	62, 2, 2, 63, 2, 2, 64, 2, 
	2, 65, 2, 2, 66, 2, 2, 67, 
	2, 2, 68, 2, 2, 69, 2, 2, 
	70, 2, 2, 71, 2, 2, 72, 2, 
	2, 73, 2, 2, 74, 2, 2, 75, 
	2, 2, 76, 2, 2, 77, 2, 2, 
	78, 2, 2, 79, 2, 2, 80, 2, 
	2, 81, 2, 2, 82, 2, 2, 83, 
	2, 2, 84, 2, 2, 85, 2, 2, 
	86, 2, 2, 87, 2, 2, 88, 2, 
	2, 89, 2, 2, 90, 2, 2, 91, 
	2, 2, 92, 2, 2, 93, 2, 2, 
	94, 2, 2, 95, 2, 2, 96, 2, 
	2, 97, 2, 2, 98, 2, 2, 99, 
	2, 2, 100, 2, 2, 101, 2, 2, 
	102, 2, 2, 103, 2, 2, 104, 2, 
	2, 105, 2, 2, 106, 2, 2, 107, 
	2, 2, 108, 2, 2, 109, 2, 2, 
	110, 2, 2, 111, 2, 2, 112, 2, 
	2, 113, 2, 2, 114, 2, 2, 115, 
	2, 2, 116, 2, 2, 117, 2, 2, 
	118, 2, 2, 119, 2, 2, 120, 2, 
	2, 121, 2, 2, 122, 2, 2, 123, 
	2, 2, 124, 2, 2, 125, 2, 2, 
	126, 2, 2, 127, 2, 2, 128, 2, 
	2, 129, 2, 2, 130, 2, 2, 131, 
	2, 2, 132, 2, 2, 133, 2, 2, 
	134, 2, 2, 135, 2, 2, 136, 2, 
	2, 137, 2, 2, 138, 2, 2, 139, 
	2, 2, 140, 2, 2, 141, 2, 2, 
	142, 2, 2, 143, 2, 2, 144, 2, 
	2, 145, 2, 2, 146, 2, 2, 147, 
	2, 2, 148, 2, 2, 149, 2, 2, 
	150, 2, 2, 151, 2, 2, 152, 2, 
	2, 153, 2, 2, 154, 2, 2, 155, 
	2, 2, 156, 2, 2, 157, 2, 2, 
	158, 2, 2, 159, 2, 2, 160, 2, 
	2, 161, 2, 2, 162, 2, 2, 163, 
	2, 2, 164, 2, 2, 165, 2, 2, 
	166, 2, 2, 167, 2, 2, 168, 2, 
	2, 169, 2, 2, 170, 2, 2, 171, 
	2, 2, 172, 2, 2, 173, 2, 2, 
	174, 2, 2, 175, 2, 2, 176, 2, 
	2, 177, 2, 2, 178, 2, 2, 179, 
	2, 2, 180, 2, 2, 181, 2, 2, 
	182, 2, 2, 183, 2, 2, 184, 2, 
	2, 185, 2, 2, 186, 2, 2, 187, 
	2, 2, 188, 2, 2, 189, 2, 2, 
	190, 2, 2, 191, 2, 2, 192, 2, 
	2, 193, 2, 2, 194, 2, 2, 195, 
	2, 2, 196, 2, 2, 197, 2, 2, 
	198, 2, 2, 199, 2, 2, 200, 2, 
	2, 201, 2, 2, 202, 2, 2, 203, 
	2, 2, 204, 2, 2, 205, 2, 2, 
	206, 2, 2, 207, 2, 2, 208, 2, 
	2, 209, 2, 2, 210, 2, 2, 211, 
	2, 2, 212, 2, 2, 213, 2, 2, 
	214
};
static const short _lexer_cond_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 8, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 17, 21, 28, 35, 42, 49, 
	56, 63, 70, 77, 84, 91, 98, 105, 
	112, 119, 126, 133, 140, 147, 154, 161, 
	168, 175, 182, 189, 196, 203, 210, 217, 
	224, 231, 238, 245, 252, 259, 266, 273, 
	280, 287, 294, 301, 308, 315, 322, 329, 
	336, 343, 350, 357, 364, 371, 378, 385, 
	392, 399, 406, 413, 420, 427, 434, 441, 
	448, 455, 462, 469, 476, 483, 490, 497, 
	504, 511, 518, 525, 532, 539, 546, 553, 
	560, 567, 574, 581, 588, 595, 602, 609, 
	616, 623, 630, 637, 644, 651, 658, 665, 
	672, 679, 686, 693, 700, 707, 714, 721, 
	728, 735, 742, 749, 756, 763, 770, 777, 
	784, 791, 798, 805, 812, 819, 826, 833, 
	840, 847, 854, 861, 868, 875, 882, 889, 
	896, 903, 910, 917, 924, 931, 938, 945, 
	952, 959, 966, 973, 980, 987, 994, 1001, 
	1008, 1015, 1022, 1029, 1036, 1043, 1050, 1057, 
	1064, 1071, 1078, 1085, 1092, 1099, 1106, 1113, 
	1120, 1127, 1134, 1141, 1148, 1155, 1162, 1169, 
	1176, 1183, 1190, 1197, 1204, 1211, 1218, 1225, 
	1232, 1239, 1246, 1253, 1260, 1267, 1274, 1281, 
	1288, 1295, 1302, 1309, 1316, 1323, 1330, 1337, 
	1344, 1351, 1358, 1365, 1372, 1379, 1386, 1393, 
	1400, 1407, 1414, 1421, 1428, 1435, 1442, 1449, 
	1456, 1463, 1470, 1477, 1484, 1491, 1498, 1505, 
	1512, 1519, 1526, 1533, 1540, 1547, 1554, 1561, 
	1568, 1575, 1582, 1589, 1596, 1603, 1610, 1617, 
	1624, 1631, 1638, 1645, 1652, 1659, 1666, 1673, 
	1680, 1687, 1694, 1701, 1708, 1715, 1722, 1729, 
	1736, 1743, 1750, 1757, 1764, 1771, 1778, 1785, 
	1792, 1799, 1806
};
static const char _lexer_cond_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 3, 4, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 4, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7
};
static const short _lexer_cond_keys[] = {
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 58, 58, 
	46, 46, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 48, 57, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 0
};
static const char _lexer_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0
};
static const short _lexer_key_offsets[] = {
	0, 0, 2, 5, 19, 21, 26, 31, 
	33, 38, 40, 45, 49, 54, 59, 61, 
	66, 74, 80, 88, 90, 92, 94, 96, 
	98, 100, 102, 104, 106, 108, 110, 114, 
	116, 118, 120, 127, 135, 142, 145, 283, 
	284, 290, 293, 295, 296, 310, 311, 325, 
	337, 345, 353, 363, 369, 370, 373, 374, 
	376, 377, 396, 403, 411, 422, 430, 441, 
	450, 459, 468, 477, 486, 495, 504, 518, 
	526, 537, 546, 555, 564, 573, 582, 598, 
	607, 616, 623, 634, 643, 652, 661, 670, 
	678, 691, 700, 709, 717, 726, 735, 744, 
	753, 773, 782, 798, 823, 832, 841, 850, 
	859, 868, 877, 886, 895, 904, 913, 922, 
	931, 940, 949, 958, 967, 976, 984, 992, 
	1008, 1017, 1026, 1035, 1044, 1053, 1062, 1073, 
	1082, 1091, 1100, 1112, 1121, 1130, 1139, 1148, 
	1157, 1166, 1175, 1184, 1193, 1202, 1214, 1223, 
	1232, 1240, 1265, 1274, 1283, 1294, 1303, 1312, 
	1321, 1330, 1339, 1348, 1364, 1373, 1382, 1391, 
	1400, 1409, 1418, 1427, 1436, 1445, 1456, 1467, 
	1476, 1485, 1494, 1503, 1514, 1525, 1536, 1554, 
	1567, 1580, 1589, 1598, 1611, 1622, 1631, 1640, 
	1649, 1658, 1667, 1676, 1685, 1694, 1705, 1714, 
	1727, 1738, 1747, 1758, 1767, 1776, 1787, 1796, 
	1813, 1822, 1831, 1840, 1849, 1858, 1867, 1882, 
	1891, 1900, 1909, 1918, 1927, 1944, 1955, 1964, 
	1973, 1982, 1991, 2000, 2013, 2022, 2033, 2044, 
	2053, 2064, 2073, 2082, 2094, 2103, 2112, 2129, 
	2138, 2147, 2156, 2165, 2174, 2183, 2194, 2203, 
	2212, 2221, 2232, 2241, 2250, 2259, 2268, 2285, 
	2294, 2303, 2312, 2321, 2332, 2343, 2356, 2364, 
	2373, 2381, 2394, 2402, 2411, 2419, 2428, 2453, 
	2462, 2471, 2479, 2490, 2499, 2508, 2517, 2526, 
	2537, 2546, 2555, 2564, 2579, 2590, 2601, 2610, 
	2619, 2628, 2637, 2646, 2655, 2664, 2673, 2682, 
	2691, 2700, 2709, 2720, 2729, 2738, 2747, 2756, 
	2765, 2776, 2787, 2796, 2805, 2814, 2823, 2832, 
	2841, 2858, 2867, 2876, 2885, 2894, 2903, 2912, 
	2921, 2930, 2937, 2944, 2984, 3001, 3020, 3045, 
	3063, 3088, 3109, 3130, 3151, 3172, 3193, 3214, 
	3235, 3265, 3283, 3308, 3329, 3350, 3371, 3392, 
	3413, 3447, 3468, 3489, 3506, 3531, 3552, 3573, 
	3594, 3615, 3633, 3662, 3683, 3704, 3722, 3743, 
	3764, 3785, 3806, 3848, 3869, 3903, 3956, 3977, 
	3998, 4019, 4040, 4061, 4082, 4103, 4124, 4145, 
	4166, 4187, 4208, 4229, 4250, 4271, 4292, 4313, 
	4331, 4349, 4383, 4404, 4425, 4446, 4467, 4488, 
	4509, 4534, 4555, 4576, 4597, 4623, 4644, 4665, 
	4686, 4707, 4728, 4749, 4770, 4791, 4812, 4833, 
	4859, 4880, 4901, 4919, 4972, 4993, 5014, 5039, 
	5060, 5081, 5102, 5123, 5144, 5165, 5200, 5221, 
	5242, 5263, 5284, 5305, 5326, 5347, 5368, 5389, 
	5414, 5439, 5460, 5481, 5502, 5523, 5548, 5573, 
	5598, 5636, 5665, 5694, 5715, 5736, 5765, 5790, 
	5811, 5832, 5853, 5874, 5895, 5916, 5937, 5958, 
	5983, 6004, 6033, 6058, 6079, 6104, 6125, 6146, 
	6171, 6192, 6229, 6250, 6271, 6292, 6313, 6334, 
	6355, 6388, 6409, 6430, 6451, 6472, 6493, 6530, 
	6555, 6576, 6597, 6618, 6639, 6660, 6689, 6710, 
	6735, 6760, 6781, 6806, 6827, 6848, 6875, 6896, 
	6917, 6954, 6975, 6996, 7017, 7038, 7059, 7080, 
	7105, 7126, 7147, 7168, 7193, 7214, 7235, 7256, 
	7277, 7314, 7335, 7356, 7377, 7398, 7423, 7448, 
	7477, 7495, 7516, 7534, 7563, 7581, 7602, 7620, 
	7641, 7694, 7715, 7736, 7754, 7779, 7800, 7821, 
	7842, 7863, 7888, 7909, 7930, 7951, 7984, 8009, 
	8034, 8055, 8076, 8097, 8118, 8139, 8160, 8181, 
	8202, 8223, 8244, 8265, 8286, 8311, 8332, 8353, 
	8374, 8395, 8416, 8441, 8466, 8487, 8508, 8529, 
	8550, 8571, 8592, 8629, 8650, 8671, 8692, 8713, 
	8734, 8755, 8776
};
static const short _lexer_trans_keys[] = {
	35, 45, 34, 35, 45, 9, 32, 66, 
	67, 68, 72, 73, 83, 98, 99, 100, 
	104, 105, 115, 67, 99, 9, 32, 41, 
	43, 45, 9, 32, 41, 43, 45, 69, 
	101, 9, 32, 41, 43, 45, 76, 108, 
	9, 32, 41, 43, 45, 88, 89, 120, 
	121, 9, 32, 41, 43, 45, 9, 32, 
	41, 43, 45, 80, 112, 9, 32, 41, 
	43, 45, 72, 104, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	77, 78, 83, 87, 109, 110, 115, 119, 
	79, 111, 86, 118, 69, 101, 79, 111, 
	80, 112, 84, 116, 79, 111, 80, 112, 
	65, 97, 73, 105, 84, 116, 67, 87, 
	99, 119, 77, 109, 68, 100, 82, 114, 
	48, 49, 50, 51, 52, 53, 54, 66, 
	80, 81, 87, 98, 112, 113, 119, 521, 
	544, 607, 577, 602, 609, 634, 521, 544, 
	570, 10, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 47, 
	48, 49, 58, 59, 60, 61, 62, 63, 
	64, 91, 92, 93, 94, 96, 123, 124, 
	125, 126, 127, 302, 321, 322, 323, 324, 
	325, 326, 327, 328, 329, 330, 332, 333, 
	334, 335, 336, 338, 339, 340, 341, 342, 
	344, 346, 351, 353, 354, 355, 356, 357, 
	358, 359, 360, 361, 362, 364, 365, 366, 
	367, 368, 370, 371, 372, 373, 374, 376, 
	378, 558, 577, 578, 579, 580, 581, 582, 
	583, 584, 585, 586, 588, 589, 590, 591, 
	592, 594, 595, 596, 597, 598, 600, 602, 
	607, 609, 610, 611, 612, 613, 614, 615, 
	616, 617, 618, 620, 621, 622, 623, 624, 
	626, 627, 628, 629, 630, 632, 634, -128, 
	32, 50, 57, 331, 345, 363, 377, 587, 
	601, 619, 633, 61, 48, 57, 65, 70, 
	97, 102, 34, 48, 49, 48, 49, 38, 
	9, 32, 66, 67, 68, 72, 73, 83, 
	98, 99, 100, 104, 105, 115, 42, 66, 
	72, 88, 98, 104, 120, 48, 49, 50, 
	57, 65, 70, 97, 102, 66, 72, 98, 
	104, 48, 49, 50, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 49, 50, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 10, 60, 61, 62, 61, 61, 62, 
	124, 39, 51, 68, 70, 76, 78, 83, 
	95, 100, 102, 108, 110, 115, 48, 57, 
	65, 90, 97, 122, 95, 48, 57, 65, 
	90, 97, 122, 50, 95, 48, 57, 65, 
	90, 97, 122, 67, 68, 95, 99, 100, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 73, 84, 
	95, 105, 116, 48, 57, 65, 90, 97, 
	122, 71, 95, 103, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	39, 67, 73, 79, 95, 99, 105, 111, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 78, 84, 
	95, 110, 116, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 89, 95, 121, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 39, 65, 
	67, 80, 85, 95, 97, 99, 112, 117, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 48, 57, 65, 90, 97, 122, 79, 
	80, 95, 111, 112, 48, 57, 65, 90, 
	97, 122, 90, 95, 122, 48, 57, 65, 
	89, 97, 121, 75, 95, 107, 48, 57, 
	65, 90, 97, 122, 71, 95, 103, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 68, 73, 
	76, 95, 100, 105, 108, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 46, 95, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 39, 65, 69, 73, 74, 77, 83, 
	95, 97, 101, 105, 106, 109, 115, 48, 
	57, 66, 90, 98, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 39, 67, 
	70, 72, 80, 95, 99, 102, 104, 112, 
	48, 57, 65, 90, 97, 122, 66, 67, 
	71, 73, 77, 81, 83, 86, 87, 95, 
	98, 99, 103, 105, 109, 113, 115, 118, 
	119, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 85, 95, 117, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 90, 95, 
	122, 48, 57, 65, 89, 97, 121, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	46, 95, 48, 57, 65, 90, 97, 122, 
	46, 95, 48, 57, 65, 90, 97, 122, 
	39, 73, 76, 78, 88, 95, 105, 108, 
	110, 120, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 84, 88, 
	95, 116, 120, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 39, 73, 80, 95, 
	105, 112, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 39, 65, 76, 95, 97, 108, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	68, 70, 73, 77, 78, 79, 80, 88, 
	89, 95, 100, 102, 105, 109, 110, 111, 
	112, 120, 121, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 68, 78, 95, 100, 110, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 48, 67, 68, 73, 
	86, 95, 99, 100, 105, 118, 49, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 75, 95, 107, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 69, 73, 95, 
	101, 105, 48, 57, 65, 90, 97, 122, 
	82, 83, 95, 114, 115, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 83, 95, 115, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 72, 
	76, 95, 104, 108, 48, 57, 65, 90, 
	97, 122, 72, 76, 95, 104, 108, 48, 
	57, 65, 90, 97, 122, 80, 82, 95, 
	112, 114, 48, 57, 65, 90, 97, 122, 
	39, 68, 73, 79, 83, 90, 95, 100, 
	105, 111, 115, 122, 48, 57, 65, 89, 
	97, 121, 68, 73, 80, 95, 100, 105, 
	112, 48, 57, 65, 90, 97, 122, 82, 
	83, 88, 95, 114, 115, 120, 48, 57, 
	65, 90, 97, 122, 88, 95, 120, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 83, 
	88, 95, 114, 115, 120, 48, 57, 65, 
	90, 97, 122, 83, 88, 95, 115, 120, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 88, 95, 120, 
	48, 57, 65, 90, 97, 122, 66, 78, 
	95, 98, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 68, 73, 84, 95, 100, 105, 
	116, 48, 57, 65, 90, 97, 122, 68, 
	82, 95, 100, 114, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 68, 82, 95, 100, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	70, 78, 95, 102, 110, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 73, 76, 77, 79, 
	85, 95, 105, 108, 109, 111, 117, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 85, 95, 117, 48, 57, 65, 
	90, 97, 122, 48, 49, 50, 51, 52, 
	53, 54, 55, 95, 56, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 67, 
	69, 79, 86, 90, 95, 99, 101, 111, 
	118, 122, 48, 57, 65, 89, 97, 121, 
	71, 88, 95, 103, 120, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	82, 84, 85, 95, 114, 116, 117, 48, 
	57, 65, 90, 97, 122, 71, 95, 103, 
	48, 57, 65, 90, 97, 122, 68, 73, 
	95, 100, 105, 48, 57, 65, 90, 97, 
	122, 77, 82, 95, 109, 114, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 77, 82, 95, 
	109, 114, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 48, 68, 73, 95, 100, 105, 
	49, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	69, 72, 73, 79, 85, 95, 101, 104, 
	105, 111, 117, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 88, 95, 120, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 65, 
	68, 95, 97, 100, 48, 57, 66, 90, 
	98, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 66, 83, 95, 
	98, 115, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 72, 95, 104, 48, 57, 
	65, 90, 97, 122, 68, 69, 76, 82, 
	83, 95, 100, 101, 108, 114, 115, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 83, 84, 95, 115, 116, 48, 57, 
	65, 90, 97, 122, 73, 78, 95, 105, 
	110, 48, 57, 65, 90, 97, 122, 65, 
	67, 68, 95, 97, 99, 100, 48, 57, 
	66, 90, 98, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 65, 67, 68, 
	95, 97, 99, 100, 48, 57, 66, 90, 
	98, 122, 39, 95, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 39, 95, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 66, 67, 69, 76, 
	80, 82, 85, 87, 89, 95, 98, 99, 
	101, 108, 112, 114, 117, 119, 121, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 39, 
	95, 48, 57, 65, 90, 97, 122, 67, 
	84, 95, 99, 116, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 65, 85, 
	95, 97, 117, 48, 57, 66, 90, 98, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 65, 73, 76, 80, 
	95, 97, 105, 108, 112, 48, 57, 66, 
	90, 98, 122, 65, 76, 95, 97, 108, 
	48, 57, 66, 90, 98, 122, 66, 82, 
	95, 98, 114, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 83, 95, 
	101, 115, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 77, 78, 95, 
	109, 110, 48, 57, 65, 90, 97, 122, 
	65, 83, 95, 97, 115, 48, 57, 66, 
	90, 98, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 68, 76, 79, 80, 82, 95, 100, 
	108, 111, 112, 114, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 66, 95, 98, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 70, 95, 102, 48, 57, 65, 90, 
	97, 122, 521, 544, 607, 577, 602, 609, 
	634, 607, 560, 569, 577, 602, 609, 634, 
	39, 307, 324, 326, 332, 334, 339, 351, 
	356, 358, 364, 366, 371, 521, 544, 563, 
	570, 580, 582, 588, 590, 595, 607, 612, 
	614, 620, 622, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 306, 351, 521, 544, 562, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 324, 351, 355, 
	356, 521, 544, 570, 579, 580, 607, 611, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	340, 351, 361, 372, 521, 544, 570, 585, 
	596, 607, 617, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	327, 351, 359, 521, 544, 570, 583, 607, 
	615, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 333, 351, 365, 521, 
	544, 570, 589, 607, 621, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 323, 329, 335, 351, 
	355, 361, 367, 521, 544, 570, 579, 585, 
	591, 607, 611, 617, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 340, 351, 366, 372, 
	521, 544, 570, 590, 596, 607, 622, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 345, 351, 
	377, 521, 544, 570, 601, 607, 633, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 321, 323, 
	336, 341, 351, 353, 355, 368, 373, 521, 
	544, 570, 577, 579, 592, 597, 607, 609, 
	611, 624, 629, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 335, 336, 351, 367, 368, 521, 
	544, 570, 591, 592, 607, 623, 624, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 346, 351, 378, 521, 544, 
	570, 602, 607, 634, 304, 313, 321, 345, 
	353, 377, 560, 569, 577, 601, 609, 633, 
	331, 351, 363, 521, 544, 570, 587, 607, 
	619, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 327, 351, 359, 
	521, 544, 570, 583, 607, 615, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 329, 332, 351, 356, 361, 364, 
	521, 544, 570, 580, 585, 588, 607, 612, 
	617, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	46, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 351, 366, 521, 
	544, 570, 590, 607, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 321, 
	325, 329, 330, 333, 339, 351, 353, 357, 
	361, 362, 365, 371, 521, 544, 570, 577, 
	581, 585, 586, 589, 595, 607, 609, 613, 
	617, 618, 621, 627, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 39, 323, 326, 
	328, 336, 351, 355, 358, 360, 368, 521, 
	544, 570, 579, 582, 584, 592, 607, 611, 
	614, 616, 624, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 322, 
	323, 327, 329, 333, 337, 339, 342, 343, 
	351, 354, 355, 359, 361, 365, 369, 371, 
	374, 375, 521, 544, 570, 578, 579, 583, 
	585, 589, 593, 595, 598, 599, 607, 610, 
	611, 615, 617, 621, 625, 627, 630, 631, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 341, 351, 
	373, 521, 544, 570, 597, 607, 629, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 336, 351, 368, 521, 544, 
	570, 592, 607, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 351, 353, 521, 544, 570, 
	577, 607, 609, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 351, 371, 521, 
	544, 570, 595, 607, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 328, 351, 
	360, 521, 544, 570, 584, 607, 616, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	339, 351, 371, 521, 544, 570, 595, 607, 
	627, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 346, 
	351, 378, 521, 544, 570, 602, 607, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 46, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 46, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 329, 332, 
	334, 344, 351, 361, 364, 366, 376, 521, 
	544, 570, 585, 588, 590, 600, 607, 617, 
	620, 622, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 351, 371, 521, 
	544, 570, 595, 607, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 329, 351, 361, 521, 544, 
	570, 585, 607, 617, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 344, 351, 
	372, 376, 521, 544, 570, 596, 600, 607, 
	628, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 329, 336, 
	351, 361, 368, 521, 544, 570, 585, 592, 
	607, 617, 624, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 351, 356, 521, 544, 570, 580, 
	607, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 336, 351, 368, 521, 544, 
	570, 592, 607, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 351, 367, 
	521, 544, 570, 591, 607, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 39, 321, 332, 351, 353, 364, 521, 
	544, 570, 577, 588, 607, 609, 620, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	326, 329, 333, 334, 335, 336, 344, 345, 
	351, 356, 358, 361, 365, 366, 367, 368, 
	376, 377, 521, 544, 570, 580, 582, 585, 
	589, 590, 591, 592, 600, 601, 607, 612, 
	614, 617, 621, 622, 623, 624, 632, 633, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 334, 
	351, 356, 366, 521, 544, 570, 580, 590, 
	607, 612, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 351, 358, 521, 
	544, 570, 582, 607, 614, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 351, 356, 521, 544, 570, 580, 
	607, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 304, 323, 324, 
	329, 342, 351, 355, 356, 361, 374, 521, 
	544, 560, 570, 579, 580, 585, 598, 607, 
	611, 612, 617, 630, 305, 313, 321, 346, 
	353, 378, 561, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 341, 351, 373, 
	521, 544, 570, 597, 607, 629, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 335, 351, 
	367, 521, 544, 570, 591, 607, 623, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 331, 351, 363, 521, 544, 
	570, 587, 607, 619, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 329, 351, 
	357, 361, 521, 544, 570, 581, 585, 607, 
	613, 617, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 339, 
	351, 370, 371, 521, 544, 570, 594, 595, 
	607, 626, 627, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 351, 371, 521, 
	544, 570, 595, 607, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 351, 
	372, 521, 544, 570, 596, 607, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 328, 332, 351, 360, 364, 
	521, 544, 570, 584, 588, 607, 616, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 328, 332, 351, 360, 
	364, 521, 544, 570, 584, 588, 607, 616, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 338, 351, 
	368, 370, 521, 544, 570, 592, 594, 607, 
	624, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 324, 
	329, 335, 339, 346, 351, 356, 361, 367, 
	371, 378, 521, 544, 570, 580, 585, 591, 
	595, 602, 607, 612, 617, 623, 627, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 324, 329, 336, 351, 
	356, 361, 368, 521, 544, 570, 580, 585, 
	592, 607, 612, 617, 624, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 339, 344, 351, 370, 371, 376, 
	521, 544, 570, 594, 595, 600, 607, 626, 
	627, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 344, 351, 
	376, 521, 544, 570, 600, 607, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 339, 344, 351, 370, 371, 376, 521, 
	544, 570, 594, 595, 600, 607, 626, 627, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 344, 351, 
	371, 376, 521, 544, 570, 595, 600, 607, 
	627, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 344, 351, 376, 521, 544, 570, 600, 
	607, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 322, 334, 
	351, 354, 366, 521, 544, 570, 578, 590, 
	607, 610, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 329, 340, 351, 
	356, 361, 372, 521, 544, 570, 580, 585, 
	596, 607, 612, 617, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 338, 351, 356, 370, 521, 544, 
	570, 580, 594, 607, 612, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	338, 351, 356, 370, 521, 544, 570, 580, 
	594, 607, 612, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 351, 367, 
	521, 544, 570, 591, 607, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 334, 351, 358, 366, 521, 
	544, 570, 582, 590, 607, 614, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 332, 333, 335, 341, 351, 361, 364, 
	365, 367, 373, 521, 544, 570, 585, 588, 
	589, 591, 597, 607, 617, 620, 621, 623, 
	629, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 341, 351, 
	373, 521, 544, 570, 597, 607, 629, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 304, 305, 306, 307, 308, 
	309, 310, 311, 351, 521, 544, 560, 561, 
	562, 563, 564, 565, 566, 567, 570, 607, 
	312, 313, 321, 346, 353, 378, 568, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 341, 351, 373, 521, 544, 570, 597, 
	607, 629, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 325, 335, 
	342, 346, 351, 355, 357, 367, 374, 378, 
	521, 544, 570, 579, 581, 591, 598, 602, 
	607, 611, 613, 623, 630, 634, 304, 313, 
	321, 345, 353, 377, 560, 569, 577, 601, 
	609, 633, 327, 344, 351, 359, 376, 521, 
	544, 570, 583, 600, 607, 615, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 327, 351, 359, 521, 544, 570, 
	583, 607, 615, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 336, 
	351, 368, 521, 544, 570, 592, 607, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 340, 341, 351, 
	370, 372, 373, 521, 544, 570, 594, 596, 
	597, 607, 626, 628, 629, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 327, 351, 359, 521, 544, 570, 583, 
	607, 615, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 329, 
	351, 356, 361, 521, 544, 570, 580, 585, 
	607, 612, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 333, 
	338, 351, 365, 370, 521, 544, 570, 589, 
	594, 607, 621, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 333, 338, 351, 
	365, 370, 521, 544, 570, 589, 594, 607, 
	621, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	304, 324, 329, 351, 356, 361, 521, 544, 
	560, 570, 580, 585, 607, 612, 617, 305, 
	313, 321, 346, 353, 378, 561, 569, 577, 
	602, 609, 634, 334, 351, 366, 521, 544, 
	570, 590, 607, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 351, 354, 521, 544, 570, 578, 607, 
	610, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 328, 329, 
	335, 341, 351, 357, 360, 361, 367, 373, 
	521, 544, 570, 581, 584, 585, 591, 597, 
	607, 613, 616, 617, 623, 629, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 351, 353, 521, 544, 570, 
	577, 607, 609, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 344, 351, 376, 521, 544, 570, 600, 
	607, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 324, 351, 353, 356, 521, 544, 570, 
	577, 580, 607, 609, 612, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 324, 351, 356, 521, 544, 570, 580, 
	607, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 336, 351, 368, 521, 544, 
	570, 592, 607, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 339, 351, 354, 371, 521, 544, 570, 
	578, 595, 607, 610, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 351, 355, 521, 544, 
	570, 579, 607, 611, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	328, 351, 360, 521, 544, 570, 584, 607, 
	616, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 325, 332, 
	338, 339, 351, 356, 357, 364, 370, 371, 
	521, 544, 570, 580, 581, 588, 594, 595, 
	607, 612, 613, 620, 626, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 333, 351, 365, 521, 544, 570, 
	589, 607, 621, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 340, 
	351, 371, 372, 521, 544, 570, 595, 596, 
	607, 627, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	334, 351, 361, 366, 521, 544, 570, 585, 
	590, 607, 617, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 323, 324, 351, 353, 355, 356, 521, 
	544, 570, 577, 579, 580, 607, 609, 611, 
	612, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 39, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 323, 
	324, 351, 353, 355, 356, 521, 544, 570, 
	577, 579, 580, 607, 609, 611, 612, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 39, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 340, 351, 372, 521, 
	544, 570, 596, 607, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 322, 323, 325, 332, 336, 338, 341, 
	343, 345, 351, 354, 355, 357, 364, 368, 
	370, 373, 375, 377, 521, 544, 570, 578, 
	579, 581, 588, 592, 594, 597, 599, 601, 
	607, 610, 611, 613, 620, 624, 626, 629, 
	631, 633, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 340, 351, 355, 372, 521, 
	544, 570, 579, 596, 607, 611, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 351, 367, 
	521, 544, 570, 591, 607, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	341, 351, 353, 373, 521, 544, 570, 577, 
	597, 607, 609, 629, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	329, 332, 336, 351, 353, 361, 364, 368, 
	521, 544, 570, 577, 585, 588, 592, 607, 
	609, 617, 620, 624, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	321, 332, 351, 353, 364, 521, 544, 570, 
	577, 588, 607, 609, 620, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 322, 338, 351, 354, 370, 521, 544, 
	570, 578, 594, 607, 610, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 329, 351, 361, 521, 544, 
	570, 585, 607, 617, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 351, 354, 521, 544, 570, 578, 607, 
	610, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 351, 355, 521, 544, 570, 
	579, 607, 611, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 339, 
	351, 357, 371, 521, 544, 570, 581, 595, 
	607, 613, 627, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 340, 351, 372, 521, 
	544, 570, 596, 607, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	333, 334, 351, 365, 366, 521, 544, 570, 
	589, 590, 607, 621, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 339, 351, 353, 371, 521, 544, 
	570, 577, 595, 607, 609, 627, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 351, 358, 521, 
	544, 570, 582, 607, 614, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 351, 361, 521, 544, 570, 585, 
	607, 617, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 332, 335, 336, 338, 351, 356, 364, 
	367, 368, 370, 521, 544, 570, 580, 588, 
	591, 592, 594, 607, 612, 620, 623, 624, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 351, 354, 521, 
	544, 570, 578, 607, 610, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 0
};
static const char _lexer_single_lengths[] = {
	0, 2, 3, 14, 2, 5, 5, 2, 
	5, 2, 5, 4, 5, 5, 2, 5, 
	2, 0, 8, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 7, 8, 3, 3, 126, 1, 
	0, 1, 0, 1, 14, 1, 6, 4, 
	2, 2, 2, 0, 1, 3, 1, 2, 
	1, 13, 1, 2, 5, 2, 5, 3, 
	3, 3, 3, 3, 3, 3, 8, 2, 
	5, 3, 3, 3, 3, 3, 10, 3, 
	3, 1, 5, 3, 3, 3, 3, 2, 
	7, 3, 3, 2, 3, 3, 3, 3, 
	14, 3, 10, 19, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 2, 2, 10, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 6, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 6, 3, 3, 
	2, 19, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 10, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 5, 5, 3, 
	3, 3, 3, 5, 5, 5, 12, 7, 
	7, 3, 3, 7, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 5, 3, 7, 
	5, 3, 5, 3, 3, 5, 3, 11, 
	3, 3, 3, 3, 3, 3, 9, 3, 
	3, 3, 3, 3, 11, 5, 3, 3, 
	3, 3, 3, 7, 3, 5, 5, 3, 
	5, 3, 3, 6, 3, 3, 11, 3, 
	3, 3, 3, 3, 3, 5, 3, 3, 
	3, 5, 3, 3, 3, 3, 11, 3, 
	3, 3, 3, 5, 5, 7, 2, 3, 
	2, 7, 2, 3, 2, 3, 19, 3, 
	3, 2, 5, 3, 3, 3, 3, 5, 
	3, 3, 3, 9, 5, 5, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 3, 3, 3, 3, 3, 
	5, 5, 3, 3, 3, 3, 3, 3, 
	11, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 1, 28, 5, 7, 13, 6, 
	13, 9, 9, 9, 9, 9, 9, 9, 
	18, 6, 13, 9, 9, 9, 9, 9, 
	22, 9, 9, 5, 13, 9, 9, 9, 
	9, 6, 17, 9, 9, 6, 9, 9, 
	9, 9, 30, 9, 22, 41, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 6, 
	6, 22, 9, 9, 9, 9, 9, 9, 
	13, 9, 9, 9, 14, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 14, 
	9, 9, 6, 41, 9, 9, 13, 9, 
	9, 9, 9, 9, 9, 23, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 13, 
	13, 9, 9, 9, 9, 13, 13, 13, 
	26, 17, 17, 9, 9, 17, 13, 9, 
	9, 9, 9, 9, 9, 9, 9, 13, 
	9, 17, 13, 9, 13, 9, 9, 13, 
	9, 25, 9, 9, 9, 9, 9, 9, 
	21, 9, 9, 9, 9, 9, 25, 13, 
	9, 9, 9, 9, 9, 17, 9, 13, 
	13, 9, 13, 9, 9, 15, 9, 9, 
	25, 9, 9, 9, 9, 9, 9, 13, 
	9, 9, 9, 13, 9, 9, 9, 9, 
	25, 9, 9, 9, 9, 13, 13, 17, 
	6, 9, 6, 17, 6, 9, 6, 9, 
	41, 9, 9, 6, 13, 9, 9, 9, 
	9, 13, 9, 9, 9, 21, 13, 13, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 13, 9, 9, 9, 
	9, 9, 13, 13, 9, 9, 9, 9, 
	9, 9, 25, 9, 9, 9, 9, 9, 
	9, 9, 9
};
static const char _lexer_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 2, 0, 6, 0, 
	3, 1, 1, 0, 0, 0, 4, 4, 
	3, 3, 4, 3, 0, 0, 0, 0, 
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 2, 3, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6
};
static const short _lexer_index_offsets[] = {
	0, 0, 3, 7, 22, 25, 31, 37, 
	40, 46, 49, 55, 60, 66, 72, 75, 
	81, 87, 91, 100, 103, 106, 109, 112, 
	115, 118, 121, 124, 127, 130, 133, 138, 
	141, 144, 147, 155, 164, 170, 174, 307, 
	309, 313, 316, 318, 320, 335, 337, 348, 
	357, 363, 369, 376, 380, 382, 386, 388, 
	391, 393, 410, 415, 421, 430, 436, 445, 
	452, 459, 466, 473, 480, 487, 494, 506, 
	512, 521, 528, 535, 542, 549, 556, 570, 
	577, 584, 589, 598, 605, 612, 619, 626, 
	632, 643, 650, 657, 663, 670, 677, 684, 
	691, 709, 716, 730, 753, 760, 767, 774, 
	781, 788, 795, 802, 809, 816, 823, 830, 
	837, 844, 851, 858, 865, 872, 878, 884, 
	898, 905, 912, 919, 926, 933, 940, 949, 
	956, 963, 970, 980, 987, 994, 1001, 1008, 
	1015, 1022, 1029, 1036, 1043, 1050, 1060, 1067, 
	1074, 1080, 1103, 1110, 1117, 1126, 1133, 1140, 
	1147, 1154, 1161, 1168, 1182, 1189, 1196, 1203, 
	1210, 1217, 1224, 1231, 1238, 1245, 1254, 1263, 
	1270, 1277, 1284, 1291, 1300, 1309, 1318, 1334, 
	1345, 1356, 1363, 1370, 1381, 1390, 1397, 1404, 
	1411, 1418, 1425, 1432, 1439, 1446, 1455, 1462, 
	1473, 1482, 1489, 1498, 1505, 1512, 1521, 1528, 
	1543, 1550, 1557, 1564, 1571, 1578, 1585, 1598, 
	1605, 1612, 1619, 1626, 1633, 1648, 1657, 1664, 
	1671, 1678, 1685, 1692, 1703, 1710, 1719, 1728, 
	1735, 1744, 1751, 1758, 1768, 1775, 1782, 1797, 
	1804, 1811, 1818, 1825, 1832, 1839, 1848, 1855, 
	1862, 1869, 1878, 1885, 1892, 1899, 1906, 1921, 
	1928, 1935, 1942, 1949, 1958, 1967, 1978, 1984, 
	1991, 1997, 2008, 2014, 2021, 2027, 2034, 2057, 
	2064, 2071, 2077, 2086, 2093, 2100, 2107, 2114, 
	2123, 2130, 2137, 2144, 2157, 2166, 2175, 2182, 
	2189, 2196, 2203, 2210, 2217, 2224, 2231, 2238, 
	2245, 2252, 2259, 2268, 2275, 2282, 2289, 2296, 
	2303, 2312, 2321, 2328, 2335, 2342, 2349, 2356, 
	2363, 2378, 2385, 2392, 2399, 2406, 2413, 2420, 
	2427, 2434, 2440, 2445, 2480, 2492, 2506, 2526, 
	2539, 2559, 2575, 2591, 2607, 2623, 2639, 2655, 
	2671, 2696, 2709, 2729, 2745, 2761, 2777, 2793, 
	2809, 2838, 2854, 2870, 2882, 2902, 2918, 2934, 
	2950, 2966, 2979, 3003, 3019, 3035, 3048, 3064, 
	3080, 3096, 3112, 3149, 3165, 3194, 3242, 3258, 
	3274, 3290, 3306, 3322, 3338, 3354, 3370, 3386, 
	3402, 3418, 3434, 3450, 3466, 3482, 3498, 3514, 
	3527, 3540, 3569, 3585, 3601, 3617, 3633, 3649, 
	3665, 3685, 3701, 3717, 3733, 3754, 3770, 3786, 
	3802, 3818, 3834, 3850, 3866, 3882, 3898, 3914, 
	3935, 3951, 3967, 3980, 4028, 4044, 4060, 4080, 
	4096, 4112, 4128, 4144, 4160, 4176, 4206, 4222, 
	4238, 4254, 4270, 4286, 4302, 4318, 4334, 4350, 
	4370, 4390, 4406, 4422, 4438, 4454, 4474, 4494, 
	4514, 4547, 4571, 4595, 4611, 4627, 4651, 4671, 
	4687, 4703, 4719, 4735, 4751, 4767, 4783, 4799, 
	4819, 4835, 4859, 4879, 4895, 4915, 4931, 4947, 
	4967, 4983, 5015, 5031, 5047, 5063, 5079, 5095, 
	5111, 5139, 5155, 5171, 5187, 5203, 5219, 5251, 
	5271, 5287, 5303, 5319, 5335, 5351, 5375, 5391, 
	5411, 5431, 5447, 5467, 5483, 5499, 5521, 5537, 
	5553, 5585, 5601, 5617, 5633, 5649, 5665, 5681, 
	5701, 5717, 5733, 5749, 5769, 5785, 5801, 5817, 
	5833, 5865, 5881, 5897, 5913, 5929, 5949, 5969, 
	5993, 6006, 6022, 6035, 6059, 6072, 6088, 6101, 
	6117, 6165, 6181, 6197, 6210, 6230, 6246, 6262, 
	6278, 6294, 6314, 6330, 6346, 6362, 6390, 6410, 
	6430, 6446, 6462, 6478, 6494, 6510, 6526, 6542, 
	6558, 6574, 6590, 6606, 6622, 6642, 6658, 6674, 
	6690, 6706, 6722, 6742, 6762, 6778, 6794, 6810, 
	6826, 6842, 6858, 6890, 6906, 6922, 6938, 6954, 
	6970, 6986, 7002
};
static const short _lexer_indicies[] = {
	1, 1, 0, 2, 1, 1, 0, 4, 
	4, 5, 6, 7, 8, 9, 10, 5, 
	6, 7, 8, 9, 10, 3, 11, 11, 
	3, 11, 11, 12, 12, 12, 3, 6, 
	6, 13, 13, 13, 3, 14, 14, 3, 
	14, 14, 15, 15, 15, 3, 16, 16, 
	3, 16, 16, 17, 17, 17, 3, 18, 
	19, 18, 19, 3, 18, 18, 20, 20, 
	20, 3, 19, 19, 21, 21, 21, 3, 
	22, 22, 3, 22, 22, 23, 23, 23, 
	3, 25, 25, 24, 24, 24, 0, 27, 
	27, 27, 26, 29, 30, 31, 32, 29, 
	30, 31, 32, 28, 33, 33, 28, 34, 
	34, 28, 35, 35, 28, 36, 36, 28, 
	37, 37, 28, 38, 38, 28, 39, 39, 
	28, 40, 40, 28, 41, 41, 28, 42, 
	42, 28, 43, 43, 28, 44, 45, 44, 
	45, 28, 46, 46, 28, 47, 47, 28, 
	48, 48, 28, 49, 50, 51, 52, 53, 
	54, 55, 28, 56, 57, 58, 59, 56, 
	57, 58, 59, 28, 61, 61, 62, 62, 
	62, 60, 63, 63, 64, 0, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 82, 83, 85, 
	86, 87, 88, 89, 90, 91, 92, 93, 
	94, 95, 93, 96, 97, 98, 99, 65, 
	100, 101, 102, 103, 104, 105, 106, 107, 
	108, 109, 110, 112, 113, 114, 115, 116, 
	117, 118, 119, 120, 121, 122, 123, 111, 
	101, 102, 103, 104, 105, 106, 107, 108, 
	109, 110, 112, 113, 114, 115, 116, 117, 
	118, 119, 120, 121, 122, 123, 124, 125, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	134, 136, 137, 138, 139, 140, 141, 142, 
	143, 144, 145, 146, 147, 135, 125, 126, 
	127, 128, 129, 130, 131, 132, 133, 134, 
	136, 137, 138, 139, 140, 141, 142, 143, 
	144, 145, 146, 147, 65, 84, 111, 111, 
	135, 135, 81, 149, 148, 150, 150, 150, 
	0, 151, 152, 0, 152, 153, 155, 154, 
	4, 4, 5, 6, 7, 8, 9, 10, 
	5, 6, 7, 8, 9, 10, 156, 158, 
	157, 160, 25, 161, 160, 25, 161, 83, 
	84, 24, 24, 159, 162, 25, 162, 25, 
	83, 84, 24, 24, 159, 25, 25, 84, 
	24, 24, 159, 25, 25, 24, 24, 24, 
	163, 25, 25, 164, 24, 24, 24, 0, 
	27, 27, 27, 165, 166, 86, 168, 169, 
	170, 167, 172, 171, 174, 175, 173, 177, 
	176, 179, 180, 181, 182, 183, 184, 185, 
	111, 181, 182, 183, 184, 185, 111, 111, 
	111, 178, 111, 111, 111, 111, 0, 187, 
	111, 111, 111, 111, 186, 188, 189, 111, 
	188, 189, 111, 111, 111, 186, 191, 111, 
	111, 111, 111, 190, 192, 193, 111, 192, 
	193, 111, 111, 111, 186, 194, 111, 194, 
	111, 111, 111, 186, 195, 111, 195, 111, 
	111, 111, 186, 196, 111, 196, 111, 111, 
	111, 186, 197, 111, 197, 111, 111, 111, 
	186, 198, 111, 198, 111, 111, 111, 186, 
	199, 111, 199, 111, 111, 111, 186, 200, 
	111, 200, 111, 111, 111, 186, 202, 203, 
	204, 205, 111, 203, 204, 205, 111, 111, 
	111, 201, 207, 111, 111, 111, 111, 206, 
	208, 209, 111, 208, 209, 111, 111, 111, 
	186, 210, 111, 210, 111, 111, 111, 186, 
	211, 111, 211, 111, 111, 111, 186, 212, 
	111, 212, 111, 111, 111, 186, 213, 111, 
	213, 111, 111, 111, 186, 214, 111, 214, 
	111, 111, 111, 186, 216, 217, 218, 219, 
	220, 221, 217, 218, 219, 220, 111, 111, 
	111, 215, 222, 111, 222, 111, 111, 111, 
	186, 223, 111, 223, 111, 111, 111, 186, 
	225, 111, 111, 111, 224, 226, 227, 111, 
	226, 227, 111, 111, 111, 186, 228, 111, 
	228, 111, 111, 111, 186, 229, 111, 229, 
	111, 111, 111, 186, 230, 111, 230, 111, 
	111, 111, 186, 231, 111, 231, 111, 111, 
	111, 186, 233, 111, 111, 111, 111, 232, 
	235, 236, 237, 111, 235, 236, 237, 111, 
	111, 111, 234, 239, 111, 239, 111, 111, 
	111, 238, 241, 111, 241, 111, 111, 111, 
	240, 242, 111, 111, 111, 111, 186, 243, 
	111, 243, 111, 111, 111, 186, 244, 111, 
	244, 111, 111, 111, 186, 245, 111, 245, 
	111, 111, 111, 186, 246, 111, 246, 111, 
	111, 111, 186, 248, 249, 250, 251, 252, 
	253, 254, 111, 249, 250, 251, 252, 253, 
	254, 111, 111, 111, 247, 255, 111, 255, 
	111, 111, 111, 186, 257, 258, 259, 260, 
	261, 111, 258, 259, 260, 261, 111, 111, 
	111, 256, 262, 263, 264, 265, 266, 267, 
	268, 269, 270, 111, 262, 263, 264, 265, 
	266, 267, 268, 269, 270, 111, 111, 111, 
	186, 271, 111, 271, 111, 111, 111, 186, 
	272, 111, 272, 111, 111, 111, 186, 273, 
	111, 273, 111, 111, 111, 186, 274, 111, 
	274, 111, 111, 111, 186, 275, 111, 275, 
	111, 111, 111, 186, 276, 111, 276, 111, 
	111, 111, 186, 277, 111, 277, 111, 111, 
	111, 186, 278, 111, 278, 111, 111, 111, 
	186, 279, 111, 279, 111, 111, 111, 186, 
	280, 111, 280, 111, 111, 111, 186, 281, 
	111, 281, 111, 111, 111, 186, 282, 111, 
	282, 111, 111, 111, 186, 283, 111, 283, 
	111, 111, 111, 186, 284, 111, 284, 111, 
	111, 111, 186, 285, 111, 285, 111, 111, 
	111, 186, 286, 111, 286, 111, 111, 111, 
	186, 287, 111, 287, 111, 111, 111, 186, 
	288, 111, 111, 111, 111, 186, 289, 111, 
	111, 111, 111, 186, 291, 292, 293, 294, 
	295, 111, 292, 293, 294, 295, 111, 111, 
	111, 290, 297, 111, 297, 111, 111, 111, 
	296, 298, 111, 298, 111, 111, 111, 186, 
	299, 111, 299, 111, 111, 111, 186, 300, 
	111, 300, 111, 111, 111, 186, 301, 111, 
	301, 111, 111, 111, 186, 302, 111, 302, 
	111, 111, 111, 186, 304, 305, 111, 304, 
	305, 111, 111, 111, 303, 306, 111, 306, 
	111, 111, 111, 186, 307, 111, 307, 111, 
	111, 111, 186, 308, 111, 308, 111, 111, 
	111, 186, 310, 311, 312, 111, 311, 312, 
	111, 111, 111, 309, 313, 111, 313, 111, 
	111, 111, 186, 314, 111, 314, 111, 111, 
	111, 186, 316, 111, 316, 111, 111, 111, 
	315, 317, 111, 317, 111, 111, 111, 186, 
	318, 111, 318, 111, 111, 111, 186, 319, 
	111, 319, 111, 111, 111, 186, 320, 111, 
	320, 111, 111, 111, 186, 321, 111, 321, 
	111, 111, 111, 186, 322, 111, 322, 111, 
	111, 111, 186, 323, 111, 323, 111, 111, 
	111, 186, 325, 326, 327, 111, 326, 327, 
	111, 111, 111, 324, 328, 111, 328, 111, 
	111, 111, 186, 329, 111, 329, 111, 111, 
	111, 186, 331, 111, 111, 111, 111, 330, 
	333, 334, 335, 336, 337, 338, 339, 340, 
	341, 111, 333, 334, 335, 336, 337, 338, 
	339, 340, 341, 111, 111, 111, 332, 342, 
	111, 342, 111, 111, 111, 186, 343, 111, 
	343, 111, 111, 111, 186, 345, 346, 111, 
	345, 346, 111, 111, 111, 344, 347, 111, 
	347, 111, 111, 111, 186, 348, 111, 348, 
	111, 111, 111, 186, 349, 111, 349, 111, 
	111, 111, 186, 350, 111, 350, 111, 111, 
	111, 186, 351, 111, 351, 111, 111, 111, 
	186, 352, 111, 352, 111, 111, 111, 186, 
	354, 355, 356, 357, 358, 111, 355, 356, 
	357, 358, 111, 111, 111, 353, 360, 111, 
	360, 111, 111, 111, 359, 361, 111, 361, 
	111, 111, 111, 186, 362, 111, 362, 111, 
	111, 111, 186, 363, 111, 363, 111, 111, 
	111, 186, 365, 111, 365, 111, 111, 111, 
	364, 367, 111, 367, 111, 111, 111, 366, 
	368, 111, 368, 111, 111, 111, 186, 369, 
	111, 369, 111, 111, 111, 186, 370, 111, 
	370, 111, 111, 111, 186, 371, 372, 111, 
	371, 372, 111, 111, 111, 186, 374, 375, 
	111, 374, 375, 111, 111, 111, 373, 376, 
	111, 376, 111, 111, 111, 186, 377, 111, 
	377, 111, 111, 111, 186, 378, 111, 378, 
	111, 111, 111, 186, 379, 111, 379, 111, 
	111, 111, 186, 381, 382, 111, 381, 382, 
	111, 111, 111, 380, 384, 385, 111, 384, 
	385, 111, 111, 111, 383, 386, 387, 111, 
	386, 387, 111, 111, 111, 186, 389, 390, 
	391, 392, 393, 394, 111, 390, 391, 392, 
	393, 394, 111, 111, 111, 388, 396, 397, 
	398, 111, 396, 397, 398, 111, 111, 111, 
	395, 400, 401, 402, 111, 400, 401, 402, 
	111, 111, 111, 399, 404, 111, 404, 111, 
	111, 111, 403, 405, 111, 405, 111, 111, 
	111, 186, 407, 408, 409, 111, 407, 408, 
	409, 111, 111, 111, 406, 411, 412, 111, 
	411, 412, 111, 111, 111, 410, 413, 111, 
	413, 111, 111, 111, 186, 414, 111, 414, 
	111, 111, 111, 186, 415, 111, 415, 111, 
	111, 111, 186, 416, 111, 416, 111, 111, 
	111, 186, 417, 111, 417, 111, 111, 111, 
	186, 419, 111, 419, 111, 111, 111, 418, 
	420, 111, 420, 111, 111, 111, 186, 421, 
	111, 421, 111, 111, 111, 186, 422, 423, 
	111, 422, 423, 111, 111, 111, 186, 424, 
	111, 424, 111, 111, 111, 186, 425, 426, 
	427, 111, 425, 426, 427, 111, 111, 111, 
	186, 428, 429, 111, 428, 429, 111, 111, 
	111, 186, 430, 111, 430, 111, 111, 111, 
	186, 431, 432, 111, 431, 432, 111, 111, 
	111, 186, 433, 111, 433, 111, 111, 111, 
	186, 434, 111, 434, 111, 111, 111, 186, 
	435, 436, 111, 435, 436, 111, 111, 111, 
	186, 437, 111, 437, 111, 111, 111, 186, 
	439, 440, 441, 442, 443, 111, 439, 440, 
	441, 442, 443, 111, 111, 111, 438, 444, 
	111, 444, 111, 111, 111, 186, 445, 111, 
	445, 111, 111, 111, 186, 446, 111, 446, 
	111, 111, 111, 186, 447, 111, 447, 111, 
	111, 111, 186, 448, 111, 448, 111, 111, 
	111, 186, 449, 111, 449, 111, 111, 111, 
	186, 451, 452, 453, 454, 455, 456, 457, 
	458, 111, 111, 111, 111, 450, 459, 111, 
	459, 111, 111, 111, 186, 460, 111, 460, 
	111, 111, 111, 186, 461, 111, 461, 111, 
	111, 111, 186, 462, 111, 462, 111, 111, 
	111, 186, 463, 111, 463, 111, 111, 111, 
	186, 464, 465, 466, 467, 468, 111, 464, 
	465, 466, 467, 468, 111, 111, 111, 186, 
	469, 470, 111, 469, 470, 111, 111, 111, 
	186, 471, 111, 471, 111, 111, 111, 186, 
	472, 111, 472, 111, 111, 111, 186, 473, 
	111, 473, 111, 111, 111, 186, 474, 111, 
	474, 111, 111, 111, 186, 475, 111, 475, 
	111, 111, 111, 186, 476, 477, 478, 111, 
	476, 477, 478, 111, 111, 111, 186, 480, 
	111, 480, 111, 111, 111, 479, 481, 482, 
	111, 481, 482, 111, 111, 111, 186, 483, 
	484, 111, 483, 484, 111, 111, 111, 186, 
	486, 111, 486, 111, 111, 111, 485, 487, 
	488, 111, 487, 488, 111, 111, 111, 186, 
	490, 111, 490, 111, 111, 111, 489, 491, 
	111, 491, 111, 111, 111, 186, 493, 494, 
	495, 111, 494, 495, 111, 111, 111, 492, 
	497, 111, 497, 111, 111, 111, 496, 498, 
	111, 498, 111, 111, 111, 186, 500, 501, 
	502, 503, 504, 111, 500, 501, 502, 503, 
	504, 111, 111, 111, 499, 505, 111, 505, 
	111, 111, 111, 186, 506, 111, 506, 111, 
	111, 111, 186, 507, 111, 507, 111, 111, 
	111, 186, 508, 111, 508, 111, 111, 111, 
	186, 509, 111, 509, 111, 111, 111, 186, 
	510, 111, 510, 111, 111, 111, 186, 511, 
	512, 111, 511, 512, 111, 111, 111, 186, 
	513, 111, 513, 111, 111, 111, 186, 514, 
	111, 514, 111, 111, 111, 186, 516, 111, 
	516, 111, 111, 111, 515, 517, 518, 111, 
	517, 518, 111, 111, 111, 186, 519, 111, 
	519, 111, 111, 111, 186, 520, 111, 520, 
	111, 111, 111, 186, 521, 111, 521, 111, 
	111, 111, 186, 522, 111, 522, 111, 111, 
	111, 186, 524, 525, 526, 527, 528, 111, 
	524, 525, 526, 527, 528, 111, 111, 111, 
	523, 529, 111, 529, 111, 111, 111, 186, 
	530, 111, 530, 111, 111, 111, 186, 531, 
	111, 531, 111, 111, 111, 186, 532, 111, 
	532, 111, 111, 111, 186, 533, 534, 111, 
	533, 534, 111, 111, 111, 186, 536, 537, 
	111, 536, 537, 111, 111, 111, 535, 539, 
	540, 541, 111, 539, 540, 541, 111, 111, 
	111, 538, 543, 111, 111, 111, 111, 542, 
	545, 111, 545, 111, 111, 111, 544, 547, 
	111, 111, 111, 111, 546, 549, 550, 551, 
	111, 549, 550, 551, 111, 111, 111, 548, 
	553, 111, 111, 111, 111, 552, 555, 111, 
	555, 111, 111, 111, 554, 557, 111, 111, 
	111, 111, 556, 558, 111, 558, 111, 111, 
	111, 186, 559, 560, 561, 562, 563, 564, 
	565, 566, 567, 111, 559, 560, 561, 562, 
	563, 564, 565, 566, 567, 111, 111, 111, 
	186, 568, 111, 568, 111, 111, 111, 186, 
	569, 111, 569, 111, 111, 111, 186, 571, 
	111, 111, 111, 111, 570, 572, 573, 111, 
	572, 573, 111, 111, 111, 186, 574, 111, 
	574, 111, 111, 111, 186, 575, 111, 575, 
	111, 111, 111, 186, 576, 111, 576, 111, 
	111, 111, 186, 577, 111, 577, 111, 111, 
	111, 186, 579, 580, 111, 579, 580, 111, 
	111, 111, 578, 581, 111, 581, 111, 111, 
	111, 186, 582, 111, 582, 111, 111, 111, 
	186, 583, 111, 583, 111, 111, 111, 186, 
	584, 585, 586, 587, 111, 584, 585, 586, 
	587, 111, 111, 111, 186, 588, 589, 111, 
	588, 589, 111, 111, 111, 186, 591, 592, 
	111, 591, 592, 111, 111, 111, 590, 593, 
	111, 593, 111, 111, 111, 186, 594, 111, 
	594, 111, 111, 111, 186, 595, 111, 595, 
	111, 111, 111, 186, 596, 111, 596, 111, 
	111, 111, 186, 598, 111, 598, 111, 111, 
	111, 597, 599, 111, 599, 111, 111, 111, 
	186, 600, 111, 600, 111, 111, 111, 186, 
	601, 111, 601, 111, 111, 111, 186, 602, 
	111, 602, 111, 111, 111, 186, 603, 111, 
	603, 111, 111, 111, 186, 604, 111, 604, 
	111, 111, 111, 186, 605, 111, 605, 111, 
	111, 111, 186, 606, 607, 111, 606, 607, 
	111, 111, 111, 186, 608, 111, 608, 111, 
	111, 111, 186, 609, 111, 609, 111, 111, 
	111, 186, 610, 111, 610, 111, 111, 111, 
	186, 612, 111, 612, 111, 111, 111, 611, 
	613, 111, 613, 111, 111, 111, 186, 614, 
	615, 111, 614, 615, 111, 111, 111, 186, 
	616, 617, 111, 616, 617, 111, 111, 111, 
	186, 618, 111, 618, 111, 111, 111, 186, 
	619, 111, 619, 111, 111, 111, 186, 620, 
	111, 620, 111, 111, 111, 186, 621, 111, 
	621, 111, 111, 111, 186, 622, 111, 622, 
	111, 111, 111, 186, 623, 111, 623, 111, 
	111, 111, 186, 625, 626, 627, 628, 629, 
	111, 625, 626, 627, 628, 629, 111, 111, 
	111, 624, 630, 111, 630, 111, 111, 111, 
	186, 631, 111, 631, 111, 111, 111, 186, 
	632, 111, 632, 111, 111, 111, 186, 633, 
	111, 633, 111, 111, 111, 186, 634, 111, 
	634, 111, 111, 111, 186, 635, 111, 635, 
	111, 111, 111, 186, 636, 111, 636, 111, 
	111, 111, 186, 637, 111, 637, 111, 111, 
	111, 186, 61, 61, 62, 62, 62, 638, 
	62, 62, 62, 62, 639, 179, 180, 181, 
	182, 183, 184, 185, 111, 181, 182, 183, 
	184, 185, 63, 63, 640, 64, 641, 642, 
	643, 644, 645, 135, 641, 642, 643, 644, 
	645, 111, 111, 111, 135, 135, 135, 178, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 0, 187, 111, 63, 63, 
	646, 64, 135, 111, 111, 111, 135, 135, 
	135, 186, 188, 189, 111, 188, 189, 63, 
	63, 64, 647, 648, 135, 647, 648, 111, 
	111, 111, 135, 135, 135, 186, 191, 111, 
	63, 63, 64, 135, 111, 111, 111, 135, 
	135, 135, 190, 192, 193, 111, 192, 193, 
	63, 63, 64, 649, 650, 135, 649, 650, 
	111, 111, 111, 135, 135, 135, 186, 194, 
	111, 194, 63, 63, 64, 651, 135, 651, 
	111, 111, 111, 135, 135, 135, 186, 195, 
	111, 195, 63, 63, 64, 652, 135, 652, 
	111, 111, 111, 135, 135, 135, 186, 196, 
	111, 196, 63, 63, 64, 653, 135, 653, 
	111, 111, 111, 135, 135, 135, 186, 197, 
	111, 197, 63, 63, 64, 654, 135, 654, 
	111, 111, 111, 135, 135, 135, 186, 198, 
	111, 198, 63, 63, 64, 655, 135, 655, 
	111, 111, 111, 135, 135, 135, 186, 199, 
	111, 199, 63, 63, 64, 656, 135, 656, 
	111, 111, 111, 135, 135, 135, 186, 200, 
	111, 200, 63, 63, 64, 657, 135, 657, 
	111, 111, 111, 135, 135, 135, 186, 202, 
	203, 204, 205, 111, 203, 204, 205, 63, 
	63, 64, 658, 659, 660, 135, 658, 659, 
	660, 111, 111, 111, 135, 135, 135, 201, 
	207, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 206, 208, 209, 111, 
	208, 209, 63, 63, 64, 661, 662, 135, 
	661, 662, 111, 111, 111, 135, 135, 135, 
	186, 210, 111, 210, 63, 63, 64, 663, 
	135, 663, 111, 111, 111, 135, 135, 135, 
	186, 211, 111, 211, 63, 63, 64, 664, 
	135, 664, 111, 111, 111, 135, 135, 135, 
	186, 212, 111, 212, 63, 63, 64, 665, 
	135, 665, 111, 111, 111, 135, 135, 135, 
	186, 213, 111, 213, 63, 63, 64, 666, 
	135, 666, 111, 111, 111, 135, 135, 135, 
	186, 214, 111, 214, 63, 63, 64, 667, 
	135, 667, 111, 111, 111, 135, 135, 135, 
	186, 216, 217, 218, 219, 220, 221, 217, 
	218, 219, 220, 63, 63, 64, 668, 669, 
	670, 671, 672, 668, 669, 670, 671, 111, 
	111, 111, 135, 135, 135, 215, 222, 111, 
	222, 63, 63, 64, 673, 135, 673, 111, 
	111, 111, 135, 135, 135, 186, 223, 111, 
	223, 63, 63, 64, 674, 135, 674, 111, 
	111, 111, 135, 135, 135, 186, 225, 63, 
	63, 64, 675, 111, 111, 111, 135, 135, 
	135, 224, 226, 227, 111, 226, 227, 63, 
	63, 64, 676, 677, 135, 676, 677, 111, 
	111, 111, 135, 135, 135, 186, 228, 111, 
	228, 63, 63, 64, 678, 135, 678, 111, 
	111, 111, 135, 135, 135, 186, 229, 111, 
	229, 63, 63, 64, 679, 135, 679, 111, 
	111, 111, 135, 135, 135, 186, 230, 111, 
	230, 63, 63, 64, 680, 135, 680, 111, 
	111, 111, 135, 135, 135, 186, 231, 111, 
	231, 63, 63, 64, 681, 135, 681, 111, 
	111, 111, 135, 135, 135, 186, 233, 111, 
	63, 63, 64, 135, 111, 111, 111, 135, 
	135, 135, 232, 235, 236, 237, 111, 235, 
	236, 237, 63, 63, 64, 682, 683, 684, 
	135, 682, 683, 684, 111, 111, 111, 135, 
	135, 135, 234, 239, 111, 239, 63, 63, 
	64, 685, 135, 685, 111, 111, 111, 135, 
	135, 135, 238, 241, 111, 241, 63, 63, 
	64, 686, 135, 686, 111, 111, 111, 135, 
	135, 135, 240, 242, 111, 63, 63, 64, 
	135, 111, 111, 111, 135, 135, 135, 186, 
	243, 111, 243, 63, 63, 64, 687, 135, 
	687, 111, 111, 111, 135, 135, 135, 186, 
	244, 111, 244, 63, 63, 64, 688, 135, 
	688, 111, 111, 111, 135, 135, 135, 186, 
	245, 111, 245, 63, 63, 64, 689, 135, 
	689, 111, 111, 111, 135, 135, 135, 186, 
	246, 111, 246, 63, 63, 64, 690, 135, 
	690, 111, 111, 111, 135, 135, 135, 186, 
	248, 249, 250, 251, 252, 253, 254, 111, 
	249, 250, 251, 252, 253, 254, 63, 63, 
	64, 691, 692, 693, 694, 695, 696, 135, 
	691, 692, 693, 694, 695, 696, 111, 111, 
	111, 135, 135, 135, 247, 255, 111, 255, 
	63, 63, 64, 697, 135, 697, 111, 111, 
	111, 135, 135, 135, 186, 257, 258, 259, 
	260, 261, 111, 258, 259, 260, 261, 63, 
	63, 64, 698, 699, 700, 701, 135, 698, 
	699, 700, 701, 111, 111, 111, 135, 135, 
	135, 256, 262, 263, 264, 265, 266, 267, 
	268, 269, 270, 111, 262, 263, 264, 265, 
	266, 267, 268, 269, 270, 63, 63, 64, 
	702, 703, 704, 705, 706, 707, 708, 709, 
	710, 135, 702, 703, 704, 705, 706, 707, 
	708, 709, 710, 111, 111, 111, 135, 135, 
	135, 186, 271, 111, 271, 63, 63, 64, 
	711, 135, 711, 111, 111, 111, 135, 135, 
	135, 186, 272, 111, 272, 63, 63, 64, 
	712, 135, 712, 111, 111, 111, 135, 135, 
	135, 186, 273, 111, 273, 63, 63, 64, 
	713, 135, 713, 111, 111, 111, 135, 135, 
	135, 186, 274, 111, 274, 63, 63, 64, 
	714, 135, 714, 111, 111, 111, 135, 135, 
	135, 186, 275, 111, 275, 63, 63, 64, 
	715, 135, 715, 111, 111, 111, 135, 135, 
	135, 186, 276, 111, 276, 63, 63, 64, 
	716, 135, 716, 111, 111, 111, 135, 135, 
	135, 186, 277, 111, 277, 63, 63, 64, 
	717, 135, 717, 111, 111, 111, 135, 135, 
	135, 186, 278, 111, 278, 63, 63, 64, 
	718, 135, 718, 111, 111, 111, 135, 135, 
	135, 186, 279, 111, 279, 63, 63, 64, 
	719, 135, 719, 111, 111, 111, 135, 135, 
	135, 186, 280, 111, 280, 63, 63, 64, 
	720, 135, 720, 111, 111, 111, 135, 135, 
	135, 186, 281, 111, 281, 63, 63, 64, 
	721, 135, 721, 111, 111, 111, 135, 135, 
	135, 186, 282, 111, 282, 63, 63, 64, 
	722, 135, 722, 111, 111, 111, 135, 135, 
	135, 186, 283, 111, 283, 63, 63, 64, 
	723, 135, 723, 111, 111, 111, 135, 135, 
	135, 186, 284, 111, 284, 63, 63, 64, 
	724, 135, 724, 111, 111, 111, 135, 135, 
	135, 186, 285, 111, 285, 63, 63, 64, 
	725, 135, 725, 111, 111, 111, 135, 135, 
	135, 186, 286, 111, 286, 63, 63, 64, 
	726, 135, 726, 111, 111, 111, 135, 135, 
	135, 186, 287, 111, 287, 63, 63, 64, 
	727, 135, 727, 111, 111, 111, 135, 135, 
	135, 186, 288, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 186, 289, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 186, 291, 292, 293, 294, 
	295, 111, 292, 293, 294, 295, 63, 63, 
	64, 728, 729, 730, 731, 135, 728, 729, 
	730, 731, 111, 111, 111, 135, 135, 135, 
	290, 297, 111, 297, 63, 63, 64, 732, 
	135, 732, 111, 111, 111, 135, 135, 135, 
	296, 298, 111, 298, 63, 63, 64, 733, 
	135, 733, 111, 111, 111, 135, 135, 135, 
	186, 299, 111, 299, 63, 63, 64, 734, 
	135, 734, 111, 111, 111, 135, 135, 135, 
	186, 300, 111, 300, 63, 63, 64, 735, 
	135, 735, 111, 111, 111, 135, 135, 135, 
	186, 301, 111, 301, 63, 63, 64, 736, 
	135, 736, 111, 111, 111, 135, 135, 135, 
	186, 302, 111, 302, 63, 63, 64, 737, 
	135, 737, 111, 111, 111, 135, 135, 135, 
	186, 304, 305, 111, 304, 305, 63, 63, 
	64, 738, 739, 135, 738, 739, 111, 111, 
	111, 135, 135, 135, 303, 306, 111, 306, 
	63, 63, 64, 740, 135, 740, 111, 111, 
	111, 135, 135, 135, 186, 307, 111, 307, 
	63, 63, 64, 741, 135, 741, 111, 111, 
	111, 135, 135, 135, 186, 308, 111, 308, 
	63, 63, 64, 742, 135, 742, 111, 111, 
	111, 135, 135, 135, 186, 310, 311, 312, 
	111, 311, 312, 63, 63, 64, 743, 744, 
	135, 743, 744, 111, 111, 111, 135, 135, 
	135, 309, 313, 111, 313, 63, 63, 64, 
	745, 135, 745, 111, 111, 111, 135, 135, 
	135, 186, 314, 111, 314, 63, 63, 64, 
	746, 135, 746, 111, 111, 111, 135, 135, 
	135, 186, 316, 111, 316, 63, 63, 64, 
	747, 135, 747, 111, 111, 111, 135, 135, 
	135, 315, 317, 111, 317, 63, 63, 64, 
	748, 135, 748, 111, 111, 111, 135, 135, 
	135, 186, 318, 111, 318, 63, 63, 64, 
	749, 135, 749, 111, 111, 111, 135, 135, 
	135, 186, 319, 111, 319, 63, 63, 64, 
	750, 135, 750, 111, 111, 111, 135, 135, 
	135, 186, 320, 111, 320, 63, 63, 64, 
	751, 135, 751, 111, 111, 111, 135, 135, 
	135, 186, 321, 111, 321, 63, 63, 64, 
	752, 135, 752, 111, 111, 111, 135, 135, 
	135, 186, 322, 111, 322, 63, 63, 64, 
	753, 135, 753, 111, 111, 111, 135, 135, 
	135, 186, 323, 111, 323, 63, 63, 64, 
	754, 135, 754, 111, 111, 111, 135, 135, 
	135, 186, 325, 326, 327, 111, 326, 327, 
	63, 63, 64, 755, 756, 135, 755, 756, 
	111, 111, 111, 135, 135, 135, 324, 328, 
	111, 328, 63, 63, 64, 757, 135, 757, 
	111, 111, 111, 135, 135, 135, 186, 329, 
	111, 329, 63, 63, 64, 758, 135, 758, 
	111, 111, 111, 135, 135, 135, 186, 331, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 330, 333, 334, 335, 336, 
	337, 338, 339, 340, 341, 111, 333, 334, 
	335, 336, 337, 338, 339, 340, 341, 63, 
	63, 64, 759, 760, 761, 762, 763, 764, 
	765, 766, 767, 135, 759, 760, 761, 762, 
	763, 764, 765, 766, 767, 111, 111, 111, 
	135, 135, 135, 332, 342, 111, 342, 63, 
	63, 64, 768, 135, 768, 111, 111, 111, 
	135, 135, 135, 186, 343, 111, 343, 63, 
	63, 64, 769, 135, 769, 111, 111, 111, 
	135, 135, 135, 186, 345, 346, 111, 345, 
	346, 63, 63, 64, 770, 771, 135, 770, 
	771, 111, 111, 111, 135, 135, 135, 344, 
	347, 111, 347, 63, 63, 64, 772, 135, 
	772, 111, 111, 111, 135, 135, 135, 186, 
	348, 111, 348, 63, 63, 64, 773, 135, 
	773, 111, 111, 111, 135, 135, 135, 186, 
	349, 111, 349, 63, 63, 64, 774, 135, 
	774, 111, 111, 111, 135, 135, 135, 186, 
	350, 111, 350, 63, 63, 64, 775, 135, 
	775, 111, 111, 111, 135, 135, 135, 186, 
	351, 111, 351, 63, 63, 64, 776, 135, 
	776, 111, 111, 111, 135, 135, 135, 186, 
	352, 111, 352, 63, 63, 64, 777, 135, 
	777, 111, 111, 111, 135, 135, 135, 186, 
	354, 355, 356, 357, 358, 111, 355, 356, 
	357, 358, 63, 63, 778, 64, 779, 780, 
	781, 782, 135, 779, 780, 781, 782, 111, 
	111, 111, 135, 135, 135, 353, 360, 111, 
	360, 63, 63, 64, 783, 135, 783, 111, 
	111, 111, 135, 135, 135, 359, 361, 111, 
	361, 63, 63, 64, 784, 135, 784, 111, 
	111, 111, 135, 135, 135, 186, 362, 111, 
	362, 63, 63, 64, 785, 135, 785, 111, 
	111, 111, 135, 135, 135, 186, 363, 111, 
	363, 63, 63, 64, 786, 135, 786, 111, 
	111, 111, 135, 135, 135, 186, 365, 111, 
	365, 63, 63, 64, 787, 135, 787, 111, 
	111, 111, 135, 135, 135, 364, 367, 111, 
	367, 63, 63, 64, 788, 135, 788, 111, 
	111, 111, 135, 135, 135, 366, 368, 111, 
	368, 63, 63, 64, 789, 135, 789, 111, 
	111, 111, 135, 135, 135, 186, 369, 111, 
	369, 63, 63, 64, 790, 135, 790, 111, 
	111, 111, 135, 135, 135, 186, 370, 111, 
	370, 63, 63, 64, 791, 135, 791, 111, 
	111, 111, 135, 135, 135, 186, 371, 372, 
	111, 371, 372, 63, 63, 64, 792, 793, 
	135, 792, 793, 111, 111, 111, 135, 135, 
	135, 186, 374, 375, 111, 374, 375, 63, 
	63, 64, 794, 795, 135, 794, 795, 111, 
	111, 111, 135, 135, 135, 373, 376, 111, 
	376, 63, 63, 64, 796, 135, 796, 111, 
	111, 111, 135, 135, 135, 186, 377, 111, 
	377, 63, 63, 64, 797, 135, 797, 111, 
	111, 111, 135, 135, 135, 186, 378, 111, 
	378, 63, 63, 64, 798, 135, 798, 111, 
	111, 111, 135, 135, 135, 186, 379, 111, 
	379, 63, 63, 64, 799, 135, 799, 111, 
	111, 111, 135, 135, 135, 186, 381, 382, 
	111, 381, 382, 63, 63, 64, 800, 801, 
	135, 800, 801, 111, 111, 111, 135, 135, 
	135, 380, 384, 385, 111, 384, 385, 63, 
	63, 64, 802, 803, 135, 802, 803, 111, 
	111, 111, 135, 135, 135, 383, 386, 387, 
	111, 386, 387, 63, 63, 64, 804, 805, 
	135, 804, 805, 111, 111, 111, 135, 135, 
	135, 186, 389, 390, 391, 392, 393, 394, 
	111, 390, 391, 392, 393, 394, 63, 63, 
	64, 806, 807, 808, 809, 810, 135, 806, 
	807, 808, 809, 810, 111, 111, 111, 135, 
	135, 135, 388, 396, 397, 398, 111, 396, 
	397, 398, 63, 63, 64, 811, 812, 813, 
	135, 811, 812, 813, 111, 111, 111, 135, 
	135, 135, 395, 400, 401, 402, 111, 400, 
	401, 402, 63, 63, 64, 814, 815, 816, 
	135, 814, 815, 816, 111, 111, 111, 135, 
	135, 135, 399, 404, 111, 404, 63, 63, 
	64, 817, 135, 817, 111, 111, 111, 135, 
	135, 135, 403, 405, 111, 405, 63, 63, 
	64, 818, 135, 818, 111, 111, 111, 135, 
	135, 135, 186, 407, 408, 409, 111, 407, 
	408, 409, 63, 63, 64, 819, 820, 821, 
	135, 819, 820, 821, 111, 111, 111, 135, 
	135, 135, 406, 411, 412, 111, 411, 412, 
	63, 63, 64, 822, 823, 135, 822, 823, 
	111, 111, 111, 135, 135, 135, 410, 413, 
	111, 413, 63, 63, 64, 824, 135, 824, 
	111, 111, 111, 135, 135, 135, 186, 414, 
	111, 414, 63, 63, 64, 825, 135, 825, 
	111, 111, 111, 135, 135, 135, 186, 415, 
	111, 415, 63, 63, 64, 826, 135, 826, 
	111, 111, 111, 135, 135, 135, 186, 416, 
	111, 416, 63, 63, 64, 827, 135, 827, 
	111, 111, 111, 135, 135, 135, 186, 417, 
	111, 417, 63, 63, 64, 828, 135, 828, 
	111, 111, 111, 135, 135, 135, 186, 419, 
	111, 419, 63, 63, 64, 829, 135, 829, 
	111, 111, 111, 135, 135, 135, 418, 420, 
	111, 420, 63, 63, 64, 830, 135, 830, 
	111, 111, 111, 135, 135, 135, 186, 421, 
	111, 421, 63, 63, 64, 831, 135, 831, 
	111, 111, 111, 135, 135, 135, 186, 422, 
	423, 111, 422, 423, 63, 63, 64, 832, 
	833, 135, 832, 833, 111, 111, 111, 135, 
	135, 135, 186, 424, 111, 424, 63, 63, 
	64, 834, 135, 834, 111, 111, 111, 135, 
	135, 135, 186, 425, 426, 427, 111, 425, 
	426, 427, 63, 63, 64, 835, 836, 837, 
	135, 835, 836, 837, 111, 111, 111, 135, 
	135, 135, 186, 428, 429, 111, 428, 429, 
	63, 63, 64, 838, 839, 135, 838, 839, 
	111, 111, 111, 135, 135, 135, 186, 430, 
	111, 430, 63, 63, 64, 840, 135, 840, 
	111, 111, 111, 135, 135, 135, 186, 431, 
	432, 111, 431, 432, 63, 63, 64, 841, 
	842, 135, 841, 842, 111, 111, 111, 135, 
	135, 135, 186, 433, 111, 433, 63, 63, 
	64, 843, 135, 843, 111, 111, 111, 135, 
	135, 135, 186, 434, 111, 434, 63, 63, 
	64, 844, 135, 844, 111, 111, 111, 135, 
	135, 135, 186, 435, 436, 111, 435, 436, 
	63, 63, 64, 845, 846, 135, 845, 846, 
	111, 111, 111, 135, 135, 135, 186, 437, 
	111, 437, 63, 63, 64, 847, 135, 847, 
	111, 111, 111, 135, 135, 135, 186, 439, 
	440, 441, 442, 443, 111, 439, 440, 441, 
	442, 443, 63, 63, 64, 848, 849, 850, 
	851, 852, 135, 848, 849, 850, 851, 852, 
	111, 111, 111, 135, 135, 135, 438, 444, 
	111, 444, 63, 63, 64, 853, 135, 853, 
	111, 111, 111, 135, 135, 135, 186, 445, 
	111, 445, 63, 63, 64, 854, 135, 854, 
	111, 111, 111, 135, 135, 135, 186, 446, 
	111, 446, 63, 63, 64, 855, 135, 855, 
	111, 111, 111, 135, 135, 135, 186, 447, 
	111, 447, 63, 63, 64, 856, 135, 856, 
	111, 111, 111, 135, 135, 135, 186, 448, 
	111, 448, 63, 63, 64, 857, 135, 857, 
	111, 111, 111, 135, 135, 135, 186, 449, 
	111, 449, 63, 63, 64, 858, 135, 858, 
	111, 111, 111, 135, 135, 135, 186, 451, 
	452, 453, 454, 455, 456, 457, 458, 111, 
	63, 63, 859, 860, 861, 862, 863, 864, 
	865, 866, 64, 135, 111, 111, 111, 135, 
	135, 135, 450, 459, 111, 459, 63, 63, 
	64, 867, 135, 867, 111, 111, 111, 135, 
	135, 135, 186, 460, 111, 460, 63, 63, 
	64, 868, 135, 868, 111, 111, 111, 135, 
	135, 135, 186, 461, 111, 461, 63, 63, 
	64, 869, 135, 869, 111, 111, 111, 135, 
	135, 135, 186, 462, 111, 462, 63, 63, 
	64, 870, 135, 870, 111, 111, 111, 135, 
	135, 135, 186, 463, 111, 463, 63, 63, 
	64, 871, 135, 871, 111, 111, 111, 135, 
	135, 135, 186, 464, 465, 466, 467, 468, 
	111, 464, 465, 466, 467, 468, 63, 63, 
	64, 872, 873, 874, 875, 876, 135, 872, 
	873, 874, 875, 876, 111, 111, 111, 135, 
	135, 135, 186, 469, 470, 111, 469, 470, 
	63, 63, 64, 877, 878, 135, 877, 878, 
	111, 111, 111, 135, 135, 135, 186, 471, 
	111, 471, 63, 63, 64, 879, 135, 879, 
	111, 111, 111, 135, 135, 135, 186, 472, 
	111, 472, 63, 63, 64, 880, 135, 880, 
	111, 111, 111, 135, 135, 135, 186, 473, 
	111, 473, 63, 63, 64, 881, 135, 881, 
	111, 111, 111, 135, 135, 135, 186, 474, 
	111, 474, 63, 63, 64, 882, 135, 882, 
	111, 111, 111, 135, 135, 135, 186, 475, 
	111, 475, 63, 63, 64, 883, 135, 883, 
	111, 111, 111, 135, 135, 135, 186, 476, 
	477, 478, 111, 476, 477, 478, 63, 63, 
	64, 884, 885, 886, 135, 884, 885, 886, 
	111, 111, 111, 135, 135, 135, 186, 480, 
	111, 480, 63, 63, 64, 887, 135, 887, 
	111, 111, 111, 135, 135, 135, 479, 481, 
	482, 111, 481, 482, 63, 63, 64, 888, 
	889, 135, 888, 889, 111, 111, 111, 135, 
	135, 135, 186, 483, 484, 111, 483, 484, 
	63, 63, 64, 890, 891, 135, 890, 891, 
	111, 111, 111, 135, 135, 135, 186, 486, 
	111, 486, 63, 63, 64, 892, 135, 892, 
	111, 111, 111, 135, 135, 135, 485, 487, 
	488, 111, 487, 488, 63, 63, 64, 893, 
	894, 135, 893, 894, 111, 111, 111, 135, 
	135, 135, 186, 490, 111, 490, 63, 63, 
	64, 895, 135, 895, 111, 111, 111, 135, 
	135, 135, 489, 491, 111, 491, 63, 63, 
	64, 896, 135, 896, 111, 111, 111, 135, 
	135, 135, 186, 493, 494, 495, 111, 494, 
	495, 63, 63, 897, 64, 898, 899, 135, 
	898, 899, 111, 111, 111, 135, 135, 135, 
	492, 497, 111, 497, 63, 63, 64, 900, 
	135, 900, 111, 111, 111, 135, 135, 135, 
	496, 498, 111, 498, 63, 63, 64, 901, 
	135, 901, 111, 111, 111, 135, 135, 135, 
	186, 500, 501, 502, 503, 504, 111, 500, 
	501, 502, 503, 504, 63, 63, 64, 902, 
	903, 904, 905, 906, 135, 902, 903, 904, 
	905, 906, 111, 111, 111, 135, 135, 135, 
	499, 505, 111, 505, 63, 63, 64, 907, 
	135, 907, 111, 111, 111, 135, 135, 135, 
	186, 506, 111, 506, 63, 63, 64, 908, 
	135, 908, 111, 111, 111, 135, 135, 135, 
	186, 507, 111, 507, 63, 63, 64, 909, 
	135, 909, 111, 111, 111, 135, 135, 135, 
	186, 508, 111, 508, 63, 63, 64, 910, 
	135, 910, 111, 111, 111, 135, 135, 135, 
	186, 509, 111, 509, 63, 63, 64, 911, 
	135, 911, 111, 111, 111, 135, 135, 135, 
	186, 510, 111, 510, 63, 63, 64, 912, 
	135, 912, 111, 111, 111, 135, 135, 135, 
	186, 511, 512, 111, 511, 512, 63, 63, 
	64, 913, 914, 135, 913, 914, 111, 111, 
	111, 135, 135, 135, 186, 513, 111, 513, 
	63, 63, 64, 915, 135, 915, 111, 111, 
	111, 135, 135, 135, 186, 514, 111, 514, 
	63, 63, 64, 916, 135, 916, 111, 111, 
	111, 135, 135, 135, 186, 516, 111, 516, 
	63, 63, 64, 917, 135, 917, 111, 111, 
	111, 135, 135, 135, 515, 517, 518, 111, 
	517, 518, 63, 63, 64, 918, 919, 135, 
	918, 919, 111, 111, 111, 135, 135, 135, 
	186, 519, 111, 519, 63, 63, 64, 920, 
	135, 920, 111, 111, 111, 135, 135, 135, 
	186, 520, 111, 520, 63, 63, 64, 921, 
	135, 921, 111, 111, 111, 135, 135, 135, 
	186, 521, 111, 521, 63, 63, 64, 922, 
	135, 922, 111, 111, 111, 135, 135, 135, 
	186, 522, 111, 522, 63, 63, 64, 923, 
	135, 923, 111, 111, 111, 135, 135, 135, 
	186, 524, 525, 526, 527, 528, 111, 524, 
	525, 526, 527, 528, 63, 63, 64, 924, 
	925, 926, 927, 928, 135, 924, 925, 926, 
	927, 928, 111, 111, 111, 135, 135, 135, 
	523, 529, 111, 529, 63, 63, 64, 929, 
	135, 929, 111, 111, 111, 135, 135, 135, 
	186, 530, 111, 530, 63, 63, 64, 930, 
	135, 930, 111, 111, 111, 135, 135, 135, 
	186, 531, 111, 531, 63, 63, 64, 931, 
	135, 931, 111, 111, 111, 135, 135, 135, 
	186, 532, 111, 532, 63, 63, 64, 932, 
	135, 932, 111, 111, 111, 135, 135, 135, 
	186, 533, 534, 111, 533, 534, 63, 63, 
	64, 933, 934, 135, 933, 934, 111, 111, 
	111, 135, 135, 135, 186, 536, 537, 111, 
	536, 537, 63, 63, 64, 935, 936, 135, 
	935, 936, 111, 111, 111, 135, 135, 135, 
	535, 539, 540, 541, 111, 539, 540, 541, 
	63, 63, 64, 937, 938, 939, 135, 937, 
	938, 939, 111, 111, 111, 135, 135, 135, 
	538, 543, 111, 63, 63, 64, 135, 111, 
	111, 111, 135, 135, 135, 542, 545, 111, 
	545, 63, 63, 64, 940, 135, 940, 111, 
	111, 111, 135, 135, 135, 544, 547, 111, 
	63, 63, 64, 135, 111, 111, 111, 135, 
	135, 135, 546, 549, 550, 551, 111, 549, 
	550, 551, 63, 63, 64, 941, 942, 943, 
	135, 941, 942, 943, 111, 111, 111, 135, 
	135, 135, 548, 553, 111, 63, 63, 64, 
	135, 111, 111, 111, 135, 135, 135, 552, 
	555, 111, 555, 63, 63, 64, 944, 135, 
	944, 111, 111, 111, 135, 135, 135, 554, 
	557, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 556, 558, 111, 558, 
	63, 63, 64, 945, 135, 945, 111, 111, 
	111, 135, 135, 135, 186, 559, 560, 561, 
	562, 563, 564, 565, 566, 567, 111, 559, 
	560, 561, 562, 563, 564, 565, 566, 567, 
	63, 63, 64, 946, 947, 948, 949, 950, 
	951, 952, 953, 954, 135, 946, 947, 948, 
	949, 950, 951, 952, 953, 954, 111, 111, 
	111, 135, 135, 135, 186, 568, 111, 568, 
	63, 63, 64, 955, 135, 955, 111, 111, 
	111, 135, 135, 135, 186, 569, 111, 569, 
	63, 63, 64, 956, 135, 956, 111, 111, 
	111, 135, 135, 135, 186, 571, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 570, 572, 573, 111, 572, 573, 63, 
	63, 64, 957, 958, 135, 957, 958, 111, 
	111, 111, 135, 135, 135, 186, 574, 111, 
	574, 63, 63, 64, 959, 135, 959, 111, 
	111, 111, 135, 135, 135, 186, 575, 111, 
	575, 63, 63, 64, 960, 135, 960, 111, 
	111, 111, 135, 135, 135, 186, 576, 111, 
	576, 63, 63, 64, 961, 135, 961, 111, 
	111, 111, 135, 135, 135, 186, 577, 111, 
	577, 63, 63, 64, 962, 135, 962, 111, 
	111, 111, 135, 135, 135, 186, 579, 580, 
	111, 579, 580, 63, 63, 64, 963, 964, 
	135, 963, 964, 111, 111, 111, 135, 135, 
	135, 578, 581, 111, 581, 63, 63, 64, 
	965, 135, 965, 111, 111, 111, 135, 135, 
	135, 186, 582, 111, 582, 63, 63, 64, 
	966, 135, 966, 111, 111, 111, 135, 135, 
	135, 186, 583, 111, 583, 63, 63, 64, 
	967, 135, 967, 111, 111, 111, 135, 135, 
	135, 186, 584, 585, 586, 587, 111, 584, 
	585, 586, 587, 63, 63, 64, 968, 969, 
	970, 971, 135, 968, 969, 970, 971, 111, 
	111, 111, 135, 135, 135, 186, 588, 589, 
	111, 588, 589, 63, 63, 64, 972, 973, 
	135, 972, 973, 111, 111, 111, 135, 135, 
	135, 186, 591, 592, 111, 591, 592, 63, 
	63, 64, 974, 975, 135, 974, 975, 111, 
	111, 111, 135, 135, 135, 590, 593, 111, 
	593, 63, 63, 64, 976, 135, 976, 111, 
	111, 111, 135, 135, 135, 186, 594, 111, 
	594, 63, 63, 64, 977, 135, 977, 111, 
	111, 111, 135, 135, 135, 186, 595, 111, 
	595, 63, 63, 64, 978, 135, 978, 111, 
	111, 111, 135, 135, 135, 186, 596, 111, 
	596, 63, 63, 64, 979, 135, 979, 111, 
	111, 111, 135, 135, 135, 186, 598, 111, 
	598, 63, 63, 64, 980, 135, 980, 111, 
	111, 111, 135, 135, 135, 597, 599, 111, 
	599, 63, 63, 64, 981, 135, 981, 111, 
	111, 111, 135, 135, 135, 186, 600, 111, 
	600, 63, 63, 64, 982, 135, 982, 111, 
	111, 111, 135, 135, 135, 186, 601, 111, 
	601, 63, 63, 64, 983, 135, 983, 111, 
	111, 111, 135, 135, 135, 186, 602, 111, 
	602, 63, 63, 64, 984, 135, 984, 111, 
	111, 111, 135, 135, 135, 186, 603, 111, 
	603, 63, 63, 64, 985, 135, 985, 111, 
	111, 111, 135, 135, 135, 186, 604, 111, 
	604, 63, 63, 64, 986, 135, 986, 111, 
	111, 111, 135, 135, 135, 186, 605, 111, 
	605, 63, 63, 64, 987, 135, 987, 111, 
	111, 111, 135, 135, 135, 186, 606, 607, 
	111, 606, 607, 63, 63, 64, 988, 989, 
	135, 988, 989, 111, 111, 111, 135, 135, 
	135, 186, 608, 111, 608, 63, 63, 64, 
	990, 135, 990, 111, 111, 111, 135, 135, 
	135, 186, 609, 111, 609, 63, 63, 64, 
	991, 135, 991, 111, 111, 111, 135, 135, 
	135, 186, 610, 111, 610, 63, 63, 64, 
	992, 135, 992, 111, 111, 111, 135, 135, 
	135, 186, 612, 111, 612, 63, 63, 64, 
	993, 135, 993, 111, 111, 111, 135, 135, 
	135, 611, 613, 111, 613, 63, 63, 64, 
	994, 135, 994, 111, 111, 111, 135, 135, 
	135, 186, 614, 615, 111, 614, 615, 63, 
	63, 64, 995, 996, 135, 995, 996, 111, 
	111, 111, 135, 135, 135, 186, 616, 617, 
	111, 616, 617, 63, 63, 64, 997, 998, 
	135, 997, 998, 111, 111, 111, 135, 135, 
	135, 186, 618, 111, 618, 63, 63, 64, 
	999, 135, 999, 111, 111, 111, 135, 135, 
	135, 186, 619, 111, 619, 63, 63, 64, 
	1000, 135, 1000, 111, 111, 111, 135, 135, 
	135, 186, 620, 111, 620, 63, 63, 64, 
	1001, 135, 1001, 111, 111, 111, 135, 135, 
	135, 186, 621, 111, 621, 63, 63, 64, 
	1002, 135, 1002, 111, 111, 111, 135, 135, 
	135, 186, 622, 111, 622, 63, 63, 64, 
	1003, 135, 1003, 111, 111, 111, 135, 135, 
	135, 186, 623, 111, 623, 63, 63, 64, 
	1004, 135, 1004, 111, 111, 111, 135, 135, 
	135, 186, 625, 626, 627, 628, 629, 111, 
	625, 626, 627, 628, 629, 63, 63, 64, 
	1005, 1006, 1007, 1008, 1009, 135, 1005, 1006, 
	1007, 1008, 1009, 111, 111, 111, 135, 135, 
	135, 624, 630, 111, 630, 63, 63, 64, 
	1010, 135, 1010, 111, 111, 111, 135, 135, 
	135, 186, 631, 111, 631, 63, 63, 64, 
	1011, 135, 1011, 111, 111, 111, 135, 135, 
	135, 186, 632, 111, 632, 63, 63, 64, 
	1012, 135, 1012, 111, 111, 111, 135, 135, 
	135, 186, 633, 111, 633, 63, 63, 64, 
	1013, 135, 1013, 111, 111, 111, 135, 135, 
	135, 186, 634, 111, 634, 63, 63, 64, 
	1014, 135, 1014, 111, 111, 111, 135, 135, 
	135, 186, 635, 111, 635, 63, 63, 64, 
	1015, 135, 1015, 111, 111, 111, 135, 135, 
	135, 186, 636, 111, 636, 63, 63, 64, 
	1016, 135, 1016, 111, 111, 111, 135, 135, 
	135, 186, 637, 111, 637, 63, 63, 64, 
	1017, 135, 1017, 111, 111, 111, 135, 135, 
	135, 186, 0
};
static const short _lexer_trans_targs[] = {
	38, 2, 38, 38, 3, 4, 6, 7, 
	9, 11, 14, 5, 38, 38, 8, 38, 
	10, 38, 12, 13, 38, 38, 15, 38, 
	16, 38, 38, 51, 38, 19, 22, 24, 
	27, 20, 21, 38, 23, 38, 25, 26, 
	38, 28, 29, 38, 31, 33, 32, 38, 
	34, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 36, 314, 37, 
	38, 38, 38, 39, 38, 38, 40, 41, 
	43, 38, 44, 38, 45, 38, 38, 38, 
	38, 0, 46, 47, 48, 38, 52, 53, 
	54, 55, 38, 41, 38, 38, 38, 38, 
	38, 56, 38, 38, 38, 57, 70, 78, 
	96, 119, 130, 136, 141, 145, 173, 58, 
	174, 199, 212, 219, 230, 246, 262, 290, 
	296, 58, 304, 58, 313, 315, 328, 336, 
	354, 377, 388, 394, 399, 403, 431, 316, 
	432, 457, 470, 477, 488, 504, 520, 548, 
	554, 316, 562, 316, 38, 38, 40, 1, 
	42, 38, 38, 38, 38, 38, 38, 38, 
	50, 17, 49, 38, 50, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 59, 60, 61, 62, 
	66, 67, 38, 58, 58, 58, 38, 38, 
	63, 65, 64, 58, 58, 58, 68, 69, 
	58, 38, 38, 71, 72, 76, 38, 38, 
	73, 58, 74, 75, 58, 77, 58, 38, 
	38, 79, 86, 88, 91, 92, 80, 81, 
	38, 82, 83, 84, 58, 85, 58, 87, 
	38, 38, 38, 89, 90, 58, 38, 58, 
	38, 58, 18, 93, 94, 95, 58, 38, 
	38, 97, 98, 58, 114, 116, 118, 58, 
	38, 38, 58, 99, 109, 110, 58, 58, 
	100, 104, 58, 58, 58, 106, 58, 101, 
	102, 103, 58, 105, 58, 107, 108, 58, 
	58, 111, 112, 113, 58, 115, 58, 117, 
	30, 35, 38, 38, 120, 121, 123, 126, 
	38, 58, 122, 58, 124, 125, 58, 38, 
	127, 58, 128, 129, 58, 38, 38, 131, 
	135, 132, 133, 38, 134, 58, 58, 137, 
	138, 139, 140, 58, 38, 38, 142, 144, 
	143, 58, 38, 38, 38, 146, 148, 154, 
	58, 155, 165, 166, 171, 172, 147, 58, 
	38, 149, 151, 150, 58, 152, 153, 58, 
	58, 38, 58, 156, 160, 161, 162, 38, 
	157, 158, 159, 58, 38, 58, 38, 58, 
	163, 164, 58, 58, 58, 38, 167, 169, 
	168, 58, 170, 58, 38, 58, 58, 38, 
	58, 58, 58, 58, 38, 38, 175, 189, 
	58, 191, 58, 38, 176, 179, 186, 38, 
	177, 178, 58, 38, 58, 58, 38, 180, 
	185, 58, 38, 181, 58, 182, 183, 184, 
	58, 58, 38, 187, 188, 58, 58, 190, 
	58, 192, 194, 196, 193, 58, 58, 195, 
	58, 58, 197, 198, 58, 58, 38, 200, 
	204, 205, 207, 211, 201, 202, 203, 58, 
	58, 206, 38, 58, 58, 58, 58, 58, 
	58, 58, 58, 208, 209, 210, 58, 58, 
	58, 213, 218, 58, 58, 58, 214, 215, 
	216, 217, 58, 58, 220, 221, 226, 38, 
	58, 222, 224, 223, 58, 38, 58, 225, 
	58, 38, 58, 227, 38, 58, 58, 228, 
	38, 229, 58, 38, 58, 231, 234, 240, 
	241, 232, 233, 58, 235, 236, 237, 238, 
	239, 58, 58, 38, 58, 242, 245, 243, 
	244, 58, 58, 38, 247, 251, 253, 257, 
	261, 248, 249, 250, 58, 58, 252, 38, 
	58, 58, 38, 254, 255, 58, 38, 38, 
	38, 256, 38, 38, 38, 258, 259, 58, 
	38, 38, 38, 260, 38, 38, 58, 263, 
	264, 266, 275, 58, 276, 277, 280, 285, 
	58, 265, 38, 38, 267, 271, 268, 269, 
	270, 58, 38, 272, 273, 58, 274, 58, 
	58, 58, 58, 58, 58, 58, 38, 58, 
	278, 279, 58, 281, 282, 38, 283, 284, 
	58, 286, 287, 288, 289, 58, 291, 293, 
	292, 58, 294, 38, 295, 58, 297, 298, 
	58, 58, 299, 300, 301, 302, 303, 58, 
	38, 305, 307, 309, 310, 311, 306, 58, 
	308, 58, 58, 58, 312, 58, 38, 38, 
	317, 318, 319, 320, 324, 325, 316, 316, 
	316, 321, 323, 322, 316, 316, 316, 326, 
	327, 316, 329, 330, 334, 331, 316, 332, 
	333, 316, 335, 316, 337, 344, 346, 349, 
	350, 338, 339, 340, 341, 342, 316, 343, 
	316, 345, 347, 348, 316, 316, 316, 351, 
	352, 353, 316, 355, 356, 316, 372, 374, 
	376, 316, 316, 357, 367, 368, 316, 316, 
	358, 362, 316, 316, 316, 364, 316, 359, 
	360, 361, 316, 363, 316, 365, 366, 316, 
	316, 369, 370, 371, 316, 373, 316, 375, 
	378, 379, 381, 384, 316, 380, 316, 382, 
	383, 316, 385, 316, 386, 387, 316, 389, 
	393, 390, 391, 392, 316, 316, 395, 396, 
	397, 398, 316, 400, 402, 401, 316, 404, 
	406, 412, 316, 413, 423, 424, 429, 430, 
	405, 316, 407, 409, 408, 316, 410, 411, 
	316, 316, 316, 414, 418, 419, 420, 415, 
	416, 417, 316, 316, 316, 421, 422, 316, 
	316, 316, 425, 427, 426, 316, 428, 316, 
	316, 316, 316, 316, 316, 316, 433, 447, 
	316, 449, 316, 434, 437, 444, 435, 436, 
	316, 316, 316, 438, 443, 316, 439, 316, 
	440, 441, 442, 316, 316, 445, 446, 316, 
	316, 448, 316, 450, 452, 454, 451, 316, 
	316, 453, 316, 316, 455, 456, 316, 316, 
	458, 462, 463, 465, 469, 459, 460, 461, 
	316, 316, 464, 316, 316, 316, 316, 316, 
	316, 316, 316, 466, 467, 468, 316, 316, 
	316, 471, 476, 316, 316, 316, 472, 473, 
	474, 475, 316, 316, 478, 479, 484, 316, 
	480, 482, 481, 316, 316, 483, 316, 316, 
	485, 316, 316, 486, 487, 316, 316, 489, 
	492, 498, 499, 490, 491, 316, 493, 494, 
	495, 496, 497, 316, 316, 316, 500, 503, 
	501, 502, 316, 316, 505, 509, 511, 515, 
	519, 506, 507, 508, 316, 316, 510, 316, 
	316, 512, 513, 316, 514, 516, 517, 316, 
	518, 316, 521, 522, 524, 533, 316, 534, 
	535, 538, 543, 316, 523, 525, 529, 526, 
	527, 528, 316, 530, 531, 316, 532, 316, 
	316, 316, 316, 316, 316, 316, 316, 536, 
	537, 316, 539, 540, 541, 542, 316, 544, 
	545, 546, 547, 316, 549, 551, 550, 316, 
	552, 553, 316, 555, 556, 316, 316, 557, 
	558, 559, 560, 561, 316, 563, 565, 567, 
	568, 569, 564, 316, 566, 316, 316, 316, 
	570, 316
};
static const short _lexer_trans_actions[] = {
	315, 0, 147, 307, 0, 0, 0, 0, 
	0, 0, 0, 0, 83, 95, 0, 85, 
	0, 91, 0, 0, 87, 89, 0, 93, 
	0, 145, 313, 0, 311, 0, 0, 0, 
	0, 0, 0, 119, 0, 123, 0, 0, 
	121, 0, 0, 117, 0, 0, 0, 139, 
	0, 125, 127, 129, 131, 133, 135, 137, 
	97, 101, 103, 99, 309, 0, 0, 0, 
	143, 141, 7, 0, 151, 9, 950, 320, 
	0, 149, 5, 13, 0, 15, 17, 19, 
	23, 0, 938, 938, 938, 25, 0, 0, 
	0, 0, 41, 950, 43, 153, 45, 47, 
	51, 0, 55, 57, 21, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 935, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 356, 0, 326, 5, 386, 359, 332, 
	362, 365, 389, 935, 368, 392, 935, 935, 
	377, 344, 935, 935, 341, 398, 935, 935, 
	935, 356, 404, 326, 155, 33, 941, 0, 
	0, 305, 157, 11, 159, 161, 49, 299, 
	944, 0, 944, 303, 947, 301, 293, 165, 
	27, 29, 31, 167, 35, 169, 39, 37, 
	171, 53, 191, 71, 0, 0, 0, 0, 
	0, 0, 295, 437, 545, 548, 211, 81, 
	0, 0, 0, 443, 860, 551, 0, 0, 
	317, 181, 59, 0, 0, 0, 201, 75, 
	0, 554, 0, 0, 446, 0, 863, 173, 
	61, 0, 0, 0, 5, 0, 0, 0, 
	219, 0, 0, 0, 923, 0, 926, 0, 
	221, 105, 223, 0, 0, 578, 225, 569, 
	227, 575, 0, 0, 0, 0, 449, 183, 
	63, 0, 0, 587, 0, 0, 5, 581, 
	203, 77, 584, 0, 0, 0, 452, 455, 
	0, 0, 464, 467, 470, 0, 476, 0, 
	0, 0, 458, 0, 461, 0, 0, 473, 
	440, 0, 0, 0, 479, 0, 590, 5, 
	0, 0, 185, 65, 0, 0, 0, 0, 
	229, 401, 0, 482, 0, 0, 485, 231, 
	0, 599, 0, 0, 488, 193, 73, 0, 
	0, 0, 0, 281, 0, 782, 929, 0, 
	0, 0, 0, 491, 187, 67, 0, 0, 
	0, 602, 205, 79, 195, 0, 0, 0, 
	605, 0, 0, 0, 0, 0, 0, 866, 
	217, 0, 0, 0, 497, 0, 0, 500, 
	395, 233, 830, 0, 0, 0, 0, 235, 
	0, 0, 0, 503, 237, 617, 239, 623, 
	0, 0, 932, 869, 872, 213, 0, 0, 
	0, 875, 0, 878, 207, 371, 380, 209, 
	374, 383, 626, 629, 189, 69, 0, 0, 
	350, 0, 347, 241, 0, 0, 0, 243, 
	0, 0, 767, 245, 770, 881, 247, 0, 
	0, 761, 249, 0, 764, 0, 0, 0, 
	773, 884, 291, 0, 0, 776, 506, 0, 
	509, 0, 0, 0, 0, 890, 896, 0, 
	893, 899, 0, 0, 515, 512, 179, 0, 
	0, 0, 0, 0, 0, 0, 0, 785, 
	833, 0, 283, 806, 809, 812, 815, 818, 
	821, 824, 827, 0, 0, 0, 518, 902, 
	329, 0, 0, 353, 323, 647, 0, 0, 
	0, 0, 788, 650, 0, 0, 0, 251, 
	521, 0, 0, 0, 656, 285, 839, 0, 
	659, 287, 845, 0, 253, 848, 665, 0, 
	255, 0, 758, 177, 338, 0, 0, 0, 
	0, 0, 0, 524, 0, 0, 0, 0, 
	0, 794, 791, 175, 671, 0, 0, 0, 
	0, 527, 674, 197, 0, 0, 0, 0, 
	0, 0, 0, 0, 905, 677, 0, 257, 
	683, 686, 259, 0, 0, 701, 261, 107, 
	263, 0, 265, 109, 267, 0, 0, 716, 
	269, 111, 271, 0, 273, 113, 719, 0, 
	0, 0, 0, 425, 0, 0, 0, 0, 
	722, 0, 275, 115, 0, 0, 0, 0, 
	0, 530, 277, 0, 0, 797, 0, 908, 
	731, 737, 734, 851, 740, 743, 215, 746, 
	0, 0, 911, 0, 0, 279, 0, 0, 
	752, 0, 0, 0, 0, 914, 0, 0, 
	0, 800, 0, 289, 0, 857, 0, 0, 
	917, 920, 0, 0, 0, 0, 0, 533, 
	199, 0, 0, 0, 0, 0, 0, 536, 
	0, 539, 749, 434, 0, 542, 163, 297, 
	935, 935, 422, 935, 935, 935, 437, 545, 
	548, 935, 935, 935, 443, 860, 551, 935, 
	935, 317, 407, 935, 935, 935, 554, 935, 
	935, 446, 935, 863, 935, 935, 563, 935, 
	935, 935, 557, 935, 935, 935, 923, 935, 
	926, 560, 566, 572, 578, 569, 575, 935, 
	935, 935, 449, 935, 410, 587, 935, 935, 
	935, 581, 584, 935, 935, 935, 452, 455, 
	935, 935, 464, 467, 470, 935, 476, 935, 
	935, 935, 458, 935, 461, 935, 935, 473, 
	440, 935, 935, 935, 479, 935, 590, 935, 
	593, 935, 935, 596, 401, 935, 482, 935, 
	935, 485, 935, 599, 935, 935, 488, 935, 
	935, 935, 779, 935, 782, 929, 935, 935, 
	935, 935, 491, 935, 413, 935, 602, 935, 
	494, 935, 605, 608, 935, 428, 416, 419, 
	935, 866, 935, 935, 935, 497, 935, 935, 
	500, 395, 830, 611, 614, 620, 935, 935, 
	935, 935, 503, 617, 623, 935, 935, 932, 
	869, 872, 935, 935, 935, 875, 935, 878, 
	371, 380, 374, 383, 626, 629, 632, 935, 
	350, 935, 347, 635, 641, 887, 638, 935, 
	767, 770, 881, 644, 935, 761, 935, 764, 
	935, 935, 935, 773, 884, 935, 935, 776, 
	506, 935, 509, 935, 935, 935, 935, 890, 
	896, 935, 893, 899, 935, 935, 515, 512, 
	935, 935, 935, 935, 935, 935, 935, 935, 
	785, 833, 803, 806, 809, 812, 815, 818, 
	821, 824, 827, 935, 935, 935, 518, 902, 
	329, 935, 935, 353, 323, 647, 935, 935, 
	935, 935, 788, 650, 653, 935, 935, 521, 
	935, 935, 836, 656, 839, 842, 659, 845, 
	662, 848, 665, 668, 935, 758, 338, 935, 
	935, 335, 935, 935, 935, 524, 935, 935, 
	935, 935, 935, 794, 791, 671, 935, 935, 
	935, 935, 527, 674, 935, 935, 689, 704, 
	935, 935, 935, 935, 905, 677, 680, 683, 
	686, 692, 695, 701, 698, 707, 710, 716, 
	713, 719, 935, 935, 935, 935, 425, 935, 
	431, 935, 935, 722, 725, 935, 728, 935, 
	935, 935, 530, 935, 935, 797, 935, 908, 
	731, 737, 734, 851, 740, 743, 746, 935, 
	935, 911, 935, 755, 935, 935, 752, 935, 
	935, 935, 935, 914, 935, 935, 935, 800, 
	854, 935, 857, 935, 935, 917, 920, 935, 
	935, 935, 935, 935, 533, 935, 935, 935, 
	935, 935, 935, 536, 935, 539, 749, 434, 
	935, 542
};
static const short _lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};
static const short _lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};
static const short _lexer_eof_trans[] = {
	0, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 27, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 61, 1, 0, 149, 
	1, 1, 154, 155, 157, 158, 160, 160, 
	160, 164, 1, 166, 167, 168, 172, 174, 
	177, 179, 1, 187, 187, 191, 187, 187, 
	187, 187, 187, 187, 187, 187, 202, 207, 
	187, 187, 187, 187, 187, 187, 216, 187, 
	187, 225, 187, 187, 187, 187, 187, 233, 
	235, 239, 241, 187, 187, 187, 187, 187, 
	248, 187, 257, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 291, 
	297, 187, 187, 187, 187, 187, 304, 187, 
	187, 187, 310, 187, 187, 316, 187, 187, 
	187, 187, 187, 187, 187, 325, 187, 187, 
	331, 333, 187, 187, 345, 187, 187, 187, 
	187, 187, 187, 354, 360, 187, 187, 187, 
	365, 367, 187, 187, 187, 187, 374, 187, 
	187, 187, 187, 381, 384, 187, 389, 396, 
	400, 404, 187, 407, 411, 187, 187, 187, 
	187, 187, 419, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 439, 
	187, 187, 187, 187, 187, 187, 451, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 480, 187, 187, 486, 
	187, 490, 187, 493, 497, 187, 500, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	516, 187, 187, 187, 187, 187, 524, 187, 
	187, 187, 187, 187, 536, 539, 543, 545, 
	547, 549, 553, 555, 557, 187, 187, 187, 
	187, 571, 187, 187, 187, 187, 187, 579, 
	187, 187, 187, 187, 187, 591, 187, 187, 
	187, 187, 598, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 612, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	625, 187, 187, 187, 187, 187, 187, 187, 
	187, 639, 640, 179, 1, 187, 187, 191, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	202, 207, 187, 187, 187, 187, 187, 187, 
	216, 187, 187, 225, 187, 187, 187, 187, 
	187, 233, 235, 239, 241, 187, 187, 187, 
	187, 187, 248, 187, 257, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 291, 297, 187, 187, 187, 187, 187, 
	304, 187, 187, 187, 310, 187, 187, 316, 
	187, 187, 187, 187, 187, 187, 187, 325, 
	187, 187, 331, 333, 187, 187, 345, 187, 
	187, 187, 187, 187, 187, 354, 360, 187, 
	187, 187, 365, 367, 187, 187, 187, 187, 
	374, 187, 187, 187, 187, 381, 384, 187, 
	389, 396, 400, 404, 187, 407, 411, 187, 
	187, 187, 187, 187, 419, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 439, 187, 187, 187, 187, 187, 187, 
	451, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 480, 187, 
	187, 486, 187, 490, 187, 493, 497, 187, 
	500, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 516, 187, 187, 187, 187, 187, 
	524, 187, 187, 187, 187, 187, 536, 539, 
	543, 545, 547, 549, 553, 555, 557, 187, 
	187, 187, 187, 571, 187, 187, 187, 187, 
	187, 579, 187, 187, 187, 187, 187, 591, 
	187, 187, 187, 187, 598, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	612, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 625, 187, 187, 187, 187, 187, 
	187, 187, 187
};
static const int lexer_start = 38;
static const int lexer_error = 0;
static const int lexer_en_main = 38;
static void set_scan_buf( char *text, bool _at_bol )
{
 Str_set( input_buf, text );
 p = Str_data(input_buf);
 at_bol = _at_bol;
 pe = Str_data(input_buf) + Str_len(input_buf);
 eof = pe;
	{
	cs = lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}
}
static tokid_t _scan_get( void )
{
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;
	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _lexer_actions + _lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
	{ts = p;}
	break;
		}
	}
	_widec = (*p);
	_klen = _lexer_cond_lengths[cs];
	_keys = _lexer_cond_keys + (_lexer_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _lexer_cond_spaces[_lexer_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
 at_bol  ) _widec += 256;
		break;
	}
				}
				break;
			}
		}
	}
	_keys = _lexer_trans_keys + _lexer_key_offsets[cs];
	_trans = _lexer_index_offsets[cs];
	_klen = _lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}
	_klen = _lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}
_match:
	_trans = _lexer_indicies[_trans];
_eof_trans:
	cs = _lexer_trans_targs[_trans];
	if ( _lexer_trans_actions[_trans] == 0 )
		goto _again;
	_acts = _lexer_actions + _lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
	{te = p+1;}
	break;
	case 3:
	{act = 1;}
	break;
	case 4:
	{act = 5;}
	break;
	case 5:
	{act = 37;}
	break;
	case 6:
	{act = 38;}
	break;
	case 7:
	{act = 39;}
	break;
	case 8:
	{act = 40;}
	break;
	case 9:
	{act = 41;}
	break;
	case 10:
	{act = 42;}
	break;
	case 11:
	{act = 43;}
	break;
	case 12:
	{act = 44;}
	break;
	case 13:
	{act = 45;}
	break;
	case 14:
	{act = 46;}
	break;
	case 15:
	{act = 47;}
	break;
	case 16:
	{act = 48;}
	break;
	case 17:
	{act = 49;}
	break;
	case 18:
	{act = 50;}
	break;
	case 19:
	{act = 51;}
	break;
	case 20:
	{act = 52;}
	break;
	case 21:
	{act = 53;}
	break;
	case 22:
	{act = 54;}
	break;
	case 23:
	{act = 55;}
	break;
	case 24:
	{act = 56;}
	break;
	case 25:
	{act = 57;}
	break;
	case 26:
	{act = 58;}
	break;
	case 27:
	{act = 59;}
	break;
	case 28:
	{act = 60;}
	break;
	case 29:
	{act = 61;}
	break;
	case 30:
	{act = 62;}
	break;
	case 31:
	{act = 63;}
	break;
	case 32:
	{act = 64;}
	break;
	case 33:
	{act = 65;}
	break;
	case 34:
	{act = 66;}
	break;
	case 35:
	{act = 67;}
	break;
	case 36:
	{act = 68;}
	break;
	case 37:
	{act = 69;}
	break;
	case 38:
	{act = 70;}
	break;
	case 39:
	{act = 71;}
	break;
	case 40:
	{act = 72;}
	break;
	case 41:
	{act = 73;}
	break;
	case 42:
	{act = 74;}
	break;
	case 43:
	{act = 94;}
	break;
	case 44:
	{act = 95;}
	break;
	case 45:
	{act = 96;}
	break;
	case 46:
	{act = 97;}
	break;
	case 47:
	{act = 98;}
	break;
	case 48:
	{act = 99;}
	break;
	case 49:
	{act = 100;}
	break;
	case 50:
	{act = 101;}
	break;
	case 51:
	{act = 102;}
	break;
	case 52:
	{act = 103;}
	break;
	case 53:
	{act = 104;}
	break;
	case 54:
	{act = 105;}
	break;
	case 55:
	{act = 106;}
	break;
	case 56:
	{act = 107;}
	break;
	case 57:
	{act = 108;}
	break;
	case 58:
	{act = 109;}
	break;
	case 59:
	{act = 110;}
	break;
	case 60:
	{act = 111;}
	break;
	case 61:
	{act = 112;}
	break;
	case 62:
	{act = 113;}
	break;
	case 63:
	{act = 114;}
	break;
	case 64:
	{act = 115;}
	break;
	case 65:
	{act = 116;}
	break;
	case 66:
	{act = 117;}
	break;
	case 67:
	{act = 118;}
	break;
	case 68:
	{act = 119;}
	break;
	case 69:
	{act = 120;}
	break;
	case 70:
	{act = 121;}
	break;
	case 71:
	{act = 122;}
	break;
	case 72:
	{act = 123;}
	break;
	case 73:
	{act = 124;}
	break;
	case 74:
	{act = 125;}
	break;
	case 75:
	{act = 126;}
	break;
	case 76:
	{act = 127;}
	break;
	case 77:
	{act = 128;}
	break;
	case 78:
	{act = 129;}
	break;
	case 79:
	{act = 134;}
	break;
	case 80:
	{act = 135;}
	break;
	case 81:
	{act = 136;}
	break;
	case 82:
	{act = 137;}
	break;
	case 83:
	{act = 138;}
	break;
	case 84:
	{act = 139;}
	break;
	case 85:
	{act = 141;}
	break;
	case 86:
	{act = 142;}
	break;
	case 87:
	{act = 143;}
	break;
	case 88:
	{act = 144;}
	break;
	case 89:
	{act = 145;}
	break;
	case 90:
	{act = 146;}
	break;
	case 91:
	{act = 147;}
	break;
	case 92:
	{act = 148;}
	break;
	case 93:
	{act = 149;}
	break;
	case 94:
	{act = 150;}
	break;
	case 95:
	{act = 151;}
	break;
	case 96:
	{act = 152;}
	break;
	case 97:
	{act = 153;}
	break;
	case 98:
	{act = 154;}
	break;
	case 99:
	{act = 155;}
	break;
	case 100:
	{act = 156;}
	break;
	case 101:
	{act = 157;}
	break;
	case 102:
	{act = 158;}
	break;
	case 103:
	{act = 159;}
	break;
	case 104:
	{act = 160;}
	break;
	case 105:
	{act = 161;}
	break;
	case 106:
	{act = 162;}
	break;
	case 107:
	{act = 163;}
	break;
	case 108:
	{act = 164;}
	break;
	case 109:
	{act = 165;}
	break;
	case 110:
	{act = 166;}
	break;
	case 111:
	{act = 167;}
	break;
	case 112:
	{act = 168;}
	break;
	case 113:
	{act = 169;}
	break;
	case 114:
	{act = 170;}
	break;
	case 115:
	{act = 171;}
	break;
	case 116:
	{act = 172;}
	break;
	case 117:
	{act = 173;}
	break;
	case 118:
	{act = 174;}
	break;
	case 119:
	{act = 175;}
	break;
	case 120:
	{act = 176;}
	break;
	case 121:
	{act = 177;}
	break;
	case 122:
	{act = 178;}
	break;
	case 123:
	{act = 179;}
	break;
	case 124:
	{act = 180;}
	break;
	case 125:
	{act = 181;}
	break;
	case 126:
	{act = 182;}
	break;
	case 127:
	{act = 183;}
	break;
	case 128:
	{act = 184;}
	break;
	case 129:
	{act = 186;}
	break;
	case 130:
	{act = 187;}
	break;
	case 131:
	{act = 189;}
	break;
	case 132:
	{act = 190;}
	break;
	case 133:
	{act = 191;}
	break;
	case 134:
	{act = 193;}
	break;
	case 135:
	{act = 194;}
	break;
	case 136:
	{act = 196;}
	break;
	case 137:
	{act = 197;}
	break;
	case 138:
	{act = 198;}
	break;
	case 139:
	{act = 199;}
	break;
	case 140:
	{act = 201;}
	break;
	case 141:
	{act = 202;}
	break;
	case 142:
	{act = 203;}
	break;
	case 143:
	{act = 204;}
	break;
	case 144:
	{act = 205;}
	break;
	case 145:
	{act = 206;}
	break;
	case 146:
	{act = 207;}
	break;
	case 147:
	{act = 208;}
	break;
	case 148:
	{act = 209;}
	break;
	case 149:
	{act = 210;}
	break;
	case 150:
	{act = 211;}
	break;
	case 151:
	{act = 212;}
	break;
	case 152:
	{act = 213;}
	break;
	case 153:
	{act = 214;}
	break;
	case 154:
	{act = 215;}
	break;
	case 155:
	{act = 216;}
	break;
	case 156:
	{act = 217;}
	break;
	case 157:
	{act = 218;}
	break;
	case 158:
	{act = 219;}
	break;
	case 159:
	{act = 220;}
	break;
	case 160:
	{act = 221;}
	break;
	case 161:
	{act = 222;}
	break;
	case 162:
	{act = 223;}
	break;
	case 163:
	{act = 224;}
	break;
	case 164:
	{act = 225;}
	break;
	case 165:
	{act = 226;}
	break;
	case 166:
	{act = 227;}
	break;
	case 167:
	{act = 228;}
	break;
	case 168:
	{act = 229;}
	break;
	case 169:
	{act = 230;}
	break;
	case 170:
	{act = 231;}
	break;
	case 171:
	{act = 232;}
	break;
	case 172:
	{act = 233;}
	break;
	case 173:
	{act = 234;}
	break;
	case 174:
	{act = 247;}
	break;
	case 175:
	{act = 248;}
	break;
	case 176:
	{act = 249;}
	break;
	case 177:
	{act = 250;}
	break;
	case 178:
	{act = 251;}
	break;
	case 179:
	{act = 252;}
	break;
	case 180:
	{act = 253;}
	break;
	case 181:
	{act = 254;}
	break;
	case 182:
	{act = 255;}
	break;
	case 183:
	{act = 256;}
	break;
	case 184:
	{act = 257;}
	break;
	case 185:
	{act = 258;}
	break;
	case 186:
	{act = 259;}
	break;
	case 187:
	{act = 260;}
	break;
	case 188:
	{act = 261;}
	break;
	case 189:
	{act = 262;}
	break;
	case 190:
	{act = 263;}
	break;
	case 191:
	{act = 264;}
	break;
	case 192:
	{act = 265;}
	break;
	case 193:
	{act = 266;}
	break;
	case 194:
	{act = 267;}
	break;
	case 195:
	{act = 268;}
	break;
	case 196:
	{act = 269;}
	break;
	case 197:
	{act = 270;}
	break;
	case 198:
	{act = 271;}
	break;
	case 199:
	{act = 272;}
	break;
	case 200:
	{act = 273;}
	break;
	case 201:
	{act = 274;}
	break;
	case 202:
	{act = 275;}
	break;
	case 203:
	{act = 276;}
	break;
	case 204:
	{act = 277;}
	break;
	case 205:
	{act = 278;}
	break;
	case 206:
	{act = 279;}
	break;
	case 207:
	{act = 280;}
	break;
	case 208:
	{act = 281;}
	break;
	case 209:
	{act = 284;}
	break;
	case 210:
	{act = 286;}
	break;
	case 211:
	{act = 288;}
	break;
	case 212:
	{act = 290;}
	break;
	case 213:
	{act = 292;}
	break;
	case 214:
	{act = 296;}
	break;
	case 215:
	{te = p+1;{
	sym.tok = TK_NEWLINE;
	;
	{p++; goto _out; }
}}
	break;
	case 216:
	{te = p+1;{
	sym.tok = TK_CONST_EXPR;
	;
	{p++; goto _out; }
}}
	break;
	case 217:
	{te = p+1;{
	sym.tok = TK_LOG_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 218:
	{te = p+1;{
	sym.tok = TK_RPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 219:
	{te = p+1;{
	sym.tok = TK_PLUS;
	;
	{p++; goto _out; }
}}
	break;
	case 220:
	{te = p+1;{
	sym.tok = TK_COMMA;
	;
	{p++; goto _out; }
}}
	break;
	case 221:
	{te = p+1;{
	sym.tok = TK_MINUS;
	;
	{p++; goto _out; }
}}
	break;
	case 222:
	{te = p+1;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 223:
	{te = p+1;{
	sym.tok = TK_DIVIDE;
	;
	{p++; goto _out; }
}}
	break;
	case 224:
	{te = p+1;{
	sym.tok = TK_COLON;
	;
	{p++; goto _out; }
}}
	break;
	case 225:
	{te = p+1;{
	sym.tok = TK_LEFT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 226:
	{te = p+1;{
	sym.tok = TK_LESS_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 227:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 228:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 229:
	{te = p+1;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 230:
	{te = p+1;{
	sym.tok = TK_RIGHT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 231:
	{te = p+1;{
	sym.tok = TK_GREATER_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 232:
	{te = p+1;{
	sym.tok = TK_QUESTION;
	;
	{p++; goto _out; }
}}
	break;
	case 233:
	{te = p+1;{
	sym.tok = TK_LSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 234:
	{te = p+1;{
	sym.tok = TK_RSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 235:
	{te = p+1;{
	sym.tok = TK_BIN_XOR;
	;
	{p++; goto _out; }
}}
	break;
	case 236:
	{te = p+1;{
	sym.tok = TK_POWER;
	;
	{p++; goto _out; }
}}
	break;
	case 237:
	{te = p+1;{
	sym.tok = TK_LCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 238:
	{te = p+1;{
	sym.tok = TK_LOG_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 239:
	{te = p+1;{
	sym.tok = TK_RCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 240:
	{te = p+1;{
	sym.tok = TK_BIN_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 241:
	{te = p+1;{
	sym.tok = TK_B1;
	;
	{p++; goto _out; }
}}
	break;
	case 242:
	{te = p+1;{
	sym.tok = TK_C1;
	;
	{p++; goto _out; }
}}
	break;
	case 243:
	{te = p+1;{
	sym.tok = TK_D1;
	;
	{p++; goto _out; }
}}
	break;
	case 244:
	{te = p+1;{
	sym.tok = TK_E1;
	;
	{p++; goto _out; }
}}
	break;
	case 245:
	{te = p+1;{
	sym.tok = TK_H1;
	;
	{p++; goto _out; }
}}
	break;
	case 246:
	{te = p+1;{
	sym.tok = TK_L1;
	;
	{p++; goto _out; }
}}
	break;
	case 247:
	{te = p+1;{
	sym.tok = TK_A1;
	;
	{p++; goto _out; }
}}
	break;
	case 248:
	{te = p+1;{
	sym.tok = TK_F1;
	;
	{p++; goto _out; }
}}
	break;
	case 249:
	{te = p+1;{
	sym.tok = TK_BC1;
	;
	{p++; goto _out; }
}}
	break;
	case 250:
	{te = p+1;{
	sym.tok = TK_DE1;
	;
	{p++; goto _out; }
}}
	break;
	case 251:
	{te = p+1;{
	sym.tok = TK_HL1;
	;
	{p++; goto _out; }
}}
	break;
	case 252:
	{te = p+1;{
	sym.tok = TK_AF1;
	;
	{p++; goto _out; }
}}
	break;
	case 253:
	{te = p+1;{
	sym.tok = TK_IND_BC;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 254:
	{te = p+1;{
	sym.tok = TK_IND_DE;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 255:
	{te = p+1;{
	sym.tok = TK_IND_IX;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 256:
	{te = p+1;{
	sym.tok = TK_IND_IY;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 257:
	{te = p+1;{
	sym.tok = TK_IND_HL;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 258:
	{te = p+1;{
	sym.tok = TK_IND_SP;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 259:
	{te = p+1;{
	sym.tok = TK_IND_C;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 260:
	{te = p+1;{
	sym.tok = TK_DS_B;
	;
	{p++; goto _out; }
}}
	break;
	case 261:
	{te = p+1;{
	sym.tok = TK_DS_W;
	;
	{p++; goto _out; }
}}
	break;
	case 262:
	{te = p+1;{
	sym.tok = TK_DS_P;
	;
	{p++; goto _out; }
}}
	break;
	case 263:
	{te = p+1;{
	sym.tok = TK_DS_Q;
	;
	{p++; goto _out; }
}}
	break;
	case 264:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CCF1;
		sym.tok_opcode = TK_CCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 265:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLA1;
		sym.tok_opcode = TK_RLA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA1;
	}
	{p++; goto _out; }
}}
	break;
	case 266:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLCA1;
		sym.tok_opcode = TK_RLCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 267:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRA1;
		sym.tok_opcode = TK_RRA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA1;
	}
	{p++; goto _out; }
}}
	break;
	case 268:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRCA1;
		sym.tok_opcode = TK_RRCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 269:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_SCF1;
		sym.tok_opcode = TK_SCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 270:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_WAIT;
		sym.tok_opcode = TK_CU_WAIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_WAIT;
	}
	{p++; goto _out; }
}}
	break;
	case 271:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_MOVE;
		sym.tok_opcode = TK_CU_MOVE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_MOVE;
	}
	{p++; goto _out; }
}}
	break;
	case 272:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_STOP;
		sym.tok_opcode = TK_CU_STOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_STOP;
	}
	{p++; goto _out; }
}}
	break;
	case 273:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_NOP;
		sym.tok_opcode = TK_CU_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_NOP;
	}
	{p++; goto _out; }
}}
	break;
	case 274:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR0;
		sym.tok_opcode = TK_DMA_WR0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR0;
	}
	{p++; goto _out; }
}}
	break;
	case 275:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR1;
		sym.tok_opcode = TK_DMA_WR1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR1;
	}
	{p++; goto _out; }
}}
	break;
	case 276:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR2;
		sym.tok_opcode = TK_DMA_WR2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR2;
	}
	{p++; goto _out; }
}}
	break;
	case 277:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR3;
		sym.tok_opcode = TK_DMA_WR3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR3;
	}
	{p++; goto _out; }
}}
	break;
	case 278:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR4;
		sym.tok_opcode = TK_DMA_WR4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR4;
	}
	{p++; goto _out; }
}}
	break;
	case 279:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR5;
		sym.tok_opcode = TK_DMA_WR5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR5;
	}
	{p++; goto _out; }
}}
	break;
	case 280:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR6;
		sym.tok_opcode = TK_DMA_WR6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR6;
	}
	{p++; goto _out; }
}}
	break;
	case 281:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_CMD;
		sym.tok_opcode = TK_DMA_CMD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_CMD;
	}
	{p++; goto _out; }
}}
	break;
	case 282:
	{te = p+1;}
	break;
	case 283:
	{te = p+1;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 284:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 285:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 3, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 286:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = 0;
  if ( get_sym_string() )
  {
   STR_DEFINE(string, STR_SIZE);
   Str_set_bytes(string, ts, te-ts);
   Str_compress_escapes(string);
   if (Str_len(string) == 1)
    sym.number = Str_data(string)[0];
   else
    error_invalid_squoted_string();
   STR_DELETE(string);
  }
  else
  {
   error_invalid_squoted_string();
  }
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 287:
	{te = p+1;{
  sym.tok = TK_STRING;
  if ( ! get_sym_string() )
   error_unclosed_string();
  {p++; goto _out; }
 }}
	break;
	case 288:
	{te = p+1;{
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 289:
	{te = p;p--;{
	sym.tok = TK_LOG_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 290:
	{te = p;p--;{
	sym.tok = TK_BIN_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 291:
	{te = p;p--;{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 292:
	{te = p;p--;{
	sym.tok = TK_MULTIPLY;
	;
	{p++; goto _out; }
}}
	break;
	case 293:
	{te = p;p--;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 294:
	{te = p;p--;{
	sym.tok = TK_LESS;
	;
	{p++; goto _out; }
}}
	break;
	case 295:
	{te = p;p--;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 296:
	{te = p;p--;{
	sym.tok = TK_GREATER;
	;
	{p++; goto _out; }
}}
	break;
	case 297:
	{te = p;p--;{
	sym.tok = TK_BIN_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 298:
	{te = p;p--;{
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}}
	break;
	case 299:
	{te = p;p--;{
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}}
	break;
	case 300:
	{te = p;p--;{
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}}
	break;
	case 301:
	{te = p;p--;{
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}}
	break;
	case 302:
	{te = p;p--;{
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}}
	break;
	case 303:
	{te = p;p--;{
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}}
	break;
	case 304:
	{te = p;p--;{
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}}
	break;
	case 305:
	{te = p;p--;{
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}}
	break;
	case 306:
	{te = p;p--;{
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}}
	break;
	case 307:
	{te = p;p--;{
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}}
	break;
	case 308:
	{te = p;p--;{
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}}
	break;
	case 309:
	{te = p;p--;{
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}}
	break;
	case 310:
	{te = p;p--;{
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}}
	break;
	case 311:
	{te = p;p--;{
	if (opts.cpu & CPU_Z80_ZXN) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}}
	break;
	case 312:
	{te = p;p--;{
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}}
	break;
	case 313:
	{te = p;p--;{
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}}
	break;
	case 314:
	{te = p;p--;{
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}}
	break;
	case 315:
	{te = p;p--;{
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}}
	break;
	case 316:
	{te = p;p--;{
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}}
	break;
	case 317:
	{te = p;p--;{
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}}
	break;
	case 318:
	{te = p;p--;{
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}}
	break;
	case 319:
	{te = p;p--;{
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}}
	break;
	case 320:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}}
	break;
	case 321:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}}
	break;
	case 322:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}}
	break;
	case 323:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}}
	break;
	case 324:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}}
	break;
	case 325:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}}
	break;
	case 326:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}}
	break;
	case 327:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}}
	break;
	case 328:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}}
	break;
	case 329:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}}
	break;
	case 330:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}}
	break;
	case 331:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}}
	break;
	case 332:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}}
	break;
	case 333:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}}
	break;
	case 334:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}}
	break;
	case 335:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}}
	break;
	case 336:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}}
	break;
	case 337:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}}
	break;
	case 338:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}}
	break;
	case 339:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}}
	break;
	case 340:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}}
	break;
	case 341:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}}
	break;
	case 342:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}}
	break;
	case 343:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}}
	break;
	case 344:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}}
	break;
	case 345:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}}
	break;
	case 346:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}}
	break;
	case 347:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}}
	break;
	case 348:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}}
	break;
	case 349:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}}
	break;
	case 350:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}}
	break;
	case 351:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}}
	break;
	case 352:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}}
	break;
	case 353:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}}
	break;
	case 354:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}}
	break;
	case 355:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}}
	break;
	case 356:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}}
	break;
	case 357:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}}
	break;
	case 358:
	{te = p;p--;}
	break;
	case 359:
	{te = p;p--;{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 360:
	{te = p;p--;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 361:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 362:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 363:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 364:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 365:
	{{p = ((te))-1;}{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 366:
	{{p = ((te))-1;}{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 367:
	{{p = ((te))-1;}{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 368:
	{{p = ((te))-1;}{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 369:
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 5:
	{{p = ((te))-1;}
	sym.tok = TK_MOD;
	;
	{p++; goto _out; }
}
	break;
	case 37:
	{{p = ((te))-1;}
	sym.tok = TK_NZ;
	;
	{p++; goto _out; }
}
	break;
	case 38:
	{{p = ((te))-1;}
	sym.tok = TK_Z;
	;
	{p++; goto _out; }
}
	break;
	case 39:
	{{p = ((te))-1;}
	sym.tok = TK_NC;
	;
	{p++; goto _out; }
}
	break;
	case 40:
	{{p = ((te))-1;}
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}
	break;
	case 41:
	{{p = ((te))-1;}
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}
	break;
	case 42:
	{{p = ((te))-1;}
	sym.tok = TK_PE;
	;
	{p++; goto _out; }
}
	break;
	case 43:
	{{p = ((te))-1;}
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}
	break;
	case 44:
	{{p = ((te))-1;}
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}
	break;
	case 45:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LZ;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 46:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LO;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 47:
	{{p = ((te))-1;}
	sym.tok = TK_NV;
	;
	{p++; goto _out; }
}
	break;
	case 48:
	{{p = ((te))-1;}
	sym.tok = TK_V;
	;
	{p++; goto _out; }
}
	break;
	case 49:
	{{p = ((te))-1;}
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}
	break;
	case 50:
	{{p = ((te))-1;}
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}
	break;
	case 51:
	{{p = ((te))-1;}
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}
	break;
	case 52:
	{{p = ((te))-1;}
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}
	break;
	case 53:
	{{p = ((te))-1;}
	sym.tok = TK_IXH;
	;
	{p++; goto _out; }
}
	break;
	case 54:
	{{p = ((te))-1;}
	sym.tok = TK_IYH;
	;
	{p++; goto _out; }
}
	break;
	case 55:
	{{p = ((te))-1;}
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}
	break;
	case 56:
	{{p = ((te))-1;}
	sym.tok = TK_IXL;
	;
	{p++; goto _out; }
}
	break;
	case 57:
	{{p = ((te))-1;}
	sym.tok = TK_IYL;
	;
	{p++; goto _out; }
}
	break;
	case 58:
	{{p = ((te))-1;}
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}
	break;
	case 59:
	{{p = ((te))-1;}
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}
	break;
	case 60:
	{{p = ((te))-1;}
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}
	break;
	case 61:
	{{p = ((te))-1;}
	sym.tok = TK_IIR;
	;
	{p++; goto _out; }
}
	break;
	case 62:
	{{p = ((te))-1;}
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}
	break;
	case 63:
	{{p = ((te))-1;}
	sym.tok = TK_EIR;
	;
	{p++; goto _out; }
}
	break;
	case 64:
	{{p = ((te))-1;}
	if (opts.cpu & CPU_Z80_ZXN) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 65:
	{{p = ((te))-1;}
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}
	break;
	case 66:
	{{p = ((te))-1;}
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}
	break;
	case 67:
	{{p = ((te))-1;}
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}
	break;
	case 68:
	{{p = ((te))-1;}
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}
	break;
	case 69:
	{{p = ((te))-1;}
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}
	break;
	case 70:
	{{p = ((te))-1;}
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}
	break;
	case 71:
	{{p = ((te))-1;}
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}
	break;
	case 72:
	{{p = ((te))-1;}
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}
	break;
	case 73:
	{{p = ((te))-1;}
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}
	break;
	case 74:
	{{p = ((te))-1;}
	sym.tok = TK_XPC;
	;
	{p++; goto _out; }
}
	break;
	case 94:
	{{p = ((te))-1;}
	sym.tok = TK_A32;
	;
	{p++; goto _out; }
}
	break;
	case 95:
	{{p = ((te))-1;}
	sym.tok = TK_DEHL;
	;
	{p++; goto _out; }
}
	break;
	case 96:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALIGN;
		sym.tok_opcode = TK_ALIGN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALIGN;
	}
	{p++; goto _out; }
}
	break;
	case 97:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BINARY;
		sym.tok_opcode = TK_BINARY;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BINARY;
	}
	{p++; goto _out; }
}
	break;
	case 98:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_LINE;
		sym.tok_opcode = TK_C_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 99:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFB;
		sym.tok_opcode = TK_DEFB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFB;
	}
	{p++; goto _out; }
}
	break;
	case 100:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFC;
		sym.tok_opcode = TK_DEFC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFC;
	}
	{p++; goto _out; }
}
	break;
	case 101:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFGROUP;
		sym.tok_opcode = TK_DEFGROUP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFGROUP;
	}
	{p++; goto _out; }
}
	break;
	case 102:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFINE;
		sym.tok_opcode = TK_DEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 103:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFM;
		sym.tok_opcode = TK_DEFM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFM;
	}
	{p++; goto _out; }
}
	break;
	case 104:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFQ;
		sym.tok_opcode = TK_DEFQ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFQ;
	}
	{p++; goto _out; }
}
	break;
	case 105:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFS;
		sym.tok_opcode = TK_DEFS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFS;
	}
	{p++; goto _out; }
}
	break;
	case 106:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFVARS;
		sym.tok_opcode = TK_DEFVARS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFVARS;
	}
	{p++; goto _out; }
}
	break;
	case 107:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFW;
		sym.tok_opcode = TK_DEFW;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFW;
	}
	{p++; goto _out; }
}
	break;
	case 108:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEPHASE;
		sym.tok_opcode = TK_DEPHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEPHASE;
	}
	{p++; goto _out; }
}
	break;
	case 109:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELSE;
		sym.tok_opcode = TK_ELSE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELSE;
	}
	{p++; goto _out; }
}
	break;
	case 110:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ENDIF;
		sym.tok_opcode = TK_ENDIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ENDIF;
	}
	{p++; goto _out; }
}
	break;
	case 111:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXTERN;
		sym.tok_opcode = TK_EXTERN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXTERN;
	}
	{p++; goto _out; }
}
	break;
	case 112:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_GLOBAL;
		sym.tok_opcode = TK_GLOBAL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_GLOBAL;
	}
	{p++; goto _out; }
}
	break;
	case 113:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}
	break;
	case 114:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFDEF;
		sym.tok_opcode = TK_IFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 115:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFNDEF;
		sym.tok_opcode = TK_IFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 116:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INCLUDE;
		sym.tok_opcode = TK_INCLUDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INCLUDE;
	}
	{p++; goto _out; }
}
	break;
	case 117:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LIB;
		sym.tok_opcode = TK_LIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LIB;
	}
	{p++; goto _out; }
}
	break;
	case 118:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LINE;
		sym.tok_opcode = TK_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 119:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTOFF;
		sym.tok_opcode = TK_LSTOFF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTOFF;
	}
	{p++; goto _out; }
}
	break;
	case 120:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTON;
		sym.tok_opcode = TK_LSTON;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTON;
	}
	{p++; goto _out; }
}
	break;
	case 121:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MODULE;
		sym.tok_opcode = TK_MODULE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MODULE;
	}
	{p++; goto _out; }
}
	break;
	case 122:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORG;
		sym.tok_opcode = TK_ORG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORG;
	}
	{p++; goto _out; }
}
	break;
	case 123:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PHASE;
		sym.tok_opcode = TK_PHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PHASE;
	}
	{p++; goto _out; }
}
	break;
	case 124:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUBLIC;
		sym.tok_opcode = TK_PUBLIC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUBLIC;
	}
	{p++; goto _out; }
}
	break;
	case 125:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SECTION;
		sym.tok_opcode = TK_SECTION;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SECTION;
	}
	{p++; goto _out; }
}
	break;
	case 126:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UNDEFINE;
		sym.tok_opcode = TK_UNDEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UNDEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 127:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XDEF;
		sym.tok_opcode = TK_XDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XDEF;
	}
	{p++; goto _out; }
}
	break;
	case 128:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XLIB;
		sym.tok_opcode = TK_XLIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XLIB;
	}
	{p++; goto _out; }
}
	break;
	case 129:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XREF;
		sym.tok_opcode = TK_XREF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XREF;
	}
	{p++; goto _out; }
}
	break;
	case 134:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADC;
		sym.tok_opcode = TK_ADC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADC;
	}
	{p++; goto _out; }
}
	break;
	case 135:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADD;
		sym.tok_opcode = TK_ADD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADD;
	}
	{p++; goto _out; }
}
	break;
	case 136:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_AND;
		sym.tok_opcode = TK_AND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_AND;
	}
	{p++; goto _out; }
}
	break;
	case 137:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BIT;
		sym.tok_opcode = TK_BIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BIT;
	}
	{p++; goto _out; }
}
	break;
	case 138:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}
	break;
	case 139:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}
	break;
	case 141:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}
	break;
	case 142:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}
	break;
	case 143:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPDR;
		sym.tok_opcode = TK_CPDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPDR;
	}
	{p++; goto _out; }
}
	break;
	case 144:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}
	break;
	case 145:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPIR;
		sym.tok_opcode = TK_CPIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPIR;
	}
	{p++; goto _out; }
}
	break;
	case 146:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPL;
		sym.tok_opcode = TK_CPL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPL;
	}
	{p++; goto _out; }
}
	break;
	case 147:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAA;
		sym.tok_opcode = TK_DAA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAA;
	}
	{p++; goto _out; }
}
	break;
	case 148:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEC;
		sym.tok_opcode = TK_DEC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEC;
	}
	{p++; goto _out; }
}
	break;
	case 149:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DI;
		sym.tok_opcode = TK_DI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DI;
	}
	{p++; goto _out; }
}
	break;
	case 150:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DJNZ;
		sym.tok_opcode = TK_DJNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DJNZ;
	}
	{p++; goto _out; }
}
	break;
	case 151:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}
	break;
	case 152:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}
	break;
	case 153:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXX;
		sym.tok_opcode = TK_EXX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXX;
	}
	{p++; goto _out; }
}
	break;
	case 154:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HALT;
		sym.tok_opcode = TK_HALT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HALT;
	}
	{p++; goto _out; }
}
	break;
	case 155:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IM;
		sym.tok_opcode = TK_IM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IM;
	}
	{p++; goto _out; }
}
	break;
	case 156:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}
	break;
	case 157:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}
	break;
	case 158:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}
	break;
	case 159:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INDR;
		sym.tok_opcode = TK_INDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INDR;
	}
	{p++; goto _out; }
}
	break;
	case 160:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}
	break;
	case 161:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INIR;
		sym.tok_opcode = TK_INIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INIR;
	}
	{p++; goto _out; }
}
	break;
	case 162:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}
	break;
	case 163:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JR;
		sym.tok_opcode = TK_JR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JR;
	}
	{p++; goto _out; }
}
	break;
	case 164:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}
	break;
	case 165:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}
	break;
	case 166:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}
	break;
	case 167:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}
	break;
	case 168:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}
	break;
	case 169:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEG;
		sym.tok_opcode = TK_NEG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEG;
	}
	{p++; goto _out; }
}
	break;
	case 170:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NOP;
		sym.tok_opcode = TK_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NOP;
	}
	{p++; goto _out; }
}
	break;
	case 171:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}
	break;
	case 172:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDR;
		sym.tok_opcode = TK_OTDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDR;
	}
	{p++; goto _out; }
}
	break;
	case 173:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIR;
		sym.tok_opcode = TK_OTIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIR;
	}
	{p++; goto _out; }
}
	break;
	case 174:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}
	break;
	case 175:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTD;
		sym.tok_opcode = TK_OUTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTD;
	}
	{p++; goto _out; }
}
	break;
	case 176:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}
	break;
	case 177:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}
	break;
	case 178:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUSH;
		sym.tok_opcode = TK_PUSH;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUSH;
	}
	{p++; goto _out; }
}
	break;
	case 179:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RES;
		sym.tok_opcode = TK_RES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RES;
	}
	{p++; goto _out; }
}
	break;
	case 180:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}
	break;
	case 181:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETI;
		sym.tok_opcode = TK_RETI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETI;
	}
	{p++; goto _out; }
}
	break;
	case 182:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETN;
		sym.tok_opcode = TK_RETN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETN;
	}
	{p++; goto _out; }
}
	break;
	case 183:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}
	break;
	case 184:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}
	break;
	case 186:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}
	break;
	case 187:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}
	break;
	case 189:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLD;
		sym.tok_opcode = TK_RLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLD;
	}
	{p++; goto _out; }
}
	break;
	case 190:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}
	break;
	case 191:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}
	break;
	case 193:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}
	break;
	case 194:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}
	break;
	case 196:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRD;
		sym.tok_opcode = TK_RRD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRD;
	}
	{p++; goto _out; }
}
	break;
	case 197:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RST;
		sym.tok_opcode = TK_RST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RST;
	}
	{p++; goto _out; }
}
	break;
	case 198:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBC;
		sym.tok_opcode = TK_SBC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBC;
	}
	{p++; goto _out; }
}
	break;
	case 199:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}
	break;
	case 201:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}
	break;
	case 202:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLA;
		sym.tok_opcode = TK_SLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLA;
	}
	{p++; goto _out; }
}
	break;
	case 203:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLL;
		sym.tok_opcode = TK_SLL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLL;
	}
	{p++; goto _out; }
}
	break;
	case 204:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLI;
		sym.tok_opcode = TK_SLI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLI;
	}
	{p++; goto _out; }
}
	break;
	case 205:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRA;
		sym.tok_opcode = TK_SRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRA;
	}
	{p++; goto _out; }
}
	break;
	case 206:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRL;
		sym.tok_opcode = TK_SRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRL;
	}
	{p++; goto _out; }
}
	break;
	case 207:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUB;
		sym.tok_opcode = TK_SUB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUB;
	}
	{p++; goto _out; }
}
	break;
	case 208:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XOR;
		sym.tok_opcode = TK_XOR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XOR;
	}
	{p++; goto _out; }
}
	break;
	case 209:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAPNIB;
		sym.tok_opcode = TK_SWAPNIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAPNIB;
	}
	{p++; goto _out; }
}
	break;
	case 210:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}
	break;
	case 211:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTINB;
		sym.tok_opcode = TK_OUTINB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTINB;
	}
	{p++; goto _out; }
}
	break;
	case 212:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIX;
		sym.tok_opcode = TK_LDIX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIX;
	}
	{p++; goto _out; }
}
	break;
	case 213:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRX;
		sym.tok_opcode = TK_LDIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRX;
	}
	{p++; goto _out; }
}
	break;
	case 214:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDX;
		sym.tok_opcode = TK_LDDX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDX;
	}
	{p++; goto _out; }
}
	break;
	case 215:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDRX;
		sym.tok_opcode = TK_LDDRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDRX;
	}
	{p++; goto _out; }
}
	break;
	case 216:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRSCALE;
		sym.tok_opcode = TK_LDIRSCALE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRSCALE;
	}
	{p++; goto _out; }
}
	break;
	case 217:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDPIRX;
		sym.tok_opcode = TK_LDPIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDPIRX;
	}
	{p++; goto _out; }
}
	break;
	case 218:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}
	break;
	case 219:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILLDE;
		sym.tok_opcode = TK_FILLDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILLDE;
	}
	{p++; goto _out; }
}
	break;
	case 220:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MIRROR;
		sym.tok_opcode = TK_MIRROR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MIRROR;
	}
	{p++; goto _out; }
}
	break;
	case 221:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEXTREG;
		sym.tok_opcode = TK_NEXTREG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEXTREG;
	}
	{p++; goto _out; }
}
	break;
	case 222:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELDN;
		sym.tok_opcode = TK_PIXELDN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELDN;
	}
	{p++; goto _out; }
}
	break;
	case 223:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELAD;
		sym.tok_opcode = TK_PIXELAD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELAD;
	}
	{p++; goto _out; }
}
	break;
	case 224:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETAE;
		sym.tok_opcode = TK_SETAE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETAE;
	}
	{p++; goto _out; }
}
	break;
	case 225:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TEST;
		sym.tok_opcode = TK_TEST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TEST;
	}
	{p++; goto _out; }
}
	break;
	case 226:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}
	break;
	case 227:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU0;
		sym.tok_opcode = TK_MMU0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU0;
	}
	{p++; goto _out; }
}
	break;
	case 228:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU1;
		sym.tok_opcode = TK_MMU1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU1;
	}
	{p++; goto _out; }
}
	break;
	case 229:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU2;
		sym.tok_opcode = TK_MMU2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU2;
	}
	{p++; goto _out; }
}
	break;
	case 230:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU3;
		sym.tok_opcode = TK_MMU3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU3;
	}
	{p++; goto _out; }
}
	break;
	case 231:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU4;
		sym.tok_opcode = TK_MMU4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU4;
	}
	{p++; goto _out; }
}
	break;
	case 232:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU5;
		sym.tok_opcode = TK_MMU5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU5;
	}
	{p++; goto _out; }
}
	break;
	case 233:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU6;
		sym.tok_opcode = TK_MMU6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU6;
	}
	{p++; goto _out; }
}
	break;
	case 234:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU7;
		sym.tok_opcode = TK_MMU7;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU7;
	}
	{p++; goto _out; }
}
	break;
	case 247:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN0;
		sym.tok_opcode = TK_IN0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN0;
	}
	{p++; goto _out; }
}
	break;
	case 248:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MLT;
		sym.tok_opcode = TK_MLT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MLT;
	}
	{p++; goto _out; }
}
	break;
	case 249:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}
	break;
	case 250:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDMR;
		sym.tok_opcode = TK_OTDMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDMR;
	}
	{p++; goto _out; }
}
	break;
	case 251:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}
	break;
	case 252:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIMR;
		sym.tok_opcode = TK_OTIMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIMR;
	}
	{p++; goto _out; }
}
	break;
	case 253:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT0;
		sym.tok_opcode = TK_OUT0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT0;
	}
	{p++; goto _out; }
}
	break;
	case 254:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLP;
		sym.tok_opcode = TK_SLP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLP;
	}
	{p++; goto _out; }
}
	break;
	case 255:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}
	break;
	case 256:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TSTIO;
		sym.tok_opcode = TK_TSTIO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TSTIO;
	}
	{p++; goto _out; }
}
	break;
	case 257:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALTD;
		sym.tok_opcode = TK_ALTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALTD;
	}
	{p++; goto _out; }
}
	break;
	case 258:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BOOL;
		sym.tok_opcode = TK_BOOL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BOOL;
	}
	{p++; goto _out; }
}
	break;
	case 259:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IDET;
		sym.tok_opcode = TK_IDET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IDET;
	}
	{p++; goto _out; }
}
	break;
	case 260:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOE;
		sym.tok_opcode = TK_IOE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOE;
	}
	{p++; goto _out; }
}
	break;
	case 261:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOI;
		sym.tok_opcode = TK_IOI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOI;
	}
	{p++; goto _out; }
}
	break;
	case 262:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPRES;
		sym.tok_opcode = TK_IPRES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPRES;
	}
	{p++; goto _out; }
}
	break;
	case 263:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPSET;
		sym.tok_opcode = TK_IPSET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPSET;
	}
	{p++; goto _out; }
}
	break;
	case 264:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDSR;
		sym.tok_opcode = TK_LDDSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDSR;
	}
	{p++; goto _out; }
}
	break;
	case 265:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDISR;
		sym.tok_opcode = TK_LDISR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDISR;
	}
	{p++; goto _out; }
}
	break;
	case 266:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}
	break;
	case 267:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDR;
		sym.tok_opcode = TK_LSDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDR;
	}
	{p++; goto _out; }
}
	break;
	case 268:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIR;
		sym.tok_opcode = TK_LSIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIR;
	}
	{p++; goto _out; }
}
	break;
	case 269:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDDR;
		sym.tok_opcode = TK_LSDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDDR;
	}
	{p++; goto _out; }
}
	break;
	case 270:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIDR;
		sym.tok_opcode = TK_LSIDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIDR;
	}
	{p++; goto _out; }
}
	break;
	case 271:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MUL;
		sym.tok_opcode = TK_MUL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MUL;
	}
	{p++; goto _out; }
}
	break;
	case 272:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RDMODE;
		sym.tok_opcode = TK_RDMODE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RDMODE;
	}
	{p++; goto _out; }
}
	break;
	case 273:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETUSR;
		sym.tok_opcode = TK_SETUSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETUSR;
	}
	{p++; goto _out; }
}
	break;
	case 274:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SURES;
		sym.tok_opcode = TK_SURES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SURES;
	}
	{p++; goto _out; }
}
	break;
	case 275:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SYSCALL;
		sym.tok_opcode = TK_SYSCALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SYSCALL;
	}
	{p++; goto _out; }
}
	break;
	case 276:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMA;
		sym.tok_opcode = TK_UMA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMA;
	}
	{p++; goto _out; }
}
	break;
	case 277:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMS;
		sym.tok_opcode = TK_UMS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMS;
	}
	{p++; goto _out; }
}
	break;
	case 278:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_OZ;
		sym.tok_opcode = TK_CALL_OZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_OZ;
	}
	{p++; goto _out; }
}
	break;
	case 279:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_PKG;
		sym.tok_opcode = TK_CALL_PKG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_PKG;
	}
	{p++; goto _out; }
}
	break;
	case 280:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FPP;
		sym.tok_opcode = TK_FPP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FPP;
	}
	{p++; goto _out; }
}
	break;
	case 281:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INVOKE;
		sym.tok_opcode = TK_INVOKE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INVOKE;
	}
	{p++; goto _out; }
}
	break;
	case 284:
	{{p = ((te))-1;}
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }
	break;
	case 286:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 288:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 290:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 292:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 296:
	{{p = ((te))-1;}
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	}
	}
	break;
		}
	}
_again:
	_acts = _lexer_actions + _lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
	{ts = 0;}
	break;
		}
	}
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _lexer_eof_trans[cs] > 0 ) {
		_trans = _lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}
	_out: {}
	}
 return sym.tok;
}
