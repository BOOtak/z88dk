static const short _lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	309, 1, 310, 1, 311, 1, 312, 1, 
	313, 1, 314, 1, 315, 1, 316, 1, 
	317, 1, 318, 1, 319, 1, 320, 1, 
	321, 1, 322, 1, 323, 1, 324, 1, 
	325, 1, 326, 1, 327, 1, 328, 1, 
	329, 1, 330, 1, 331, 1, 332, 1, 
	333, 1, 334, 1, 335, 1, 336, 1, 
	337, 1, 338, 1, 339, 1, 340, 1, 
	341, 1, 342, 1, 343, 1, 344, 1, 
	345, 1, 346, 1, 347, 1, 348, 1, 
	349, 1, 350, 1, 351, 1, 352, 1, 
	353, 1, 354, 1, 355, 1, 356, 1, 
	357, 1, 358, 1, 359, 1, 360, 1, 
	361, 1, 362, 1, 363, 1, 364, 1, 
	365, 1, 366, 1, 367, 1, 368, 1, 
	369, 1, 370, 1, 371, 1, 372, 1, 
	373, 1, 374, 1, 375, 1, 376, 1, 
	377, 1, 378, 1, 379, 1, 380, 1, 
	381, 1, 382, 1, 383, 1, 384, 1, 
	385, 1, 386, 1, 387, 1, 388, 1, 
	389, 1, 390, 1, 391, 1, 392, 1, 
	393, 1, 394, 1, 395, 1, 396, 1, 
	397, 1, 398, 1, 399, 1, 400, 1, 
	401, 1, 402, 1, 403, 1, 404, 1, 
	405, 1, 406, 1, 407, 1, 408, 1, 
	409, 1, 410, 1, 411, 1, 412, 1, 
	413, 1, 414, 1, 415, 1, 416, 1, 
	417, 1, 418, 1, 419, 1, 420, 1, 
	421, 1, 422, 1, 423, 1, 424, 1, 
	425, 1, 426, 1, 427, 1, 428, 1, 
	429, 1, 430, 1, 431, 1, 432, 1, 
	433, 1, 434, 1, 435, 1, 436, 1, 
	437, 1, 438, 1, 439, 1, 440, 1, 
	441, 1, 442, 1, 443, 1, 444, 1, 
	445, 1, 446, 1, 447, 1, 448, 1, 
	449, 1, 450, 1, 451, 1, 452, 1, 
	453, 1, 454, 1, 455, 1, 456, 1, 
	457, 1, 458, 1, 459, 1, 460, 1, 
	461, 1, 462, 1, 463, 1, 464, 1, 
	465, 1, 466, 1, 467, 1, 468, 1, 
	469, 1, 470, 1, 471, 1, 472, 1, 
	473, 1, 474, 1, 475, 2, 2, 3, 
	2, 2, 4, 2, 2, 5, 2, 2, 
	6, 2, 2, 7, 2, 2, 8, 2, 
	2, 9, 2, 2, 10, 2, 2, 11, 
	2, 2, 12, 2, 2, 13, 2, 2, 
	14, 2, 2, 15, 2, 2, 16, 2, 
	2, 17, 2, 2, 18, 2, 2, 19, 
	2, 2, 20, 2, 2, 21, 2, 2, 
	22, 2, 2, 23, 2, 2, 24, 2, 
	2, 25, 2, 2, 26, 2, 2, 27, 
	2, 2, 28, 2, 2, 29, 2, 2, 
	30, 2, 2, 31, 2, 2, 32, 2, 
	2, 33, 2, 2, 34, 2, 2, 35, 
	2, 2, 36, 2, 2, 37, 2, 2, 
	38, 2, 2, 39, 2, 2, 40, 2, 
	2, 41, 2, 2, 42, 2, 2, 43, 
	2, 2, 44, 2, 2, 45, 2, 2, 
	46, 2, 2, 47, 2, 2, 48, 2, 
	2, 49, 2, 2, 50, 2, 2, 51, 
	2, 2, 52, 2, 2, 53, 2, 2, 
	54, 2, 2, 55, 2, 2, 56, 2, 
	2, 57, 2, 2, 58, 2, 2, 59, 
	2, 2, 60, 2, 2, 61, 2, 2, 
	62, 2, 2, 63, 2, 2, 64, 2, 
	2, 65, 2, 2, 66, 2, 2, 67, 
	2, 2, 68, 2, 2, 69, 2, 2, 
	70, 2, 2, 71, 2, 2, 72, 2, 
	2, 73, 2, 2, 74, 2, 2, 75, 
	2, 2, 76, 2, 2, 77, 2, 2, 
	78, 2, 2, 79, 2, 2, 80, 2, 
	2, 81, 2, 2, 82, 2, 2, 83, 
	2, 2, 84, 2, 2, 85, 2, 2, 
	86, 2, 2, 87, 2, 2, 88, 2, 
	2, 89, 2, 2, 90, 2, 2, 91, 
	2, 2, 92, 2, 2, 93, 2, 2, 
	94, 2, 2, 95, 2, 2, 96, 2, 
	2, 97, 2, 2, 98, 2, 2, 99, 
	2, 2, 100, 2, 2, 101, 2, 2, 
	102, 2, 2, 103, 2, 2, 104, 2, 
	2, 105, 2, 2, 106, 2, 2, 107, 
	2, 2, 108, 2, 2, 109, 2, 2, 
	110, 2, 2, 111, 2, 2, 112, 2, 
	2, 113, 2, 2, 114, 2, 2, 115, 
	2, 2, 116, 2, 2, 117, 2, 2, 
	118, 2, 2, 119, 2, 2, 120, 2, 
	2, 121, 2, 2, 122, 2, 2, 123, 
	2, 2, 124, 2, 2, 125, 2, 2, 
	126, 2, 2, 127, 2, 2, 128, 2, 
	2, 129, 2, 2, 130, 2, 2, 131, 
	2, 2, 132, 2, 2, 133, 2, 2, 
	134, 2, 2, 135, 2, 2, 136, 2, 
	2, 137, 2, 2, 138, 2, 2, 139, 
	2, 2, 140, 2, 2, 141, 2, 2, 
	142, 2, 2, 143, 2, 2, 144, 2, 
	2, 145, 2, 2, 146, 2, 2, 147, 
	2, 2, 148, 2, 2, 149, 2, 2, 
	150, 2, 2, 151, 2, 2, 152, 2, 
	2, 153, 2, 2, 154, 2, 2, 155, 
	2, 2, 156, 2, 2, 157, 2, 2, 
	158, 2, 2, 159, 2, 2, 160, 2, 
	2, 161, 2, 2, 162, 2, 2, 163, 
	2, 2, 164, 2, 2, 165, 2, 2, 
	166, 2, 2, 167, 2, 2, 168, 2, 
	2, 169, 2, 2, 170, 2, 2, 171, 
	2, 2, 172, 2, 2, 173, 2, 2, 
	174, 2, 2, 175, 2, 2, 176, 2, 
	2, 177, 2, 2, 178, 2, 2, 179, 
	2, 2, 180, 2, 2, 181, 2, 2, 
	182, 2, 2, 183, 2, 2, 184, 2, 
	2, 185, 2, 2, 186, 2, 2, 187, 
	2, 2, 188, 2, 2, 189, 2, 2, 
	190, 2, 2, 191, 2, 2, 192, 2, 
	2, 193, 2, 2, 194, 2, 2, 195, 
	2, 2, 196, 2, 2, 197, 2, 2, 
	198, 2, 2, 199, 2, 2, 200, 2, 
	2, 201, 2, 2, 202, 2, 2, 203, 
	2, 2, 204, 2, 2, 205, 2, 2, 
	206, 2, 2, 207, 2, 2, 208, 2, 
	2, 209, 2, 2, 210, 2, 2, 211, 
	2, 2, 212, 2, 2, 213, 2, 2, 
	214, 2, 2, 215, 2, 2, 216, 2, 
	2, 217, 2, 2, 218, 2, 2, 219, 
	2, 2, 220, 2, 2, 221, 2, 2, 
	222, 2, 2, 223, 2, 2, 224, 2, 
	2, 225, 2, 2, 226, 2, 2, 227, 
	2, 2, 228, 2, 2, 229, 2, 2, 
	230, 2, 2, 231, 2, 2, 232, 2, 
	2, 233, 2, 2, 234, 2, 2, 235, 
	2, 2, 236, 2, 2, 237, 2, 2, 
	238, 2, 2, 239, 2, 2, 240, 2, 
	2, 241, 2, 2, 242, 2, 2, 243, 
	2, 2, 244, 2, 2, 245, 2, 2, 
	246, 2, 2, 247, 2, 2, 248, 2, 
	2, 249, 2, 2, 250, 2, 2, 251, 
	2, 2, 252, 2, 2, 253, 2, 2, 
	254, 2, 2, 255, 2, 2, 256, 2, 
	2, 257, 2, 2, 258, 2, 2, 259, 
	2, 2, 260, 2, 2, 261, 2, 2, 
	262, 2, 2, 263, 2, 2, 264, 2, 
	2, 265, 2, 2, 266, 2, 2, 267, 
	2, 2, 268, 2, 2, 269, 2, 2, 
	270, 2, 2, 271, 2, 2, 272, 2, 
	2, 273, 2, 2, 274, 2, 2, 275, 
	2, 2, 276, 2, 2, 277, 2, 2, 
	278, 2, 2, 279, 2, 2, 280, 2, 
	2, 281, 2, 2, 282, 2, 2, 283, 
	2, 2, 284, 2, 2, 285, 2, 2, 
	286, 2, 2, 287, 2, 2, 288, 2, 
	2, 289, 2, 2, 290, 2, 2, 291, 
	2, 2, 292, 2, 2, 293, 2, 2, 
	294, 2, 2, 295, 2, 2, 296, 2, 
	2, 297, 2, 2, 298, 2, 2, 299, 
	2, 2, 300, 2, 2, 301, 2, 2, 
	302, 2, 2, 303, 2, 2, 304, 2, 
	2, 305, 2, 2, 306, 2, 2, 307, 
	2, 2, 308
};
static const short _lexer_cond_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 8, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 17, 21, 28, 35, 42, 
	49, 56, 63, 70, 77, 84, 91, 98, 
	105, 112, 119, 126, 133, 140, 147, 154, 
	161, 168, 175, 182, 189, 196, 203, 210, 
	217, 224, 231, 238, 245, 252, 259, 266, 
	273, 280, 287, 294, 301, 308, 315, 322, 
	329, 336, 343, 350, 357, 364, 371, 378, 
	385, 392, 399, 406, 413, 420, 427, 434, 
	441, 448, 455, 462, 469, 476, 483, 490, 
	497, 504, 511, 518, 525, 532, 539, 546, 
	553, 560, 567, 574, 581, 588, 595, 602, 
	609, 616, 623, 630, 637, 644, 651, 658, 
	665, 672, 679, 686, 693, 700, 707, 714, 
	721, 728, 735, 742, 749, 756, 763, 770, 
	777, 784, 791, 798, 805, 812, 819, 826, 
	833, 840, 847, 854, 861, 868, 875, 882, 
	889, 896, 903, 910, 917, 924, 931, 938, 
	945, 952, 959, 966, 973, 980, 987, 994, 
	1001, 1008, 1015, 1022, 1029, 1036, 1043, 1050, 
	1057, 1064, 1071, 1078, 1085, 1092, 1099, 1106, 
	1113, 1120, 1127, 1134, 1141, 1148, 1155, 1162, 
	1169, 1176, 1183, 1190, 1197, 1204, 1211, 1218, 
	1225, 1232, 1239, 1246, 1253, 1260, 1267, 1274, 
	1281, 1288, 1295, 1302, 1309, 1316, 1323, 1330, 
	1337, 1344, 1351, 1358, 1365, 1372, 1379, 1386, 
	1393, 1400, 1407, 1414, 1421, 1428, 1435, 1442, 
	1449, 1456, 1463, 1470, 1477, 1484, 1491, 1498, 
	1505, 1512, 1519, 1526, 1533, 1540, 1547, 1554, 
	1561, 1568, 1575, 1582, 1589, 1596, 1603, 1610, 
	1617, 1624, 1631, 1638, 1645, 1652, 1659, 1666, 
	1673, 1680, 1687, 1694, 1701, 1708, 1715, 1722, 
	1729, 1736, 1743, 1750, 1757, 1764, 1771, 1778, 
	1785, 1792, 1799, 1806, 1813, 1820, 1827, 1834, 
	1841, 1848, 1855, 1862, 1869, 1876, 1883, 1890, 
	1897, 1904, 1911, 1918, 1925, 1932, 1939, 1946, 
	1953, 1960, 1967, 1974, 1981, 1988, 1995, 2002, 
	2009, 2016, 2023, 2030, 2037, 2044, 2051, 2058, 
	2065, 2072, 2079, 2086, 2093, 2100, 2107, 2114, 
	2121, 2128, 2135, 2142, 2149
};
static const char _lexer_cond_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 3, 4, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 4, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7
};
static const short _lexer_cond_keys[] = {
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 58, 58, 
	46, 46, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 48, 57, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	0
};
static const char _lexer_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_key_offsets[] = {
	0, 0, 2, 5, 19, 21, 26, 31, 
	33, 38, 40, 45, 49, 54, 59, 61, 
	66, 74, 80, 88, 90, 92, 94, 96, 
	98, 100, 102, 104, 106, 108, 110, 114, 
	116, 118, 120, 127, 135, 142, 145, 283, 
	284, 290, 293, 295, 296, 310, 311, 325, 
	337, 345, 353, 363, 369, 370, 373, 374, 
	376, 377, 398, 405, 413, 422, 435, 443, 
	454, 463, 472, 481, 494, 503, 512, 521, 
	539, 547, 558, 567, 576, 585, 594, 603, 
	612, 621, 632, 641, 654, 676, 685, 694, 
	701, 712, 721, 730, 739, 748, 756, 769, 
	780, 797, 806, 815, 823, 842, 851, 860, 
	869, 880, 891, 913, 924, 935, 951, 978, 
	987, 996, 1005, 1014, 1023, 1032, 1041, 1050, 
	1059, 1068, 1077, 1086, 1095, 1104, 1113, 1122, 
	1131, 1140, 1148, 1156, 1172, 1181, 1192, 1201, 
	1212, 1221, 1230, 1239, 1248, 1257, 1266, 1275, 
	1284, 1293, 1304, 1313, 1322, 1331, 1343, 1352, 
	1361, 1370, 1379, 1388, 1397, 1406, 1415, 1424, 
	1433, 1445, 1454, 1463, 1473, 1498, 1507, 1516, 
	1527, 1536, 1545, 1554, 1563, 1572, 1581, 1601, 
	1610, 1619, 1628, 1637, 1646, 1655, 1664, 1673, 
	1682, 1693, 1704, 1713, 1722, 1731, 1740, 1751, 
	1762, 1781, 1790, 1801, 1812, 1829, 1840, 1851, 
	1873, 1890, 1899, 1912, 1921, 1930, 1943, 1954, 
	1963, 1972, 1981, 1990, 1999, 2008, 2017, 2026, 
	2035, 2044, 2053, 2064, 2073, 2086, 2097, 2106, 
	2117, 2126, 2135, 2146, 2155, 2164, 2183, 2192, 
	2201, 2210, 2219, 2228, 2237, 2252, 2263, 2272, 
	2281, 2290, 2299, 2308, 2325, 2336, 2345, 2354, 
	2363, 2372, 2381, 2394, 2407, 2418, 2429, 2438, 
	2449, 2458, 2467, 2479, 2488, 2497, 2516, 2525, 
	2534, 2543, 2552, 2561, 2570, 2579, 2588, 2599, 
	2608, 2617, 2626, 2637, 2646, 2655, 2664, 2673, 
	2702, 2713, 2722, 2731, 2740, 2749, 2760, 2771, 
	2784, 2792, 2801, 2809, 2820, 2831, 2844, 2852, 
	2861, 2869, 2878, 2895, 2906, 2917, 2946, 2959, 
	2968, 2976, 2987, 2996, 3005, 3014, 3023, 3034, 
	3043, 3052, 3061, 3070, 3079, 3094, 3103, 3112, 
	3123, 3134, 3143, 3156, 3165, 3174, 3183, 3192, 
	3201, 3210, 3219, 3228, 3237, 3246, 3255, 3264, 
	3275, 3284, 3293, 3302, 3311, 3320, 3331, 3342, 
	3351, 3360, 3369, 3378, 3387, 3396, 3417, 3426, 
	3435, 3444, 3453, 3462, 3471, 3480, 3489, 3502, 
	3511, 3520, 3529, 3536, 3543, 3587, 3604, 3623, 
	3644, 3673, 3691, 3716, 3737, 3758, 3779, 3808, 
	3829, 3850, 3871, 3909, 3927, 3952, 3973, 3994, 
	4015, 4036, 4057, 4078, 4099, 4124, 4145, 4174, 
	4220, 4241, 4262, 4279, 4304, 4325, 4346, 4367, 
	4388, 4406, 4435, 4460, 4497, 4518, 4539, 4557, 
	4598, 4619, 4640, 4661, 4686, 4711, 4757, 4782, 
	4807, 4841, 4898, 4919, 4940, 4961, 4982, 5003, 
	5024, 5045, 5066, 5087, 5108, 5129, 5150, 5171, 
	5192, 5213, 5234, 5255, 5276, 5294, 5312, 5346, 
	5367, 5392, 5413, 5438, 5459, 5480, 5501, 5522, 
	5543, 5564, 5585, 5606, 5627, 5652, 5673, 5694, 
	5715, 5741, 5762, 5783, 5804, 5825, 5846, 5867, 
	5888, 5909, 5930, 5951, 5977, 5998, 6019, 6041, 
	6094, 6115, 6136, 6161, 6182, 6203, 6224, 6245, 
	6266, 6287, 6330, 6351, 6372, 6393, 6414, 6435, 
	6456, 6477, 6498, 6519, 6544, 6569, 6590, 6611, 
	6632, 6653, 6678, 6703, 6744, 6765, 6790, 6815, 
	6852, 6877, 6902, 6948, 6985, 7006, 7035, 7056, 
	7077, 7106, 7131, 7152, 7173, 7194, 7215, 7236, 
	7257, 7278, 7299, 7320, 7341, 7362, 7387, 7408, 
	7437, 7462, 7483, 7508, 7529, 7550, 7575, 7596, 
	7617, 7658, 7679, 7700, 7721, 7742, 7763, 7784, 
	7817, 7842, 7863, 7884, 7905, 7926, 7947, 7984, 
	8009, 8030, 8051, 8072, 8093, 8114, 8143, 8172, 
	8197, 8222, 8243, 8268, 8289, 8310, 8337, 8358, 
	8379, 8420, 8441, 8462, 8483, 8504, 8525, 8546, 
	8567, 8588, 8613, 8634, 8655, 8676, 8701, 8722, 
	8743, 8764, 8785, 8846, 8871, 8892, 8913, 8934, 
	8955, 8980, 9005, 9034, 9052, 9073, 9091, 9116, 
	9141, 9170, 9188, 9209, 9227, 9248, 9285, 9310, 
	9335, 9396, 9425, 9446, 9464, 9489, 9510, 9531, 
	9552, 9573, 9598, 9619, 9640, 9661, 9682, 9703, 
	9736, 9757, 9778, 9803, 9828, 9849, 9878, 9899, 
	9920, 9941, 9962, 9983, 10004, 10025, 10046, 10067, 
	10088, 10109, 10130, 10155, 10176, 10197, 10218, 10239, 
	10260, 10285, 10310, 10331, 10352, 10373, 10394, 10415, 
	10436, 10481, 10502, 10523, 10544, 10565, 10586, 10607, 
	10628, 10649, 10678, 10699, 10720
};
static const short _lexer_trans_keys[] = {
	35, 45, 34, 35, 45, 9, 32, 66, 
	67, 68, 72, 73, 83, 98, 99, 100, 
	104, 105, 115, 67, 99, 9, 32, 41, 
	43, 45, 9, 32, 41, 43, 45, 69, 
	101, 9, 32, 41, 43, 45, 76, 108, 
	9, 32, 41, 43, 45, 88, 89, 120, 
	121, 9, 32, 41, 43, 45, 9, 32, 
	41, 43, 45, 80, 112, 9, 32, 41, 
	43, 45, 72, 104, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	77, 78, 83, 87, 109, 110, 115, 119, 
	79, 111, 86, 118, 69, 101, 79, 111, 
	80, 112, 84, 116, 79, 111, 80, 112, 
	65, 97, 73, 105, 84, 116, 67, 87, 
	99, 119, 77, 109, 68, 100, 82, 114, 
	48, 49, 50, 51, 52, 53, 54, 66, 
	80, 81, 87, 98, 112, 113, 119, 521, 
	544, 607, 577, 602, 609, 634, 521, 544, 
	570, 10, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 47, 
	48, 49, 58, 59, 60, 61, 62, 63, 
	64, 91, 92, 93, 94, 96, 123, 124, 
	125, 126, 127, 302, 321, 322, 323, 324, 
	325, 326, 327, 328, 329, 330, 332, 333, 
	334, 335, 336, 338, 339, 340, 341, 342, 
	344, 346, 351, 353, 354, 355, 356, 357, 
	358, 359, 360, 361, 362, 364, 365, 366, 
	367, 368, 370, 371, 372, 373, 374, 376, 
	378, 558, 577, 578, 579, 580, 581, 582, 
	583, 584, 585, 586, 588, 589, 590, 591, 
	592, 594, 595, 596, 597, 598, 600, 602, 
	607, 609, 610, 611, 612, 613, 614, 615, 
	616, 617, 618, 620, 621, 622, 623, 624, 
	626, 627, 628, 629, 630, 632, 634, -128, 
	32, 50, 57, 331, 345, 363, 377, 587, 
	601, 619, 633, 61, 48, 57, 65, 70, 
	97, 102, 34, 48, 49, 48, 49, 38, 
	9, 32, 66, 67, 68, 72, 73, 83, 
	98, 99, 100, 104, 105, 115, 42, 66, 
	72, 88, 98, 104, 120, 48, 49, 50, 
	57, 65, 70, 97, 102, 66, 72, 98, 
	104, 48, 49, 50, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 49, 50, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 10, 60, 61, 62, 61, 61, 62, 
	124, 39, 51, 67, 68, 70, 76, 78, 
	83, 95, 99, 100, 102, 108, 110, 115, 
	48, 57, 65, 90, 97, 122, 95, 48, 
	57, 65, 90, 97, 122, 50, 95, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 67, 68, 
	73, 95, 99, 100, 105, 48, 57, 65, 
	90, 97, 122, 39, 95, 48, 57, 65, 
	90, 97, 122, 73, 84, 95, 105, 116, 
	48, 57, 65, 90, 97, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 65, 68, 73, 95, 97, 100, 105, 
	48, 57, 66, 90, 98, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 39, 67, 73, 79, 82, 83, 95, 
	99, 105, 111, 114, 115, 48, 57, 65, 
	90, 97, 122, 39, 95, 48, 57, 65, 
	90, 97, 122, 78, 84, 95, 110, 116, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	89, 95, 121, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 67, 95, 99, 48, 
	57, 65, 90, 97, 122, 76, 82, 95, 
	108, 114, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 65, 70, 76, 95, 97, 102, 108, 
	48, 57, 66, 90, 98, 122, 39, 65, 
	67, 77, 78, 80, 85, 90, 95, 97, 
	99, 109, 110, 112, 117, 122, 48, 57, 
	66, 89, 98, 121, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 95, 48, 
	57, 65, 90, 97, 122, 79, 80, 95, 
	111, 112, 48, 57, 65, 90, 97, 122, 
	90, 95, 122, 48, 57, 65, 89, 97, 
	121, 75, 95, 107, 48, 57, 65, 90, 
	97, 122, 71, 95, 103, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 65, 67, 80, 95, 
	97, 99, 112, 48, 57, 66, 90, 98, 
	122, 67, 90, 95, 99, 122, 48, 57, 
	65, 89, 97, 121, 68, 69, 73, 76, 
	79, 95, 100, 101, 105, 108, 111, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 46, 
	95, 48, 57, 65, 90, 97, 122, 67, 
	76, 77, 78, 80, 90, 95, 99, 108, 
	109, 110, 112, 122, 48, 57, 65, 89, 
	97, 121, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 67, 90, 95, 
	99, 122, 48, 57, 65, 89, 97, 121, 
	69, 79, 95, 101, 111, 48, 57, 65, 
	90, 97, 122, 39, 65, 67, 69, 73, 
	74, 77, 83, 95, 97, 99, 101, 105, 
	106, 109, 115, 48, 57, 66, 90, 98, 
	122, 65, 68, 95, 97, 100, 48, 57, 
	66, 90, 98, 122, 82, 88, 95, 114, 
	120, 48, 57, 65, 90, 97, 122, 39, 
	67, 70, 72, 80, 95, 99, 102, 104, 
	112, 48, 57, 65, 90, 97, 122, 66, 
	67, 68, 71, 73, 77, 81, 83, 86, 
	87, 95, 98, 99, 100, 103, 105, 109, 
	113, 115, 118, 119, 48, 57, 65, 90, 
	97, 122, 66, 95, 98, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 72, 95, 104, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 90, 95, 122, 48, 57, 65, 
	89, 97, 121, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 46, 95, 48, 57, 
	65, 90, 97, 122, 46, 95, 48, 57, 
	65, 90, 97, 122, 39, 73, 76, 78, 
	88, 95, 105, 108, 110, 120, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 73, 83, 95, 
	105, 115, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 68, 78, 95, 100, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 84, 88, 95, 
	116, 120, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 39, 73, 80, 95, 105, 
	112, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 68, 95, 100, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 66, 95, 
	98, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 39, 65, 76, 95, 97, 108, 48, 
	57, 66, 90, 98, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 39, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 68, 70, 73, 77, 78, 79, 80, 
	88, 89, 95, 100, 102, 105, 109, 110, 
	111, 112, 120, 121, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 68, 78, 95, 100, 
	110, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 68, 95, 100, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 48, 67, 68, 
	73, 82, 86, 88, 95, 99, 100, 105, 
	114, 118, 120, 49, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 85, 95, 117, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	75, 95, 107, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 69, 73, 95, 101, 105, 48, 
	57, 65, 90, 97, 122, 82, 83, 95, 
	114, 115, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 72, 76, 95, 104, 
	108, 48, 57, 65, 90, 97, 122, 72, 
	76, 95, 104, 108, 48, 57, 65, 90, 
	97, 122, 67, 77, 78, 80, 82, 90, 
	95, 99, 109, 110, 112, 114, 122, 48, 
	57, 65, 89, 97, 121, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 67, 90, 
	95, 99, 122, 48, 57, 65, 89, 97, 
	121, 69, 79, 95, 101, 111, 48, 57, 
	65, 90, 97, 122, 67, 77, 78, 80, 
	90, 95, 99, 109, 110, 112, 122, 48, 
	57, 65, 89, 97, 121, 67, 90, 95, 
	99, 122, 48, 57, 65, 89, 97, 121, 
	69, 79, 95, 101, 111, 48, 57, 65, 
	90, 97, 122, 39, 68, 72, 73, 79, 
	83, 88, 90, 95, 100, 104, 105, 111, 
	115, 120, 122, 48, 57, 65, 89, 97, 
	121, 65, 68, 73, 80, 87, 95, 97, 
	100, 105, 112, 119, 48, 57, 66, 90, 
	98, 122, 88, 95, 120, 48, 57, 65, 
	90, 97, 122, 82, 83, 88, 95, 114, 
	115, 120, 48, 57, 65, 90, 97, 122, 
	88, 95, 120, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 82, 83, 88, 95, 114, 115, 
	120, 48, 57, 65, 90, 97, 122, 83, 
	88, 95, 115, 120, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 88, 95, 120, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 66, 78, 95, 
	98, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 68, 73, 84, 95, 100, 105, 116, 
	48, 57, 65, 90, 97, 122, 68, 82, 
	95, 100, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 68, 82, 95, 100, 114, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 70, 
	78, 95, 102, 110, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 73, 76, 77, 79, 
	85, 86, 95, 105, 108, 109, 111, 117, 
	118, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 85, 95, 117, 48, 
	57, 65, 90, 97, 122, 48, 49, 50, 
	51, 52, 53, 54, 55, 95, 56, 57, 
	65, 90, 97, 122, 68, 86, 95, 100, 
	118, 48, 57, 65, 90, 97, 122, 85, 
	95, 117, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 67, 69, 79, 86, 
	90, 95, 99, 101, 111, 118, 122, 48, 
	57, 65, 89, 97, 121, 71, 88, 95, 
	103, 120, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 71, 95, 103, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 82, 84, 85, 
	95, 114, 116, 117, 48, 57, 65, 90, 
	97, 122, 65, 71, 73, 95, 97, 103, 
	105, 48, 57, 66, 90, 98, 122, 68, 
	73, 95, 100, 105, 48, 57, 65, 90, 
	97, 122, 77, 82, 95, 109, 114, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 77, 82, 
	95, 109, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 48, 68, 73, 95, 100, 
	105, 49, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	66, 95, 98, 48, 57, 65, 90, 97, 
	122, 67, 69, 72, 73, 79, 85, 95, 
	99, 101, 104, 105, 111, 117, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 88, 95, 120, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 65, 68, 95, 97, 
	100, 48, 57, 66, 90, 98, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 66, 83, 95, 98, 115, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	72, 95, 104, 48, 57, 65, 90, 97, 
	122, 65, 67, 68, 69, 76, 77, 78, 
	80, 82, 83, 90, 95, 97, 99, 100, 
	101, 108, 109, 110, 112, 114, 115, 122, 
	48, 57, 66, 89, 98, 121, 76, 82, 
	95, 108, 114, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 83, 84, 95, 
	115, 116, 48, 57, 65, 90, 97, 122, 
	73, 78, 95, 105, 110, 48, 57, 65, 
	90, 97, 122, 65, 67, 68, 95, 97, 
	99, 100, 48, 57, 66, 90, 98, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 39, 95, 48, 57, 65, 90, 97, 
	122, 67, 90, 95, 99, 122, 48, 57, 
	65, 89, 97, 121, 69, 79, 95, 101, 
	111, 48, 57, 65, 90, 97, 122, 65, 
	67, 68, 95, 97, 99, 100, 48, 57, 
	66, 90, 98, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 67, 77, 
	78, 80, 90, 95, 99, 109, 110, 112, 
	122, 48, 57, 65, 89, 97, 121, 67, 
	90, 95, 99, 122, 48, 57, 65, 89, 
	97, 121, 69, 79, 95, 101, 111, 48, 
	57, 65, 90, 97, 122, 66, 67, 69, 
	72, 76, 80, 82, 84, 85, 87, 89, 
	95, 98, 99, 101, 104, 108, 112, 114, 
	116, 117, 119, 121, 48, 57, 65, 90, 
	97, 122, 66, 67, 73, 95, 98, 99, 
	105, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	67, 84, 95, 99, 116, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 65, 
	85, 95, 97, 117, 48, 57, 66, 90, 
	98, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 65, 
	73, 76, 80, 95, 97, 105, 108, 112, 
	48, 57, 66, 90, 98, 122, 72, 95, 
	104, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	65, 76, 95, 97, 108, 48, 57, 66, 
	90, 98, 122, 65, 67, 95, 97, 99, 
	48, 57, 66, 90, 98, 122, 88, 95, 
	120, 48, 57, 65, 90, 97, 122, 66, 
	73, 82, 95, 98, 105, 114, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 66, 95, 98, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 67, 95, 99, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	69, 83, 95, 101, 115, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	77, 78, 95, 109, 110, 48, 57, 65, 
	90, 97, 122, 65, 83, 95, 97, 115, 
	48, 57, 66, 90, 98, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 67, 68, 76, 79, 
	80, 82, 84, 95, 99, 100, 108, 111, 
	112, 114, 116, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 71, 95, 103, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 66, 95, 
	98, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 65, 69, 73, 95, 97, 101, 105, 
	48, 57, 66, 90, 98, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 72, 
	95, 104, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 521, 544, 607, 577, 602, 609, 634, 
	607, 560, 569, 577, 602, 609, 634, 39, 
	307, 323, 324, 326, 332, 334, 339, 351, 
	355, 356, 358, 364, 366, 371, 521, 544, 
	563, 570, 579, 580, 582, 588, 590, 595, 
	607, 611, 612, 614, 620, 622, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 306, 351, 521, 544, 
	562, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 324, 329, 351, 
	355, 356, 361, 521, 544, 570, 579, 580, 
	585, 607, 611, 612, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 329, 340, 351, 361, 372, 
	521, 544, 570, 585, 596, 607, 617, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 327, 351, 359, 521, 
	544, 570, 583, 607, 615, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 324, 329, 351, 353, 
	356, 361, 521, 544, 570, 577, 580, 585, 
	607, 609, 612, 617, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	333, 351, 365, 521, 544, 570, 589, 607, 
	621, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 351, 355, 521, 544, 570, 
	579, 607, 611, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	323, 329, 335, 338, 339, 351, 355, 361, 
	367, 370, 371, 521, 544, 570, 579, 585, 
	591, 594, 595, 607, 611, 617, 623, 626, 
	627, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 39, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 334, 
	340, 351, 366, 372, 521, 544, 570, 590, 
	596, 607, 622, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 345, 351, 377, 521, 544, 570, 
	601, 607, 633, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 338, 351, 364, 370, 
	521, 544, 570, 588, 594, 607, 620, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 321, 326, 332, 351, 353, 358, 364, 
	521, 544, 570, 577, 582, 588, 607, 609, 
	614, 620, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 39, 321, 
	323, 333, 334, 336, 341, 346, 351, 353, 
	355, 365, 366, 368, 373, 378, 521, 544, 
	570, 577, 579, 589, 590, 592, 597, 602, 
	607, 609, 611, 621, 622, 624, 629, 634, 
	304, 313, 322, 345, 354, 377, 560, 569, 
	578, 601, 610, 633, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	336, 351, 367, 368, 521, 544, 570, 591, 
	592, 607, 623, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	346, 351, 378, 521, 544, 570, 602, 607, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 331, 351, 363, 
	521, 544, 570, 587, 607, 619, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 327, 351, 359, 521, 544, 570, 
	583, 607, 615, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 323, 
	336, 351, 353, 355, 368, 521, 544, 570, 
	577, 579, 592, 607, 609, 611, 624, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 323, 346, 351, 355, 378, 
	521, 544, 570, 579, 602, 607, 611, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 324, 325, 329, 332, 
	335, 351, 356, 357, 361, 364, 367, 521, 
	544, 570, 580, 581, 585, 588, 591, 607, 
	612, 613, 617, 620, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 46, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 332, 333, 
	334, 336, 346, 351, 355, 364, 365, 366, 
	368, 378, 521, 544, 570, 579, 588, 589, 
	590, 592, 602, 607, 611, 620, 621, 622, 
	624, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 351, 366, 521, 544, 
	570, 590, 607, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 346, 351, 
	355, 378, 521, 544, 570, 579, 602, 607, 
	611, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 325, 335, 
	351, 357, 367, 521, 544, 570, 581, 591, 
	607, 613, 623, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	321, 323, 325, 329, 330, 333, 339, 351, 
	353, 355, 357, 361, 362, 365, 371, 521, 
	544, 570, 577, 579, 581, 585, 586, 589, 
	595, 607, 609, 611, 613, 617, 618, 621, 
	627, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 321, 324, 351, 
	353, 356, 521, 544, 570, 577, 580, 607, 
	609, 612, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 338, 344, 
	351, 370, 376, 521, 544, 570, 594, 600, 
	607, 626, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	323, 326, 328, 336, 351, 355, 358, 360, 
	368, 521, 544, 570, 579, 582, 584, 592, 
	607, 611, 614, 616, 624, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 322, 323, 324, 327, 329, 333, 337, 
	339, 342, 343, 351, 354, 355, 356, 359, 
	361, 365, 369, 371, 374, 375, 521, 544, 
	570, 578, 579, 580, 583, 585, 589, 593, 
	595, 598, 599, 607, 610, 611, 612, 615, 
	617, 621, 625, 627, 630, 631, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 335, 351, 367, 521, 
	544, 570, 591, 607, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 341, 351, 373, 521, 544, 570, 597, 
	607, 629, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 336, 351, 
	368, 521, 544, 570, 592, 607, 624, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 351, 366, 521, 544, 
	570, 590, 607, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 328, 351, 360, 521, 544, 570, 584, 
	607, 616, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 346, 351, 378, 521, 544, 570, 
	602, 607, 634, 304, 313, 321, 345, 353, 
	377, 560, 569, 577, 601, 609, 633, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 46, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 46, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 329, 332, 334, 344, 351, 361, 364, 
	366, 376, 521, 544, 570, 585, 588, 590, 
	600, 607, 617, 620, 622, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	339, 351, 361, 371, 521, 544, 570, 585, 
	595, 607, 617, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 334, 351, 
	356, 366, 521, 544, 570, 580, 590, 607, 
	612, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 351, 356, 521, 544, 570, 580, 607, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 351, 361, 521, 544, 570, 585, 
	607, 617, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 344, 351, 372, 376, 
	521, 544, 570, 596, 600, 607, 628, 632, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 329, 336, 351, 361, 
	368, 521, 544, 570, 585, 592, 607, 617, 
	624, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 351, 354, 521, 544, 570, 578, 607, 
	610, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	321, 332, 351, 353, 364, 521, 544, 570, 
	577, 588, 607, 609, 620, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 351, 
	372, 521, 544, 570, 596, 607, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 340, 351, 372, 521, 
	544, 570, 596, 607, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 326, 329, 333, 334, 335, 336, 
	344, 345, 351, 356, 358, 361, 365, 366, 
	367, 368, 376, 377, 521, 544, 570, 580, 
	582, 585, 589, 590, 591, 592, 600, 601, 
	607, 612, 614, 617, 621, 622, 623, 624, 
	632, 633, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 334, 351, 356, 366, 521, 544, 570, 
	580, 590, 607, 612, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 304, 
	323, 324, 329, 338, 342, 344, 351, 355, 
	356, 361, 370, 374, 376, 521, 544, 560, 
	570, 579, 580, 585, 594, 598, 600, 607, 
	611, 612, 617, 626, 630, 632, 305, 313, 
	321, 346, 353, 378, 561, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 341, 
	351, 373, 521, 544, 570, 597, 607, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	335, 351, 367, 521, 544, 570, 591, 607, 
	623, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 331, 351, 363, 
	521, 544, 570, 587, 607, 619, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	329, 351, 357, 361, 521, 544, 570, 581, 
	585, 607, 613, 617, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 339, 351, 370, 371, 521, 544, 570, 
	594, 595, 607, 626, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 328, 332, 351, 
	360, 364, 521, 544, 570, 584, 588, 607, 
	616, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 328, 332, 
	351, 360, 364, 521, 544, 570, 584, 588, 
	607, 616, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	333, 334, 336, 338, 346, 351, 355, 365, 
	366, 368, 370, 378, 521, 544, 570, 579, 
	589, 590, 592, 594, 602, 607, 611, 621, 
	622, 624, 626, 634, 304, 313, 321, 345, 
	353, 377, 560, 569, 577, 601, 609, 633, 
	336, 351, 368, 521, 544, 570, 592, 607, 
	624, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 346, 351, 
	355, 378, 521, 544, 570, 579, 602, 607, 
	611, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 325, 335, 
	351, 357, 367, 521, 544, 570, 581, 591, 
	607, 613, 623, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	333, 334, 336, 346, 351, 355, 365, 366, 
	368, 378, 521, 544, 570, 579, 589, 590, 
	592, 602, 607, 611, 621, 622, 624, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 323, 346, 351, 355, 
	378, 521, 544, 570, 579, 602, 607, 611, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 325, 335, 351, 
	357, 367, 521, 544, 570, 581, 591, 607, 
	613, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 324, 
	328, 329, 335, 339, 344, 346, 351, 356, 
	360, 361, 367, 371, 376, 378, 521, 544, 
	570, 580, 584, 585, 591, 595, 600, 602, 
	607, 612, 616, 617, 623, 627, 632, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 321, 324, 329, 336, 
	343, 351, 353, 356, 361, 368, 375, 521, 
	544, 570, 577, 580, 585, 592, 599, 607, 
	609, 612, 617, 624, 631, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 344, 351, 376, 521, 544, 570, 600, 
	607, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 339, 
	344, 351, 370, 371, 376, 521, 544, 570, 
	594, 595, 600, 607, 626, 627, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 344, 351, 376, 521, 544, 
	570, 600, 607, 632, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 339, 344, 
	351, 370, 371, 376, 521, 544, 570, 594, 
	595, 600, 607, 626, 627, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 339, 344, 351, 371, 376, 521, 
	544, 570, 595, 600, 607, 627, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 351, 355, 521, 544, 
	570, 579, 607, 611, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 344, 351, 
	376, 521, 544, 570, 600, 607, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 351, 356, 
	521, 544, 570, 580, 607, 612, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 334, 351, 354, 366, 521, 
	544, 570, 578, 590, 607, 610, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 329, 340, 351, 356, 361, 372, 521, 
	544, 570, 580, 585, 596, 607, 612, 617, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 338, 351, 
	356, 370, 521, 544, 570, 580, 594, 607, 
	612, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 338, 351, 356, 370, 
	521, 544, 570, 580, 594, 607, 612, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 334, 
	351, 358, 366, 521, 544, 570, 582, 590, 
	607, 614, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 332, 333, 335, 341, 342, 351, 
	361, 364, 365, 367, 373, 374, 521, 544, 
	570, 585, 588, 589, 591, 597, 598, 607, 
	617, 620, 621, 623, 629, 630, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 335, 351, 367, 521, 
	544, 570, 591, 607, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 351, 
	372, 521, 544, 570, 596, 607, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 341, 351, 373, 521, 544, 
	570, 597, 607, 629, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	304, 305, 306, 307, 308, 309, 310, 311, 
	351, 521, 544, 560, 561, 562, 563, 564, 
	565, 566, 567, 570, 607, 312, 313, 321, 
	346, 353, 378, 568, 569, 577, 602, 609, 
	634, 324, 342, 351, 356, 374, 521, 544, 
	570, 580, 598, 607, 612, 630, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 341, 351, 373, 521, 544, 570, 
	597, 607, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 325, 335, 342, 346, 
	351, 355, 357, 367, 374, 378, 521, 544, 
	570, 579, 581, 591, 598, 602, 607, 611, 
	613, 623, 630, 634, 304, 313, 321, 345, 
	353, 377, 560, 569, 577, 601, 609, 633, 
	327, 344, 351, 359, 376, 521, 544, 570, 
	583, 600, 607, 615, 632, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	327, 351, 359, 521, 544, 570, 583, 607, 
	615, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 340, 341, 351, 370, 372, 
	373, 521, 544, 570, 594, 596, 597, 607, 
	626, 628, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	327, 329, 351, 353, 359, 361, 521, 544, 
	570, 577, 583, 585, 607, 609, 615, 617, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 324, 329, 351, 356, 
	361, 521, 544, 570, 580, 585, 607, 612, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 333, 338, 351, 
	365, 370, 521, 544, 570, 589, 594, 607, 
	621, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 333, 338, 351, 365, 370, 
	521, 544, 570, 589, 594, 607, 621, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 304, 324, 
	329, 351, 356, 361, 521, 544, 560, 570, 
	580, 585, 607, 612, 617, 305, 313, 321, 
	346, 353, 378, 561, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 322, 351, 
	354, 521, 544, 570, 578, 607, 610, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 325, 328, 329, 335, 
	341, 351, 355, 357, 360, 361, 367, 373, 
	521, 544, 570, 579, 581, 584, 585, 591, 
	597, 607, 611, 613, 616, 617, 623, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 328, 351, 360, 521, 
	544, 570, 584, 607, 616, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 344, 351, 376, 
	521, 544, 570, 600, 607, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 324, 351, 353, 
	356, 521, 544, 570, 577, 580, 607, 609, 
	612, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 324, 351, 356, 
	521, 544, 570, 580, 607, 612, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 336, 
	351, 368, 521, 544, 570, 592, 607, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 339, 351, 354, 
	371, 521, 544, 570, 578, 595, 607, 610, 
	627, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	351, 355, 521, 544, 570, 579, 607, 611, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 328, 351, 360, 521, 
	544, 570, 584, 607, 616, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 323, 324, 325, 332, 333, 334, 
	336, 338, 339, 346, 351, 353, 355, 356, 
	357, 364, 365, 366, 368, 370, 371, 378, 
	521, 544, 570, 577, 579, 580, 581, 588, 
	589, 590, 592, 594, 595, 602, 607, 609, 
	611, 612, 613, 620, 621, 622, 624, 626, 
	627, 634, 304, 313, 322, 345, 354, 377, 
	560, 569, 578, 601, 610, 633, 332, 338, 
	351, 364, 370, 521, 544, 570, 588, 594, 
	607, 620, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 333, 
	351, 365, 521, 544, 570, 589, 607, 621, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 335, 351, 367, 521, 
	544, 570, 591, 607, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 351, 356, 521, 544, 570, 580, 
	607, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 340, 351, 371, 372, 
	521, 544, 570, 595, 596, 607, 627, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 334, 351, 361, 
	366, 521, 544, 570, 585, 590, 607, 617, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 323, 324, 
	351, 353, 355, 356, 521, 544, 570, 577, 
	579, 580, 607, 609, 611, 612, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 346, 351, 355, 378, 
	521, 544, 570, 579, 602, 607, 611, 634, 
	304, 313, 321, 345, 353, 377, 560, 569, 
	577, 601, 609, 633, 325, 335, 351, 357, 
	367, 521, 544, 570, 581, 591, 607, 613, 
	623, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 323, 324, 
	351, 353, 355, 356, 521, 544, 570, 577, 
	579, 580, 607, 609, 611, 612, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 333, 334, 336, 346, 351, 355, 365, 
	366, 368, 378, 521, 544, 570, 579, 589, 
	590, 592, 602, 607, 611, 621, 622, 624, 
	634, 304, 313, 321, 345, 353, 377, 560, 
	569, 577, 601, 609, 633, 323, 346, 351, 
	355, 378, 521, 544, 570, 579, 602, 607, 
	611, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 325, 335, 
	351, 357, 367, 521, 544, 570, 581, 591, 
	607, 613, 623, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 322, 
	323, 325, 328, 332, 336, 338, 340, 341, 
	343, 345, 351, 354, 355, 357, 360, 364, 
	368, 370, 372, 373, 375, 377, 521, 544, 
	570, 578, 579, 581, 584, 588, 592, 594, 
	596, 597, 599, 601, 607, 610, 611, 613, 
	616, 620, 624, 626, 628, 629, 631, 633, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 323, 329, 351, 
	354, 355, 361, 521, 544, 570, 578, 579, 
	585, 607, 610, 611, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 340, 351, 355, 372, 521, 544, 570, 
	579, 596, 607, 611, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 341, 351, 
	353, 373, 521, 544, 570, 577, 597, 607, 
	609, 629, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	329, 332, 336, 351, 353, 361, 364, 368, 
	521, 544, 570, 577, 585, 588, 592, 607, 
	609, 617, 620, 624, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	328, 351, 360, 521, 544, 570, 584, 607, 
	616, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 332, 351, 353, 364, 521, 
	544, 570, 577, 588, 607, 609, 620, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 321, 323, 351, 353, 355, 
	521, 544, 570, 577, 579, 607, 609, 611, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 344, 351, 376, 521, 
	544, 570, 600, 607, 632, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 322, 329, 338, 351, 354, 361, 370, 
	521, 544, 570, 578, 585, 594, 607, 610, 
	617, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 351, 354, 521, 
	544, 570, 578, 607, 610, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 339, 351, 357, 371, 521, 
	544, 570, 581, 595, 607, 613, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 333, 334, 351, 365, 
	366, 521, 544, 570, 589, 590, 607, 621, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 339, 351, 
	353, 371, 521, 544, 570, 577, 595, 607, 
	609, 627, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 324, 332, 335, 
	336, 338, 340, 351, 355, 356, 364, 367, 
	368, 370, 372, 521, 544, 570, 579, 580, 
	588, 591, 592, 594, 596, 607, 611, 612, 
	620, 623, 624, 626, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 328, 351, 360, 521, 544, 570, 584, 
	607, 616, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 327, 351, 
	359, 521, 544, 570, 583, 607, 615, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 351, 355, 521, 
	544, 570, 579, 607, 611, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 325, 329, 351, 353, 357, 361, 
	521, 544, 570, 577, 581, 585, 607, 609, 
	613, 617, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 328, 351, 360, 521, 544, 
	570, 584, 607, 616, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 0
};
static const char _lexer_single_lengths[] = {
	0, 2, 3, 14, 2, 5, 5, 2, 
	5, 2, 5, 4, 5, 5, 2, 5, 
	2, 0, 8, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 7, 8, 3, 3, 126, 1, 
	0, 1, 0, 1, 14, 1, 6, 4, 
	2, 2, 2, 0, 1, 3, 1, 2, 
	1, 15, 1, 2, 3, 7, 2, 5, 
	3, 3, 3, 7, 3, 3, 3, 12, 
	2, 5, 3, 3, 3, 3, 3, 3, 
	3, 5, 3, 7, 16, 3, 3, 1, 
	5, 3, 3, 3, 3, 2, 7, 5, 
	11, 3, 3, 2, 13, 3, 3, 3, 
	5, 5, 16, 5, 5, 10, 21, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 2, 2, 10, 3, 5, 3, 5, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 5, 3, 3, 3, 6, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	6, 3, 3, 4, 19, 3, 3, 5, 
	3, 3, 3, 3, 3, 3, 14, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	5, 5, 3, 3, 3, 3, 5, 5, 
	13, 3, 5, 5, 11, 5, 5, 16, 
	11, 3, 7, 3, 3, 7, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 3, 7, 5, 3, 5, 
	3, 3, 5, 3, 3, 13, 3, 3, 
	3, 3, 3, 3, 9, 5, 3, 3, 
	3, 3, 3, 11, 5, 3, 3, 3, 
	3, 3, 7, 7, 5, 5, 3, 5, 
	3, 3, 6, 3, 3, 13, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 5, 3, 3, 3, 3, 23, 
	5, 3, 3, 3, 3, 5, 5, 7, 
	2, 3, 2, 5, 5, 7, 2, 3, 
	2, 3, 11, 5, 5, 23, 7, 3, 
	2, 5, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 3, 9, 3, 3, 5, 
	5, 3, 7, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	3, 3, 3, 3, 3, 5, 5, 3, 
	3, 3, 3, 3, 3, 15, 3, 3, 
	3, 3, 3, 3, 3, 3, 7, 3, 
	3, 3, 3, 1, 32, 5, 7, 9, 
	17, 6, 13, 9, 9, 9, 17, 9, 
	9, 9, 26, 6, 13, 9, 9, 9, 
	9, 9, 9, 9, 13, 9, 17, 34, 
	9, 9, 5, 13, 9, 9, 9, 9, 
	6, 17, 13, 25, 9, 9, 6, 29, 
	9, 9, 9, 13, 13, 34, 13, 13, 
	22, 45, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 6, 6, 22, 9, 
	13, 9, 13, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 13, 9, 9, 9, 
	14, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 14, 9, 9, 10, 41, 
	9, 9, 13, 9, 9, 9, 9, 9, 
	9, 31, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 13, 13, 9, 9, 9, 
	9, 13, 13, 29, 9, 13, 13, 25, 
	13, 13, 34, 25, 9, 17, 9, 9, 
	17, 13, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 13, 9, 17, 
	13, 9, 13, 9, 9, 13, 9, 9, 
	29, 9, 9, 9, 9, 9, 9, 21, 
	13, 9, 9, 9, 9, 9, 25, 13, 
	9, 9, 9, 9, 9, 17, 17, 13, 
	13, 9, 13, 9, 9, 15, 9, 9, 
	29, 9, 9, 9, 9, 9, 9, 9, 
	9, 13, 9, 9, 9, 13, 9, 9, 
	9, 9, 49, 13, 9, 9, 9, 9, 
	13, 13, 17, 6, 9, 6, 13, 13, 
	17, 6, 9, 6, 9, 25, 13, 13, 
	49, 17, 9, 6, 13, 9, 9, 9, 
	9, 13, 9, 9, 9, 9, 9, 21, 
	9, 9, 13, 13, 9, 17, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 13, 9, 9, 9, 9, 9, 
	13, 13, 9, 9, 9, 9, 9, 9, 
	33, 9, 9, 9, 9, 9, 9, 9, 
	9, 17, 9, 9, 9
};
static const char _lexer_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 2, 0, 6, 0, 
	3, 1, 1, 0, 0, 0, 4, 4, 
	3, 3, 4, 3, 0, 0, 0, 0, 
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 2, 3, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6
};
static const short _lexer_index_offsets[] = {
	0, 0, 3, 7, 22, 25, 31, 37, 
	40, 46, 49, 55, 60, 66, 72, 75, 
	81, 87, 91, 100, 103, 106, 109, 112, 
	115, 118, 121, 124, 127, 130, 133, 138, 
	141, 144, 147, 155, 164, 170, 174, 307, 
	309, 313, 316, 318, 320, 335, 337, 348, 
	357, 363, 369, 376, 380, 382, 386, 388, 
	391, 393, 412, 417, 423, 430, 441, 447, 
	456, 463, 470, 477, 488, 495, 502, 509, 
	525, 531, 540, 547, 554, 561, 568, 575, 
	582, 589, 598, 605, 616, 636, 643, 650, 
	655, 664, 671, 678, 685, 692, 698, 709, 
	718, 733, 740, 747, 753, 770, 777, 784, 
	791, 800, 809, 829, 838, 847, 861, 886, 
	893, 900, 907, 914, 921, 928, 935, 942, 
	949, 956, 963, 970, 977, 984, 991, 998, 
	1005, 1012, 1018, 1024, 1038, 1045, 1054, 1061, 
	1070, 1077, 1084, 1091, 1098, 1105, 1112, 1119, 
	1126, 1133, 1142, 1149, 1156, 1163, 1173, 1180, 
	1187, 1194, 1201, 1208, 1215, 1222, 1229, 1236, 
	1243, 1253, 1260, 1267, 1275, 1298, 1305, 1312, 
	1321, 1328, 1335, 1342, 1349, 1356, 1363, 1381, 
	1388, 1395, 1402, 1409, 1416, 1423, 1430, 1437, 
	1444, 1453, 1462, 1469, 1476, 1483, 1490, 1499, 
	1508, 1525, 1532, 1541, 1550, 1565, 1574, 1583, 
	1603, 1618, 1625, 1636, 1643, 1650, 1661, 1670, 
	1677, 1684, 1691, 1698, 1705, 1712, 1719, 1726, 
	1733, 1740, 1747, 1756, 1763, 1774, 1783, 1790, 
	1799, 1806, 1813, 1822, 1829, 1836, 1853, 1860, 
	1867, 1874, 1881, 1888, 1895, 1908, 1917, 1924, 
	1931, 1938, 1945, 1952, 1967, 1976, 1983, 1990, 
	1997, 2004, 2011, 2022, 2033, 2042, 2051, 2058, 
	2067, 2074, 2081, 2091, 2098, 2105, 2122, 2129, 
	2136, 2143, 2150, 2157, 2164, 2171, 2178, 2187, 
	2194, 2201, 2208, 2217, 2224, 2231, 2238, 2245, 
	2272, 2281, 2288, 2295, 2302, 2309, 2318, 2327, 
	2338, 2344, 2351, 2357, 2366, 2375, 2386, 2392, 
	2399, 2405, 2412, 2427, 2436, 2445, 2472, 2483, 
	2490, 2496, 2505, 2512, 2519, 2526, 2533, 2542, 
	2549, 2556, 2563, 2570, 2577, 2590, 2597, 2604, 
	2613, 2622, 2629, 2640, 2647, 2654, 2661, 2668, 
	2675, 2682, 2689, 2696, 2703, 2710, 2717, 2724, 
	2733, 2740, 2747, 2754, 2761, 2768, 2777, 2786, 
	2793, 2800, 2807, 2814, 2821, 2828, 2847, 2854, 
	2861, 2868, 2875, 2882, 2889, 2896, 2903, 2914, 
	2921, 2928, 2935, 2941, 2946, 2985, 2997, 3011, 
	3027, 3051, 3064, 3084, 3100, 3116, 3132, 3156, 
	3172, 3188, 3204, 3237, 3250, 3270, 3286, 3302, 
	3318, 3334, 3350, 3366, 3382, 3402, 3418, 3442, 
	3483, 3499, 3515, 3527, 3547, 3563, 3579, 3595, 
	3611, 3624, 3648, 3668, 3700, 3716, 3732, 3745, 
	3781, 3797, 3813, 3829, 3849, 3869, 3910, 3930, 
	3950, 3979, 4031, 4047, 4063, 4079, 4095, 4111, 
	4127, 4143, 4159, 4175, 4191, 4207, 4223, 4239, 
	4255, 4271, 4287, 4303, 4319, 4332, 4345, 4374, 
	4390, 4410, 4426, 4446, 4462, 4478, 4494, 4510, 
	4526, 4542, 4558, 4574, 4590, 4610, 4626, 4642, 
	4658, 4679, 4695, 4711, 4727, 4743, 4759, 4775, 
	4791, 4807, 4823, 4839, 4860, 4876, 4892, 4909, 
	4957, 4973, 4989, 5009, 5025, 5041, 5057, 5073, 
	5089, 5105, 5143, 5159, 5175, 5191, 5207, 5223, 
	5239, 5255, 5271, 5287, 5307, 5327, 5343, 5359, 
	5375, 5391, 5411, 5431, 5467, 5483, 5503, 5523, 
	5555, 5575, 5595, 5636, 5668, 5684, 5708, 5724, 
	5740, 5764, 5784, 5800, 5816, 5832, 5848, 5864, 
	5880, 5896, 5912, 5928, 5944, 5960, 5980, 5996, 
	6020, 6040, 6056, 6076, 6092, 6108, 6128, 6144, 
	6160, 6196, 6212, 6228, 6244, 6260, 6276, 6292, 
	6320, 6340, 6356, 6372, 6388, 6404, 6420, 6452, 
	6472, 6488, 6504, 6520, 6536, 6552, 6576, 6600, 
	6620, 6640, 6656, 6676, 6692, 6708, 6730, 6746, 
	6762, 6798, 6814, 6830, 6846, 6862, 6878, 6894, 
	6910, 6926, 6946, 6962, 6978, 6994, 7014, 7030, 
	7046, 7062, 7078, 7134, 7154, 7170, 7186, 7202, 
	7218, 7238, 7258, 7282, 7295, 7311, 7324, 7344, 
	7364, 7388, 7401, 7417, 7430, 7446, 7478, 7498, 
	7518, 7574, 7598, 7614, 7627, 7647, 7663, 7679, 
	7695, 7711, 7731, 7747, 7763, 7779, 7795, 7811, 
	7839, 7855, 7871, 7891, 7911, 7927, 7951, 7967, 
	7983, 7999, 8015, 8031, 8047, 8063, 8079, 8095, 
	8111, 8127, 8143, 8163, 8179, 8195, 8211, 8227, 
	8243, 8263, 8283, 8299, 8315, 8331, 8347, 8363, 
	8379, 8419, 8435, 8451, 8467, 8483, 8499, 8515, 
	8531, 8547, 8571, 8587, 8603
};
static const short _lexer_indicies[] = {
	1, 1, 0, 2, 1, 1, 0, 4, 
	4, 5, 6, 7, 8, 9, 10, 5, 
	6, 7, 8, 9, 10, 3, 11, 11, 
	3, 11, 11, 12, 12, 12, 3, 6, 
	6, 13, 13, 13, 3, 14, 14, 3, 
	14, 14, 15, 15, 15, 3, 16, 16, 
	3, 16, 16, 17, 17, 17, 3, 18, 
	19, 18, 19, 3, 18, 18, 20, 20, 
	20, 3, 19, 19, 21, 21, 21, 3, 
	22, 22, 3, 22, 22, 23, 23, 23, 
	3, 25, 25, 24, 24, 24, 0, 27, 
	27, 27, 26, 29, 30, 31, 32, 29, 
	30, 31, 32, 28, 33, 33, 28, 34, 
	34, 28, 35, 35, 28, 36, 36, 28, 
	37, 37, 28, 38, 38, 28, 39, 39, 
	28, 40, 40, 28, 41, 41, 28, 42, 
	42, 28, 43, 43, 28, 44, 45, 44, 
	45, 28, 46, 46, 28, 47, 47, 28, 
	48, 48, 28, 49, 50, 51, 52, 53, 
	54, 55, 28, 56, 57, 58, 59, 56, 
	57, 58, 59, 28, 61, 61, 62, 62, 
	62, 60, 63, 63, 64, 0, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 82, 83, 85, 
	86, 87, 88, 89, 90, 91, 92, 93, 
	94, 95, 93, 96, 97, 98, 99, 65, 
	100, 101, 102, 103, 104, 105, 106, 107, 
	108, 109, 110, 112, 113, 114, 115, 116, 
	117, 118, 119, 120, 121, 122, 123, 111, 
	101, 102, 103, 104, 105, 106, 107, 108, 
	109, 110, 112, 113, 114, 115, 116, 117, 
	118, 119, 120, 121, 122, 123, 124, 125, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	134, 136, 137, 138, 139, 140, 141, 142, 
	143, 144, 145, 146, 147, 135, 125, 126, 
	127, 128, 129, 130, 131, 132, 133, 134, 
	136, 137, 138, 139, 140, 141, 142, 143, 
	144, 145, 146, 147, 65, 84, 111, 111, 
	135, 135, 81, 149, 148, 150, 150, 150, 
	0, 151, 152, 0, 152, 153, 155, 154, 
	4, 4, 5, 6, 7, 8, 9, 10, 
	5, 6, 7, 8, 9, 10, 156, 158, 
	157, 160, 25, 161, 160, 25, 161, 83, 
	84, 24, 24, 159, 162, 25, 162, 25, 
	83, 84, 24, 24, 159, 25, 25, 84, 
	24, 24, 159, 25, 25, 24, 24, 24, 
	163, 25, 25, 164, 24, 24, 24, 0, 
	27, 27, 27, 165, 166, 86, 168, 169, 
	170, 167, 172, 171, 174, 175, 173, 177, 
	176, 179, 180, 181, 182, 183, 184, 185, 
	186, 111, 181, 182, 183, 184, 185, 186, 
	111, 111, 111, 178, 111, 111, 111, 111, 
	0, 188, 111, 111, 111, 111, 187, 189, 
	111, 189, 111, 111, 111, 187, 190, 191, 
	192, 111, 190, 191, 192, 111, 111, 111, 
	187, 194, 111, 111, 111, 111, 193, 195, 
	196, 111, 195, 196, 111, 111, 111, 187, 
	197, 111, 197, 111, 111, 111, 187, 198, 
	111, 198, 111, 111, 111, 187, 199, 111, 
	199, 111, 111, 111, 187, 200, 201, 202, 
	111, 200, 201, 202, 111, 111, 111, 187, 
	203, 111, 203, 111, 111, 111, 187, 204, 
	111, 204, 111, 111, 111, 187, 205, 111, 
	205, 111, 111, 111, 187, 207, 208, 209, 
	210, 211, 212, 111, 208, 209, 210, 211, 
	212, 111, 111, 111, 206, 214, 111, 111, 
	111, 111, 213, 215, 216, 111, 215, 216, 
	111, 111, 111, 187, 217, 111, 217, 111, 
	111, 111, 187, 218, 111, 218, 111, 111, 
	111, 187, 219, 111, 219, 111, 111, 111, 
	187, 220, 111, 220, 111, 111, 111, 187, 
	221, 111, 221, 111, 111, 111, 187, 222, 
	111, 222, 111, 111, 111, 187, 223, 111, 
	223, 111, 111, 111, 187, 224, 225, 111, 
	224, 225, 111, 111, 111, 187, 226, 111, 
	226, 111, 111, 111, 187, 227, 228, 229, 
	111, 227, 228, 229, 111, 111, 111, 187, 
	231, 232, 233, 234, 235, 236, 237, 238, 
	239, 232, 233, 234, 235, 236, 237, 238, 
	111, 111, 111, 230, 240, 111, 240, 111, 
	111, 111, 187, 241, 111, 241, 111, 111, 
	111, 187, 243, 111, 111, 111, 242, 244, 
	245, 111, 244, 245, 111, 111, 111, 187, 
	246, 111, 246, 111, 111, 111, 187, 247, 
	111, 247, 111, 111, 111, 187, 248, 111, 
	248, 111, 111, 111, 187, 250, 111, 250, 
	111, 111, 111, 249, 252, 111, 111, 111, 
	111, 251, 254, 255, 256, 111, 254, 255, 
	256, 111, 111, 111, 253, 257, 258, 111, 
	257, 258, 111, 111, 111, 187, 260, 261, 
	262, 263, 264, 111, 260, 261, 262, 263, 
	264, 111, 111, 111, 259, 266, 111, 266, 
	111, 111, 111, 265, 268, 111, 268, 111, 
	111, 111, 267, 269, 111, 111, 111, 111, 
	187, 270, 271, 272, 273, 274, 275, 111, 
	270, 271, 272, 273, 274, 275, 111, 111, 
	111, 187, 276, 111, 276, 111, 111, 111, 
	187, 277, 111, 277, 111, 111, 111, 187, 
	278, 111, 278, 111, 111, 111, 187, 279, 
	280, 111, 279, 280, 111, 111, 111, 187, 
	282, 283, 111, 282, 283, 111, 111, 111, 
	281, 285, 286, 287, 288, 289, 290, 291, 
	292, 111, 286, 287, 288, 289, 290, 291, 
	292, 111, 111, 111, 284, 293, 294, 111, 
	293, 294, 111, 111, 111, 187, 295, 296, 
	111, 295, 296, 111, 111, 111, 187, 298, 
	299, 300, 301, 302, 111, 299, 300, 301, 
	302, 111, 111, 111, 297, 303, 304, 305, 
	306, 307, 308, 309, 310, 311, 312, 111, 
	303, 304, 305, 306, 307, 308, 309, 310, 
	311, 312, 111, 111, 111, 187, 313, 111, 
	313, 111, 111, 111, 187, 314, 111, 314, 
	111, 111, 111, 187, 315, 111, 315, 111, 
	111, 111, 187, 316, 111, 316, 111, 111, 
	111, 187, 317, 111, 317, 111, 111, 111, 
	187, 318, 111, 318, 111, 111, 111, 187, 
	319, 111, 319, 111, 111, 111, 187, 320, 
	111, 320, 111, 111, 111, 187, 321, 111, 
	321, 111, 111, 111, 187, 322, 111, 322, 
	111, 111, 111, 187, 323, 111, 323, 111, 
	111, 111, 187, 324, 111, 324, 111, 111, 
	111, 187, 325, 111, 325, 111, 111, 111, 
	187, 326, 111, 326, 111, 111, 111, 187, 
	327, 111, 327, 111, 111, 111, 187, 328, 
	111, 328, 111, 111, 111, 187, 329, 111, 
	329, 111, 111, 111, 187, 330, 111, 330, 
	111, 111, 111, 187, 331, 111, 111, 111, 
	111, 187, 332, 111, 111, 111, 111, 187, 
	334, 335, 336, 337, 338, 111, 335, 336, 
	337, 338, 111, 111, 111, 333, 340, 111, 
	340, 111, 111, 111, 339, 341, 342, 111, 
	341, 342, 111, 111, 111, 187, 343, 111, 
	343, 111, 111, 111, 187, 345, 346, 111, 
	345, 346, 111, 111, 111, 344, 347, 111, 
	347, 111, 111, 111, 187, 348, 111, 348, 
	111, 111, 111, 187, 349, 111, 349, 111, 
	111, 111, 187, 350, 111, 350, 111, 111, 
	111, 187, 351, 111, 351, 111, 111, 111, 
	187, 352, 111, 352, 111, 111, 111, 187, 
	353, 111, 353, 111, 111, 111, 187, 354, 
	111, 354, 111, 111, 111, 187, 355, 111, 
	355, 111, 111, 111, 187, 357, 358, 111, 
	357, 358, 111, 111, 111, 356, 359, 111, 
	359, 111, 111, 111, 187, 360, 111, 360, 
	111, 111, 111, 187, 361, 111, 361, 111, 
	111, 111, 187, 363, 364, 365, 111, 364, 
	365, 111, 111, 111, 362, 366, 111, 366, 
	111, 111, 111, 187, 367, 111, 367, 111, 
	111, 111, 187, 369, 111, 369, 111, 111, 
	111, 368, 370, 111, 370, 111, 111, 111, 
	187, 371, 111, 371, 111, 111, 111, 187, 
	372, 111, 372, 111, 111, 111, 187, 373, 
	111, 373, 111, 111, 111, 187, 374, 111, 
	374, 111, 111, 111, 187, 375, 111, 375, 
	111, 111, 111, 187, 376, 111, 376, 111, 
	111, 111, 187, 378, 379, 380, 111, 379, 
	380, 111, 111, 111, 377, 381, 111, 381, 
	111, 111, 111, 187, 382, 111, 382, 111, 
	111, 111, 187, 384, 385, 111, 385, 111, 
	111, 111, 383, 387, 388, 389, 390, 391, 
	392, 393, 394, 395, 111, 387, 388, 389, 
	390, 391, 392, 393, 394, 395, 111, 111, 
	111, 386, 396, 111, 396, 111, 111, 111, 
	187, 397, 111, 397, 111, 111, 111, 187, 
	399, 400, 111, 399, 400, 111, 111, 111, 
	398, 401, 111, 401, 111, 111, 111, 187, 
	402, 111, 402, 111, 111, 111, 187, 403, 
	111, 403, 111, 111, 111, 187, 404, 111, 
	404, 111, 111, 111, 187, 405, 111, 405, 
	111, 111, 111, 187, 406, 111, 406, 111, 
	111, 111, 187, 408, 409, 410, 411, 412, 
	413, 414, 111, 409, 410, 411, 412, 413, 
	414, 111, 111, 111, 407, 416, 111, 416, 
	111, 111, 111, 415, 417, 111, 417, 111, 
	111, 111, 187, 418, 111, 418, 111, 111, 
	111, 187, 419, 111, 419, 111, 111, 111, 
	187, 421, 111, 421, 111, 111, 111, 420, 
	423, 111, 423, 111, 111, 111, 422, 424, 
	111, 424, 111, 111, 111, 187, 425, 111, 
	425, 111, 111, 111, 187, 426, 111, 426, 
	111, 111, 111, 187, 427, 428, 111, 427, 
	428, 111, 111, 111, 187, 430, 431, 111, 
	430, 431, 111, 111, 111, 429, 432, 111, 
	432, 111, 111, 111, 187, 433, 111, 433, 
	111, 111, 111, 187, 434, 111, 434, 111, 
	111, 111, 187, 435, 111, 435, 111, 111, 
	111, 187, 437, 438, 111, 437, 438, 111, 
	111, 111, 436, 440, 441, 111, 440, 441, 
	111, 111, 111, 439, 442, 443, 444, 445, 
	446, 447, 448, 442, 443, 444, 445, 446, 
	447, 111, 111, 111, 187, 450, 111, 450, 
	111, 111, 111, 449, 451, 452, 111, 451, 
	452, 111, 111, 111, 187, 454, 455, 111, 
	454, 455, 111, 111, 111, 453, 456, 457, 
	458, 459, 460, 111, 456, 457, 458, 459, 
	460, 111, 111, 111, 187, 461, 462, 111, 
	461, 462, 111, 111, 111, 187, 464, 465, 
	111, 464, 465, 111, 111, 111, 463, 467, 
	468, 469, 470, 471, 472, 473, 474, 111, 
	468, 469, 470, 471, 472, 473, 474, 111, 
	111, 111, 466, 476, 477, 478, 479, 480, 
	111, 476, 477, 478, 479, 480, 111, 111, 
	111, 475, 482, 111, 482, 111, 111, 111, 
	481, 484, 485, 486, 111, 484, 485, 486, 
	111, 111, 111, 483, 488, 111, 488, 111, 
	111, 111, 487, 489, 111, 489, 111, 111, 
	111, 187, 491, 492, 493, 111, 491, 492, 
	493, 111, 111, 111, 490, 495, 496, 111, 
	495, 496, 111, 111, 111, 494, 497, 111, 
	497, 111, 111, 111, 187, 498, 111, 498, 
	111, 111, 111, 187, 499, 111, 499, 111, 
	111, 111, 187, 500, 111, 500, 111, 111, 
	111, 187, 501, 111, 501, 111, 111, 111, 
	187, 503, 111, 503, 111, 111, 111, 502, 
	504, 111, 504, 111, 111, 111, 187, 505, 
	111, 505, 111, 111, 111, 187, 506, 111, 
	506, 111, 111, 111, 187, 507, 111, 507, 
	111, 111, 111, 187, 508, 111, 508, 111, 
	111, 111, 187, 509, 510, 111, 509, 510, 
	111, 111, 111, 187, 511, 111, 511, 111, 
	111, 111, 187, 512, 513, 514, 111, 512, 
	513, 514, 111, 111, 111, 187, 515, 516, 
	111, 515, 516, 111, 111, 111, 187, 517, 
	111, 517, 111, 111, 111, 187, 518, 519, 
	111, 518, 519, 111, 111, 111, 187, 520, 
	111, 520, 111, 111, 111, 187, 521, 111, 
	521, 111, 111, 111, 187, 522, 523, 111, 
	522, 523, 111, 111, 111, 187, 524, 111, 
	524, 111, 111, 111, 187, 525, 111, 525, 
	111, 111, 111, 187, 527, 528, 529, 530, 
	531, 532, 111, 527, 528, 529, 530, 531, 
	532, 111, 111, 111, 526, 533, 111, 533, 
	111, 111, 111, 187, 534, 111, 534, 111, 
	111, 111, 187, 535, 111, 535, 111, 111, 
	111, 187, 536, 111, 536, 111, 111, 111, 
	187, 537, 111, 537, 111, 111, 111, 187, 
	538, 111, 538, 111, 111, 111, 187, 540, 
	541, 542, 543, 544, 545, 546, 547, 111, 
	111, 111, 111, 539, 548, 549, 111, 548, 
	549, 111, 111, 111, 187, 550, 111, 550, 
	111, 111, 111, 187, 551, 111, 551, 111, 
	111, 111, 187, 552, 111, 552, 111, 111, 
	111, 187, 553, 111, 553, 111, 111, 111, 
	187, 554, 111, 554, 111, 111, 111, 187, 
	555, 556, 557, 558, 559, 111, 555, 556, 
	557, 558, 559, 111, 111, 111, 187, 560, 
	561, 111, 560, 561, 111, 111, 111, 187, 
	562, 111, 562, 111, 111, 111, 187, 563, 
	111, 563, 111, 111, 111, 187, 564, 111, 
	564, 111, 111, 111, 187, 565, 111, 565, 
	111, 111, 111, 187, 566, 111, 566, 111, 
	111, 111, 187, 567, 568, 569, 111, 567, 
	568, 569, 111, 111, 111, 187, 571, 572, 
	573, 111, 571, 572, 573, 111, 111, 111, 
	570, 574, 575, 111, 574, 575, 111, 111, 
	111, 187, 576, 577, 111, 576, 577, 111, 
	111, 111, 187, 579, 111, 579, 111, 111, 
	111, 578, 580, 581, 111, 580, 581, 111, 
	111, 111, 187, 583, 111, 583, 111, 111, 
	111, 582, 584, 111, 584, 111, 111, 111, 
	187, 586, 587, 588, 111, 587, 588, 111, 
	111, 111, 585, 590, 111, 590, 111, 111, 
	111, 589, 591, 111, 591, 111, 111, 111, 
	187, 593, 594, 595, 596, 597, 598, 111, 
	593, 594, 595, 596, 597, 598, 111, 111, 
	111, 592, 599, 111, 599, 111, 111, 111, 
	187, 600, 111, 600, 111, 111, 111, 187, 
	601, 111, 601, 111, 111, 111, 187, 602, 
	111, 602, 111, 111, 111, 187, 603, 111, 
	603, 111, 111, 111, 187, 604, 111, 604, 
	111, 111, 111, 187, 605, 111, 605, 111, 
	111, 111, 187, 606, 111, 606, 111, 111, 
	111, 187, 607, 608, 111, 607, 608, 111, 
	111, 111, 187, 609, 111, 609, 111, 111, 
	111, 187, 610, 111, 610, 111, 111, 111, 
	187, 612, 111, 612, 111, 111, 111, 611, 
	613, 614, 111, 613, 614, 111, 111, 111, 
	187, 615, 111, 615, 111, 111, 111, 187, 
	616, 111, 616, 111, 111, 111, 187, 617, 
	111, 617, 111, 111, 111, 187, 618, 111, 
	618, 111, 111, 111, 187, 620, 621, 622, 
	623, 624, 625, 626, 627, 628, 629, 630, 
	631, 620, 621, 622, 623, 624, 625, 626, 
	627, 628, 629, 630, 111, 111, 111, 619, 
	632, 633, 111, 632, 633, 111, 111, 111, 
	187, 634, 111, 634, 111, 111, 111, 187, 
	635, 111, 635, 111, 111, 111, 187, 636, 
	111, 636, 111, 111, 111, 187, 637, 111, 
	637, 111, 111, 111, 187, 638, 639, 111, 
	638, 639, 111, 111, 111, 187, 641, 642, 
	111, 641, 642, 111, 111, 111, 640, 644, 
	645, 646, 111, 644, 645, 646, 111, 111, 
	111, 643, 648, 111, 111, 111, 111, 647, 
	650, 111, 650, 111, 111, 111, 649, 652, 
	111, 111, 111, 111, 651, 653, 654, 111, 
	653, 654, 111, 111, 111, 187, 656, 657, 
	111, 656, 657, 111, 111, 111, 655, 659, 
	660, 661, 111, 659, 660, 661, 111, 111, 
	111, 658, 663, 111, 111, 111, 111, 662, 
	665, 111, 665, 111, 111, 111, 664, 667, 
	111, 111, 111, 111, 666, 668, 111, 668, 
	111, 111, 111, 187, 669, 670, 671, 672, 
	673, 111, 669, 670, 671, 672, 673, 111, 
	111, 111, 187, 674, 675, 111, 674, 675, 
	111, 111, 111, 187, 677, 678, 111, 677, 
	678, 111, 111, 111, 676, 679, 680, 681, 
	682, 683, 684, 685, 686, 687, 688, 689, 
	111, 679, 680, 681, 682, 683, 684, 685, 
	686, 687, 688, 689, 111, 111, 111, 187, 
	690, 691, 692, 111, 690, 691, 692, 111, 
	111, 111, 187, 693, 111, 693, 111, 111, 
	111, 187, 695, 111, 111, 111, 111, 694, 
	696, 697, 111, 696, 697, 111, 111, 111, 
	187, 698, 111, 698, 111, 111, 111, 187, 
	699, 111, 699, 111, 111, 111, 187, 700, 
	111, 700, 111, 111, 111, 187, 701, 111, 
	701, 111, 111, 111, 187, 703, 704, 111, 
	703, 704, 111, 111, 111, 702, 705, 111, 
	705, 111, 111, 111, 187, 706, 111, 706, 
	111, 111, 111, 187, 707, 111, 707, 111, 
	111, 111, 187, 708, 111, 708, 111, 111, 
	111, 187, 709, 111, 709, 111, 111, 111, 
	187, 710, 711, 712, 713, 111, 710, 711, 
	712, 713, 111, 111, 111, 187, 715, 111, 
	715, 111, 111, 111, 714, 716, 111, 716, 
	111, 111, 111, 187, 717, 718, 111, 717, 
	718, 111, 111, 111, 187, 719, 720, 111, 
	719, 720, 111, 111, 111, 187, 722, 111, 
	722, 111, 111, 111, 721, 724, 725, 726, 
	111, 724, 725, 726, 111, 111, 111, 723, 
	727, 111, 727, 111, 111, 111, 187, 728, 
	111, 728, 111, 111, 111, 187, 729, 111, 
	729, 111, 111, 111, 187, 730, 111, 730, 
	111, 111, 111, 187, 732, 111, 732, 111, 
	111, 111, 731, 733, 111, 733, 111, 111, 
	111, 187, 734, 111, 734, 111, 111, 111, 
	187, 735, 111, 735, 111, 111, 111, 187, 
	736, 111, 736, 111, 111, 111, 187, 737, 
	111, 737, 111, 111, 111, 187, 738, 111, 
	738, 111, 111, 111, 187, 739, 111, 739, 
	111, 111, 111, 187, 740, 741, 111, 740, 
	741, 111, 111, 111, 187, 742, 111, 742, 
	111, 111, 111, 187, 743, 111, 743, 111, 
	111, 111, 187, 744, 111, 744, 111, 111, 
	111, 187, 746, 111, 746, 111, 111, 111, 
	745, 747, 111, 747, 111, 111, 111, 187, 
	748, 749, 111, 748, 749, 111, 111, 111, 
	187, 750, 751, 111, 750, 751, 111, 111, 
	111, 187, 752, 111, 752, 111, 111, 111, 
	187, 753, 111, 753, 111, 111, 111, 187, 
	754, 111, 754, 111, 111, 111, 187, 755, 
	111, 755, 111, 111, 111, 187, 756, 111, 
	756, 111, 111, 111, 187, 757, 111, 757, 
	111, 111, 111, 187, 759, 760, 761, 762, 
	763, 764, 765, 111, 759, 760, 761, 762, 
	763, 764, 765, 111, 111, 111, 758, 766, 
	111, 766, 111, 111, 111, 187, 767, 111, 
	767, 111, 111, 111, 187, 768, 111, 768, 
	111, 111, 111, 187, 769, 111, 769, 111, 
	111, 111, 187, 770, 111, 770, 111, 111, 
	111, 187, 771, 111, 771, 111, 111, 111, 
	187, 772, 111, 772, 111, 111, 111, 187, 
	773, 111, 773, 111, 111, 111, 187, 774, 
	775, 776, 111, 774, 775, 776, 111, 111, 
	111, 187, 777, 111, 777, 111, 111, 111, 
	187, 778, 111, 778, 111, 111, 111, 187, 
	779, 111, 779, 111, 111, 111, 187, 61, 
	61, 62, 62, 62, 780, 62, 62, 62, 
	62, 781, 179, 180, 181, 182, 183, 184, 
	185, 186, 111, 181, 182, 183, 184, 185, 
	186, 63, 63, 782, 64, 783, 784, 785, 
	786, 787, 788, 135, 783, 784, 785, 786, 
	787, 788, 111, 111, 111, 135, 135, 135, 
	178, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 0, 188, 111, 63, 
	63, 789, 64, 135, 111, 111, 111, 135, 
	135, 135, 187, 189, 111, 189, 63, 63, 
	64, 790, 135, 790, 111, 111, 111, 135, 
	135, 135, 187, 190, 191, 192, 111, 190, 
	191, 192, 63, 63, 64, 791, 792, 793, 
	135, 791, 792, 793, 111, 111, 111, 135, 
	135, 135, 187, 194, 111, 63, 63, 64, 
	135, 111, 111, 111, 135, 135, 135, 193, 
	195, 196, 111, 195, 196, 63, 63, 64, 
	794, 795, 135, 794, 795, 111, 111, 111, 
	135, 135, 135, 187, 197, 111, 197, 63, 
	63, 64, 796, 135, 796, 111, 111, 111, 
	135, 135, 135, 187, 198, 111, 198, 63, 
	63, 64, 797, 135, 797, 111, 111, 111, 
	135, 135, 135, 187, 199, 111, 199, 63, 
	63, 64, 798, 135, 798, 111, 111, 111, 
	135, 135, 135, 187, 200, 201, 202, 111, 
	200, 201, 202, 63, 63, 64, 799, 800, 
	801, 135, 799, 800, 801, 111, 111, 111, 
	135, 135, 135, 187, 203, 111, 203, 63, 
	63, 64, 802, 135, 802, 111, 111, 111, 
	135, 135, 135, 187, 204, 111, 204, 63, 
	63, 64, 803, 135, 803, 111, 111, 111, 
	135, 135, 135, 187, 205, 111, 205, 63, 
	63, 64, 804, 135, 804, 111, 111, 111, 
	135, 135, 135, 187, 207, 208, 209, 210, 
	211, 212, 111, 208, 209, 210, 211, 212, 
	63, 63, 64, 805, 806, 807, 808, 809, 
	135, 805, 806, 807, 808, 809, 111, 111, 
	111, 135, 135, 135, 206, 214, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 213, 215, 216, 111, 215, 216, 63, 
	63, 64, 810, 811, 135, 810, 811, 111, 
	111, 111, 135, 135, 135, 187, 217, 111, 
	217, 63, 63, 64, 812, 135, 812, 111, 
	111, 111, 135, 135, 135, 187, 218, 111, 
	218, 63, 63, 64, 813, 135, 813, 111, 
	111, 111, 135, 135, 135, 187, 219, 111, 
	219, 63, 63, 64, 814, 135, 814, 111, 
	111, 111, 135, 135, 135, 187, 220, 111, 
	220, 63, 63, 64, 815, 135, 815, 111, 
	111, 111, 135, 135, 135, 187, 221, 111, 
	221, 63, 63, 64, 816, 135, 816, 111, 
	111, 111, 135, 135, 135, 187, 222, 111, 
	222, 63, 63, 64, 817, 135, 817, 111, 
	111, 111, 135, 135, 135, 187, 223, 111, 
	223, 63, 63, 64, 818, 135, 818, 111, 
	111, 111, 135, 135, 135, 187, 224, 225, 
	111, 224, 225, 63, 63, 64, 819, 820, 
	135, 819, 820, 111, 111, 111, 135, 135, 
	135, 187, 226, 111, 226, 63, 63, 64, 
	821, 135, 821, 111, 111, 111, 135, 135, 
	135, 187, 227, 228, 229, 111, 227, 228, 
	229, 63, 63, 64, 822, 823, 824, 135, 
	822, 823, 824, 111, 111, 111, 135, 135, 
	135, 187, 231, 232, 233, 234, 235, 236, 
	237, 238, 239, 232, 233, 234, 235, 236, 
	237, 238, 63, 63, 64, 825, 826, 827, 
	828, 829, 830, 831, 832, 825, 826, 827, 
	828, 829, 830, 831, 111, 111, 111, 135, 
	135, 135, 230, 240, 111, 240, 63, 63, 
	64, 833, 135, 833, 111, 111, 111, 135, 
	135, 135, 187, 241, 111, 241, 63, 63, 
	64, 834, 135, 834, 111, 111, 111, 135, 
	135, 135, 187, 243, 63, 63, 64, 835, 
	111, 111, 111, 135, 135, 135, 242, 244, 
	245, 111, 244, 245, 63, 63, 64, 836, 
	837, 135, 836, 837, 111, 111, 111, 135, 
	135, 135, 187, 246, 111, 246, 63, 63, 
	64, 838, 135, 838, 111, 111, 111, 135, 
	135, 135, 187, 247, 111, 247, 63, 63, 
	64, 839, 135, 839, 111, 111, 111, 135, 
	135, 135, 187, 248, 111, 248, 63, 63, 
	64, 840, 135, 840, 111, 111, 111, 135, 
	135, 135, 187, 250, 111, 250, 63, 63, 
	64, 841, 135, 841, 111, 111, 111, 135, 
	135, 135, 249, 252, 111, 63, 63, 64, 
	135, 111, 111, 111, 135, 135, 135, 251, 
	254, 255, 256, 111, 254, 255, 256, 63, 
	63, 64, 842, 843, 844, 135, 842, 843, 
	844, 111, 111, 111, 135, 135, 135, 253, 
	257, 258, 111, 257, 258, 63, 63, 64, 
	845, 846, 135, 845, 846, 111, 111, 111, 
	135, 135, 135, 187, 260, 261, 262, 263, 
	264, 111, 260, 261, 262, 263, 264, 63, 
	63, 64, 847, 848, 849, 850, 851, 135, 
	847, 848, 849, 850, 851, 111, 111, 111, 
	135, 135, 135, 259, 266, 111, 266, 63, 
	63, 64, 852, 135, 852, 111, 111, 111, 
	135, 135, 135, 265, 268, 111, 268, 63, 
	63, 64, 853, 135, 853, 111, 111, 111, 
	135, 135, 135, 267, 269, 111, 63, 63, 
	64, 135, 111, 111, 111, 135, 135, 135, 
	187, 270, 271, 272, 273, 274, 275, 111, 
	270, 271, 272, 273, 274, 275, 63, 63, 
	64, 854, 855, 856, 857, 858, 859, 135, 
	854, 855, 856, 857, 858, 859, 111, 111, 
	111, 135, 135, 135, 187, 276, 111, 276, 
	63, 63, 64, 860, 135, 860, 111, 111, 
	111, 135, 135, 135, 187, 277, 111, 277, 
	63, 63, 64, 861, 135, 861, 111, 111, 
	111, 135, 135, 135, 187, 278, 111, 278, 
	63, 63, 64, 862, 135, 862, 111, 111, 
	111, 135, 135, 135, 187, 279, 280, 111, 
	279, 280, 63, 63, 64, 863, 864, 135, 
	863, 864, 111, 111, 111, 135, 135, 135, 
	187, 282, 283, 111, 282, 283, 63, 63, 
	64, 865, 866, 135, 865, 866, 111, 111, 
	111, 135, 135, 135, 281, 285, 286, 287, 
	288, 289, 290, 291, 292, 111, 286, 287, 
	288, 289, 290, 291, 292, 63, 63, 64, 
	867, 868, 869, 870, 871, 872, 873, 135, 
	867, 868, 869, 870, 871, 872, 873, 111, 
	111, 111, 135, 135, 135, 284, 293, 294, 
	111, 293, 294, 63, 63, 64, 874, 875, 
	135, 874, 875, 111, 111, 111, 135, 135, 
	135, 187, 295, 296, 111, 295, 296, 63, 
	63, 64, 876, 877, 135, 876, 877, 111, 
	111, 111, 135, 135, 135, 187, 298, 299, 
	300, 301, 302, 111, 299, 300, 301, 302, 
	63, 63, 64, 878, 879, 880, 881, 135, 
	878, 879, 880, 881, 111, 111, 111, 135, 
	135, 135, 297, 303, 304, 305, 306, 307, 
	308, 309, 310, 311, 312, 111, 303, 304, 
	305, 306, 307, 308, 309, 310, 311, 312, 
	63, 63, 64, 882, 883, 884, 885, 886, 
	887, 888, 889, 890, 891, 135, 882, 883, 
	884, 885, 886, 887, 888, 889, 890, 891, 
	111, 111, 111, 135, 135, 135, 187, 313, 
	111, 313, 63, 63, 64, 892, 135, 892, 
	111, 111, 111, 135, 135, 135, 187, 314, 
	111, 314, 63, 63, 64, 893, 135, 893, 
	111, 111, 111, 135, 135, 135, 187, 315, 
	111, 315, 63, 63, 64, 894, 135, 894, 
	111, 111, 111, 135, 135, 135, 187, 316, 
	111, 316, 63, 63, 64, 895, 135, 895, 
	111, 111, 111, 135, 135, 135, 187, 317, 
	111, 317, 63, 63, 64, 896, 135, 896, 
	111, 111, 111, 135, 135, 135, 187, 318, 
	111, 318, 63, 63, 64, 897, 135, 897, 
	111, 111, 111, 135, 135, 135, 187, 319, 
	111, 319, 63, 63, 64, 898, 135, 898, 
	111, 111, 111, 135, 135, 135, 187, 320, 
	111, 320, 63, 63, 64, 899, 135, 899, 
	111, 111, 111, 135, 135, 135, 187, 321, 
	111, 321, 63, 63, 64, 900, 135, 900, 
	111, 111, 111, 135, 135, 135, 187, 322, 
	111, 322, 63, 63, 64, 901, 135, 901, 
	111, 111, 111, 135, 135, 135, 187, 323, 
	111, 323, 63, 63, 64, 902, 135, 902, 
	111, 111, 111, 135, 135, 135, 187, 324, 
	111, 324, 63, 63, 64, 903, 135, 903, 
	111, 111, 111, 135, 135, 135, 187, 325, 
	111, 325, 63, 63, 64, 904, 135, 904, 
	111, 111, 111, 135, 135, 135, 187, 326, 
	111, 326, 63, 63, 64, 905, 135, 905, 
	111, 111, 111, 135, 135, 135, 187, 327, 
	111, 327, 63, 63, 64, 906, 135, 906, 
	111, 111, 111, 135, 135, 135, 187, 328, 
	111, 328, 63, 63, 64, 907, 135, 907, 
	111, 111, 111, 135, 135, 135, 187, 329, 
	111, 329, 63, 63, 64, 908, 135, 908, 
	111, 111, 111, 135, 135, 135, 187, 330, 
	111, 330, 63, 63, 64, 909, 135, 909, 
	111, 111, 111, 135, 135, 135, 187, 331, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 187, 332, 111, 63, 63, 
	64, 135, 111, 111, 111, 135, 135, 135, 
	187, 334, 335, 336, 337, 338, 111, 335, 
	336, 337, 338, 63, 63, 64, 910, 911, 
	912, 913, 135, 910, 911, 912, 913, 111, 
	111, 111, 135, 135, 135, 333, 340, 111, 
	340, 63, 63, 64, 914, 135, 914, 111, 
	111, 111, 135, 135, 135, 339, 341, 342, 
	111, 341, 342, 63, 63, 64, 915, 916, 
	135, 915, 916, 111, 111, 111, 135, 135, 
	135, 187, 343, 111, 343, 63, 63, 64, 
	917, 135, 917, 111, 111, 111, 135, 135, 
	135, 187, 345, 346, 111, 345, 346, 63, 
	63, 64, 918, 919, 135, 918, 919, 111, 
	111, 111, 135, 135, 135, 344, 347, 111, 
	347, 63, 63, 64, 920, 135, 920, 111, 
	111, 111, 135, 135, 135, 187, 348, 111, 
	348, 63, 63, 64, 921, 135, 921, 111, 
	111, 111, 135, 135, 135, 187, 349, 111, 
	349, 63, 63, 64, 922, 135, 922, 111, 
	111, 111, 135, 135, 135, 187, 350, 111, 
	350, 63, 63, 64, 923, 135, 923, 111, 
	111, 111, 135, 135, 135, 187, 351, 111, 
	351, 63, 63, 64, 924, 135, 924, 111, 
	111, 111, 135, 135, 135, 187, 352, 111, 
	352, 63, 63, 64, 925, 135, 925, 111, 
	111, 111, 135, 135, 135, 187, 353, 111, 
	353, 63, 63, 64, 926, 135, 926, 111, 
	111, 111, 135, 135, 135, 187, 354, 111, 
	354, 63, 63, 64, 927, 135, 927, 111, 
	111, 111, 135, 135, 135, 187, 355, 111, 
	355, 63, 63, 64, 928, 135, 928, 111, 
	111, 111, 135, 135, 135, 187, 357, 358, 
	111, 357, 358, 63, 63, 64, 929, 930, 
	135, 929, 930, 111, 111, 111, 135, 135, 
	135, 356, 359, 111, 359, 63, 63, 64, 
	931, 135, 931, 111, 111, 111, 135, 135, 
	135, 187, 360, 111, 360, 63, 63, 64, 
	932, 135, 932, 111, 111, 111, 135, 135, 
	135, 187, 361, 111, 361, 63, 63, 64, 
	933, 135, 933, 111, 111, 111, 135, 135, 
	135, 187, 363, 364, 365, 111, 364, 365, 
	63, 63, 64, 934, 935, 135, 934, 935, 
	111, 111, 111, 135, 135, 135, 362, 366, 
	111, 366, 63, 63, 64, 936, 135, 936, 
	111, 111, 111, 135, 135, 135, 187, 367, 
	111, 367, 63, 63, 64, 937, 135, 937, 
	111, 111, 111, 135, 135, 135, 187, 369, 
	111, 369, 63, 63, 64, 938, 135, 938, 
	111, 111, 111, 135, 135, 135, 368, 370, 
	111, 370, 63, 63, 64, 939, 135, 939, 
	111, 111, 111, 135, 135, 135, 187, 371, 
	111, 371, 63, 63, 64, 940, 135, 940, 
	111, 111, 111, 135, 135, 135, 187, 372, 
	111, 372, 63, 63, 64, 941, 135, 941, 
	111, 111, 111, 135, 135, 135, 187, 373, 
	111, 373, 63, 63, 64, 942, 135, 942, 
	111, 111, 111, 135, 135, 135, 187, 374, 
	111, 374, 63, 63, 64, 943, 135, 943, 
	111, 111, 111, 135, 135, 135, 187, 375, 
	111, 375, 63, 63, 64, 944, 135, 944, 
	111, 111, 111, 135, 135, 135, 187, 376, 
	111, 376, 63, 63, 64, 945, 135, 945, 
	111, 111, 111, 135, 135, 135, 187, 378, 
	379, 380, 111, 379, 380, 63, 63, 64, 
	946, 947, 135, 946, 947, 111, 111, 111, 
	135, 135, 135, 377, 381, 111, 381, 63, 
	63, 64, 948, 135, 948, 111, 111, 111, 
	135, 135, 135, 187, 382, 111, 382, 63, 
	63, 64, 949, 135, 949, 111, 111, 111, 
	135, 135, 135, 187, 384, 385, 111, 385, 
	63, 63, 64, 950, 135, 950, 111, 111, 
	111, 135, 135, 135, 383, 387, 388, 389, 
	390, 391, 392, 393, 394, 395, 111, 387, 
	388, 389, 390, 391, 392, 393, 394, 395, 
	63, 63, 64, 951, 952, 953, 954, 955, 
	956, 957, 958, 959, 135, 951, 952, 953, 
	954, 955, 956, 957, 958, 959, 111, 111, 
	111, 135, 135, 135, 386, 396, 111, 396, 
	63, 63, 64, 960, 135, 960, 111, 111, 
	111, 135, 135, 135, 187, 397, 111, 397, 
	63, 63, 64, 961, 135, 961, 111, 111, 
	111, 135, 135, 135, 187, 399, 400, 111, 
	399, 400, 63, 63, 64, 962, 963, 135, 
	962, 963, 111, 111, 111, 135, 135, 135, 
	398, 401, 111, 401, 63, 63, 64, 964, 
	135, 964, 111, 111, 111, 135, 135, 135, 
	187, 402, 111, 402, 63, 63, 64, 965, 
	135, 965, 111, 111, 111, 135, 135, 135, 
	187, 403, 111, 403, 63, 63, 64, 966, 
	135, 966, 111, 111, 111, 135, 135, 135, 
	187, 404, 111, 404, 63, 63, 64, 967, 
	135, 967, 111, 111, 111, 135, 135, 135, 
	187, 405, 111, 405, 63, 63, 64, 968, 
	135, 968, 111, 111, 111, 135, 135, 135, 
	187, 406, 111, 406, 63, 63, 64, 969, 
	135, 969, 111, 111, 111, 135, 135, 135, 
	187, 408, 409, 410, 411, 412, 413, 414, 
	111, 409, 410, 411, 412, 413, 414, 63, 
	63, 970, 64, 971, 972, 973, 974, 975, 
	976, 135, 971, 972, 973, 974, 975, 976, 
	111, 111, 111, 135, 135, 135, 407, 416, 
	111, 416, 63, 63, 64, 977, 135, 977, 
	111, 111, 111, 135, 135, 135, 415, 417, 
	111, 417, 63, 63, 64, 978, 135, 978, 
	111, 111, 111, 135, 135, 135, 187, 418, 
	111, 418, 63, 63, 64, 979, 135, 979, 
	111, 111, 111, 135, 135, 135, 187, 419, 
	111, 419, 63, 63, 64, 980, 135, 980, 
	111, 111, 111, 135, 135, 135, 187, 421, 
	111, 421, 63, 63, 64, 981, 135, 981, 
	111, 111, 111, 135, 135, 135, 420, 423, 
	111, 423, 63, 63, 64, 982, 135, 982, 
	111, 111, 111, 135, 135, 135, 422, 424, 
	111, 424, 63, 63, 64, 983, 135, 983, 
	111, 111, 111, 135, 135, 135, 187, 425, 
	111, 425, 63, 63, 64, 984, 135, 984, 
	111, 111, 111, 135, 135, 135, 187, 426, 
	111, 426, 63, 63, 64, 985, 135, 985, 
	111, 111, 111, 135, 135, 135, 187, 427, 
	428, 111, 427, 428, 63, 63, 64, 986, 
	987, 135, 986, 987, 111, 111, 111, 135, 
	135, 135, 187, 430, 431, 111, 430, 431, 
	63, 63, 64, 988, 989, 135, 988, 989, 
	111, 111, 111, 135, 135, 135, 429, 432, 
	111, 432, 63, 63, 64, 990, 135, 990, 
	111, 111, 111, 135, 135, 135, 187, 433, 
	111, 433, 63, 63, 64, 991, 135, 991, 
	111, 111, 111, 135, 135, 135, 187, 434, 
	111, 434, 63, 63, 64, 992, 135, 992, 
	111, 111, 111, 135, 135, 135, 187, 435, 
	111, 435, 63, 63, 64, 993, 135, 993, 
	111, 111, 111, 135, 135, 135, 187, 437, 
	438, 111, 437, 438, 63, 63, 64, 994, 
	995, 135, 994, 995, 111, 111, 111, 135, 
	135, 135, 436, 440, 441, 111, 440, 441, 
	63, 63, 64, 996, 997, 135, 996, 997, 
	111, 111, 111, 135, 135, 135, 439, 442, 
	443, 444, 445, 446, 447, 448, 442, 443, 
	444, 445, 446, 447, 63, 63, 64, 998, 
	999, 1000, 1001, 1002, 1003, 1004, 998, 999, 
	1000, 1001, 1002, 1003, 111, 111, 111, 135, 
	135, 135, 187, 450, 111, 450, 63, 63, 
	64, 1005, 135, 1005, 111, 111, 111, 135, 
	135, 135, 449, 451, 452, 111, 451, 452, 
	63, 63, 64, 1006, 1007, 135, 1006, 1007, 
	111, 111, 111, 135, 135, 135, 187, 454, 
	455, 111, 454, 455, 63, 63, 64, 1008, 
	1009, 135, 1008, 1009, 111, 111, 111, 135, 
	135, 135, 453, 456, 457, 458, 459, 460, 
	111, 456, 457, 458, 459, 460, 63, 63, 
	64, 1010, 1011, 1012, 1013, 1014, 135, 1010, 
	1011, 1012, 1013, 1014, 111, 111, 111, 135, 
	135, 135, 187, 461, 462, 111, 461, 462, 
	63, 63, 64, 1015, 1016, 135, 1015, 1016, 
	111, 111, 111, 135, 135, 135, 187, 464, 
	465, 111, 464, 465, 63, 63, 64, 1017, 
	1018, 135, 1017, 1018, 111, 111, 111, 135, 
	135, 135, 463, 467, 468, 469, 470, 471, 
	472, 473, 474, 111, 468, 469, 470, 471, 
	472, 473, 474, 63, 63, 64, 1019, 1020, 
	1021, 1022, 1023, 1024, 1025, 135, 1019, 1020, 
	1021, 1022, 1023, 1024, 1025, 111, 111, 111, 
	135, 135, 135, 466, 476, 477, 478, 479, 
	480, 111, 476, 477, 478, 479, 480, 63, 
	63, 64, 1026, 1027, 1028, 1029, 1030, 135, 
	1026, 1027, 1028, 1029, 1030, 111, 111, 111, 
	135, 135, 135, 475, 482, 111, 482, 63, 
	63, 64, 1031, 135, 1031, 111, 111, 111, 
	135, 135, 135, 481, 484, 485, 486, 111, 
	484, 485, 486, 63, 63, 64, 1032, 1033, 
	1034, 135, 1032, 1033, 1034, 111, 111, 111, 
	135, 135, 135, 483, 488, 111, 488, 63, 
	63, 64, 1035, 135, 1035, 111, 111, 111, 
	135, 135, 135, 487, 489, 111, 489, 63, 
	63, 64, 1036, 135, 1036, 111, 111, 111, 
	135, 135, 135, 187, 491, 492, 493, 111, 
	491, 492, 493, 63, 63, 64, 1037, 1038, 
	1039, 135, 1037, 1038, 1039, 111, 111, 111, 
	135, 135, 135, 490, 495, 496, 111, 495, 
	496, 63, 63, 64, 1040, 1041, 135, 1040, 
	1041, 111, 111, 111, 135, 135, 135, 494, 
	497, 111, 497, 63, 63, 64, 1042, 135, 
	1042, 111, 111, 111, 135, 135, 135, 187, 
	498, 111, 498, 63, 63, 64, 1043, 135, 
	1043, 111, 111, 111, 135, 135, 135, 187, 
	499, 111, 499, 63, 63, 64, 1044, 135, 
	1044, 111, 111, 111, 135, 135, 135, 187, 
	500, 111, 500, 63, 63, 64, 1045, 135, 
	1045, 111, 111, 111, 135, 135, 135, 187, 
	501, 111, 501, 63, 63, 64, 1046, 135, 
	1046, 111, 111, 111, 135, 135, 135, 187, 
	503, 111, 503, 63, 63, 64, 1047, 135, 
	1047, 111, 111, 111, 135, 135, 135, 502, 
	504, 111, 504, 63, 63, 64, 1048, 135, 
	1048, 111, 111, 111, 135, 135, 135, 187, 
	505, 111, 505, 63, 63, 64, 1049, 135, 
	1049, 111, 111, 111, 135, 135, 135, 187, 
	506, 111, 506, 63, 63, 64, 1050, 135, 
	1050, 111, 111, 111, 135, 135, 135, 187, 
	507, 111, 507, 63, 63, 64, 1051, 135, 
	1051, 111, 111, 111, 135, 135, 135, 187, 
	508, 111, 508, 63, 63, 64, 1052, 135, 
	1052, 111, 111, 111, 135, 135, 135, 187, 
	509, 510, 111, 509, 510, 63, 63, 64, 
	1053, 1054, 135, 1053, 1054, 111, 111, 111, 
	135, 135, 135, 187, 511, 111, 511, 63, 
	63, 64, 1055, 135, 1055, 111, 111, 111, 
	135, 135, 135, 187, 512, 513, 514, 111, 
	512, 513, 514, 63, 63, 64, 1056, 1057, 
	1058, 135, 1056, 1057, 1058, 111, 111, 111, 
	135, 135, 135, 187, 515, 516, 111, 515, 
	516, 63, 63, 64, 1059, 1060, 135, 1059, 
	1060, 111, 111, 111, 135, 135, 135, 187, 
	517, 111, 517, 63, 63, 64, 1061, 135, 
	1061, 111, 111, 111, 135, 135, 135, 187, 
	518, 519, 111, 518, 519, 63, 63, 64, 
	1062, 1063, 135, 1062, 1063, 111, 111, 111, 
	135, 135, 135, 187, 520, 111, 520, 63, 
	63, 64, 1064, 135, 1064, 111, 111, 111, 
	135, 135, 135, 187, 521, 111, 521, 63, 
	63, 64, 1065, 135, 1065, 111, 111, 111, 
	135, 135, 135, 187, 522, 523, 111, 522, 
	523, 63, 63, 64, 1066, 1067, 135, 1066, 
	1067, 111, 111, 111, 135, 135, 135, 187, 
	524, 111, 524, 63, 63, 64, 1068, 135, 
	1068, 111, 111, 111, 135, 135, 135, 187, 
	525, 111, 525, 63, 63, 64, 1069, 135, 
	1069, 111, 111, 111, 135, 135, 135, 187, 
	527, 528, 529, 530, 531, 532, 111, 527, 
	528, 529, 530, 531, 532, 63, 63, 64, 
	1070, 1071, 1072, 1073, 1074, 1075, 135, 1070, 
	1071, 1072, 1073, 1074, 1075, 111, 111, 111, 
	135, 135, 135, 526, 533, 111, 533, 63, 
	63, 64, 1076, 135, 1076, 111, 111, 111, 
	135, 135, 135, 187, 534, 111, 534, 63, 
	63, 64, 1077, 135, 1077, 111, 111, 111, 
	135, 135, 135, 187, 535, 111, 535, 63, 
	63, 64, 1078, 135, 1078, 111, 111, 111, 
	135, 135, 135, 187, 536, 111, 536, 63, 
	63, 64, 1079, 135, 1079, 111, 111, 111, 
	135, 135, 135, 187, 537, 111, 537, 63, 
	63, 64, 1080, 135, 1080, 111, 111, 111, 
	135, 135, 135, 187, 538, 111, 538, 63, 
	63, 64, 1081, 135, 1081, 111, 111, 111, 
	135, 135, 135, 187, 540, 541, 542, 543, 
	544, 545, 546, 547, 111, 63, 63, 1082, 
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 64, 
	135, 111, 111, 111, 135, 135, 135, 539, 
	548, 549, 111, 548, 549, 63, 63, 64, 
	1090, 1091, 135, 1090, 1091, 111, 111, 111, 
	135, 135, 135, 187, 550, 111, 550, 63, 
	63, 64, 1092, 135, 1092, 111, 111, 111, 
	135, 135, 135, 187, 551, 111, 551, 63, 
	63, 64, 1093, 135, 1093, 111, 111, 111, 
	135, 135, 135, 187, 552, 111, 552, 63, 
	63, 64, 1094, 135, 1094, 111, 111, 111, 
	135, 135, 135, 187, 553, 111, 553, 63, 
	63, 64, 1095, 135, 1095, 111, 111, 111, 
	135, 135, 135, 187, 554, 111, 554, 63, 
	63, 64, 1096, 135, 1096, 111, 111, 111, 
	135, 135, 135, 187, 555, 556, 557, 558, 
	559, 111, 555, 556, 557, 558, 559, 63, 
	63, 64, 1097, 1098, 1099, 1100, 1101, 135, 
	1097, 1098, 1099, 1100, 1101, 111, 111, 111, 
	135, 135, 135, 187, 560, 561, 111, 560, 
	561, 63, 63, 64, 1102, 1103, 135, 1102, 
	1103, 111, 111, 111, 135, 135, 135, 187, 
	562, 111, 562, 63, 63, 64, 1104, 135, 
	1104, 111, 111, 111, 135, 135, 135, 187, 
	563, 111, 563, 63, 63, 64, 1105, 135, 
	1105, 111, 111, 111, 135, 135, 135, 187, 
	564, 111, 564, 63, 63, 64, 1106, 135, 
	1106, 111, 111, 111, 135, 135, 135, 187, 
	565, 111, 565, 63, 63, 64, 1107, 135, 
	1107, 111, 111, 111, 135, 135, 135, 187, 
	566, 111, 566, 63, 63, 64, 1108, 135, 
	1108, 111, 111, 111, 135, 135, 135, 187, 
	567, 568, 569, 111, 567, 568, 569, 63, 
	63, 64, 1109, 1110, 1111, 135, 1109, 1110, 
	1111, 111, 111, 111, 135, 135, 135, 187, 
	571, 572, 573, 111, 571, 572, 573, 63, 
	63, 64, 1112, 1113, 1114, 135, 1112, 1113, 
	1114, 111, 111, 111, 135, 135, 135, 570, 
	574, 575, 111, 574, 575, 63, 63, 64, 
	1115, 1116, 135, 1115, 1116, 111, 111, 111, 
	135, 135, 135, 187, 576, 577, 111, 576, 
	577, 63, 63, 64, 1117, 1118, 135, 1117, 
	1118, 111, 111, 111, 135, 135, 135, 187, 
	579, 111, 579, 63, 63, 64, 1119, 135, 
	1119, 111, 111, 111, 135, 135, 135, 578, 
	580, 581, 111, 580, 581, 63, 63, 64, 
	1120, 1121, 135, 1120, 1121, 111, 111, 111, 
	135, 135, 135, 187, 583, 111, 583, 63, 
	63, 64, 1122, 135, 1122, 111, 111, 111, 
	135, 135, 135, 582, 584, 111, 584, 63, 
	63, 64, 1123, 135, 1123, 111, 111, 111, 
	135, 135, 135, 187, 586, 587, 588, 111, 
	587, 588, 63, 63, 1124, 64, 1125, 1126, 
	135, 1125, 1126, 111, 111, 111, 135, 135, 
	135, 585, 590, 111, 590, 63, 63, 64, 
	1127, 135, 1127, 111, 111, 111, 135, 135, 
	135, 589, 591, 111, 591, 63, 63, 64, 
	1128, 135, 1128, 111, 111, 111, 135, 135, 
	135, 187, 593, 594, 595, 596, 597, 598, 
	111, 593, 594, 595, 596, 597, 598, 63, 
	63, 64, 1129, 1130, 1131, 1132, 1133, 1134, 
	135, 1129, 1130, 1131, 1132, 1133, 1134, 111, 
	111, 111, 135, 135, 135, 592, 599, 111, 
	599, 63, 63, 64, 1135, 135, 1135, 111, 
	111, 111, 135, 135, 135, 187, 600, 111, 
	600, 63, 63, 64, 1136, 135, 1136, 111, 
	111, 111, 135, 135, 135, 187, 601, 111, 
	601, 63, 63, 64, 1137, 135, 1137, 111, 
	111, 111, 135, 135, 135, 187, 602, 111, 
	602, 63, 63, 64, 1138, 135, 1138, 111, 
	111, 111, 135, 135, 135, 187, 603, 111, 
	603, 63, 63, 64, 1139, 135, 1139, 111, 
	111, 111, 135, 135, 135, 187, 604, 111, 
	604, 63, 63, 64, 1140, 135, 1140, 111, 
	111, 111, 135, 135, 135, 187, 605, 111, 
	605, 63, 63, 64, 1141, 135, 1141, 111, 
	111, 111, 135, 135, 135, 187, 606, 111, 
	606, 63, 63, 64, 1142, 135, 1142, 111, 
	111, 111, 135, 135, 135, 187, 607, 608, 
	111, 607, 608, 63, 63, 64, 1143, 1144, 
	135, 1143, 1144, 111, 111, 111, 135, 135, 
	135, 187, 609, 111, 609, 63, 63, 64, 
	1145, 135, 1145, 111, 111, 111, 135, 135, 
	135, 187, 610, 111, 610, 63, 63, 64, 
	1146, 135, 1146, 111, 111, 111, 135, 135, 
	135, 187, 612, 111, 612, 63, 63, 64, 
	1147, 135, 1147, 111, 111, 111, 135, 135, 
	135, 611, 613, 614, 111, 613, 614, 63, 
	63, 64, 1148, 1149, 135, 1148, 1149, 111, 
	111, 111, 135, 135, 135, 187, 615, 111, 
	615, 63, 63, 64, 1150, 135, 1150, 111, 
	111, 111, 135, 135, 135, 187, 616, 111, 
	616, 63, 63, 64, 1151, 135, 1151, 111, 
	111, 111, 135, 135, 135, 187, 617, 111, 
	617, 63, 63, 64, 1152, 135, 1152, 111, 
	111, 111, 135, 135, 135, 187, 618, 111, 
	618, 63, 63, 64, 1153, 135, 1153, 111, 
	111, 111, 135, 135, 135, 187, 620, 621, 
	622, 623, 624, 625, 626, 627, 628, 629, 
	630, 631, 620, 621, 622, 623, 624, 625, 
	626, 627, 628, 629, 630, 63, 63, 64, 
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 
	1162, 1163, 1164, 1165, 1154, 1155, 1156, 1157, 
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 111, 
	111, 111, 135, 135, 135, 619, 632, 633, 
	111, 632, 633, 63, 63, 64, 1166, 1167, 
	135, 1166, 1167, 111, 111, 111, 135, 135, 
	135, 187, 634, 111, 634, 63, 63, 64, 
	1168, 135, 1168, 111, 111, 111, 135, 135, 
	135, 187, 635, 111, 635, 63, 63, 64, 
	1169, 135, 1169, 111, 111, 111, 135, 135, 
	135, 187, 636, 111, 636, 63, 63, 64, 
	1170, 135, 1170, 111, 111, 111, 135, 135, 
	135, 187, 637, 111, 637, 63, 63, 64, 
	1171, 135, 1171, 111, 111, 111, 135, 135, 
	135, 187, 638, 639, 111, 638, 639, 63, 
	63, 64, 1172, 1173, 135, 1172, 1173, 111, 
	111, 111, 135, 135, 135, 187, 641, 642, 
	111, 641, 642, 63, 63, 64, 1174, 1175, 
	135, 1174, 1175, 111, 111, 111, 135, 135, 
	135, 640, 644, 645, 646, 111, 644, 645, 
	646, 63, 63, 64, 1176, 1177, 1178, 135, 
	1176, 1177, 1178, 111, 111, 111, 135, 135, 
	135, 643, 648, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 647, 650, 
	111, 650, 63, 63, 64, 1179, 135, 1179, 
	111, 111, 111, 135, 135, 135, 649, 652, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 651, 653, 654, 111, 653, 
	654, 63, 63, 64, 1180, 1181, 135, 1180, 
	1181, 111, 111, 111, 135, 135, 135, 187, 
	656, 657, 111, 656, 657, 63, 63, 64, 
	1182, 1183, 135, 1182, 1183, 111, 111, 111, 
	135, 135, 135, 655, 659, 660, 661, 111, 
	659, 660, 661, 63, 63, 64, 1184, 1185, 
	1186, 135, 1184, 1185, 1186, 111, 111, 111, 
	135, 135, 135, 658, 663, 111, 63, 63, 
	64, 135, 111, 111, 111, 135, 135, 135, 
	662, 665, 111, 665, 63, 63, 64, 1187, 
	135, 1187, 111, 111, 111, 135, 135, 135, 
	664, 667, 111, 63, 63, 64, 135, 111, 
	111, 111, 135, 135, 135, 666, 668, 111, 
	668, 63, 63, 64, 1188, 135, 1188, 111, 
	111, 111, 135, 135, 135, 187, 669, 670, 
	671, 672, 673, 111, 669, 670, 671, 672, 
	673, 63, 63, 64, 1189, 1190, 1191, 1192, 
	1193, 135, 1189, 1190, 1191, 1192, 1193, 111, 
	111, 111, 135, 135, 135, 187, 674, 675, 
	111, 674, 675, 63, 63, 64, 1194, 1195, 
	135, 1194, 1195, 111, 111, 111, 135, 135, 
	135, 187, 677, 678, 111, 677, 678, 63, 
	63, 64, 1196, 1197, 135, 1196, 1197, 111, 
	111, 111, 135, 135, 135, 676, 679, 680, 
	681, 682, 683, 684, 685, 686, 687, 688, 
	689, 111, 679, 680, 681, 682, 683, 684, 
	685, 686, 687, 688, 689, 63, 63, 64, 
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 
	1206, 1207, 1208, 135, 1198, 1199, 1200, 1201, 
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 111, 
	111, 111, 135, 135, 135, 187, 690, 691, 
	692, 111, 690, 691, 692, 63, 63, 64, 
	1209, 1210, 1211, 135, 1209, 1210, 1211, 111, 
	111, 111, 135, 135, 135, 187, 693, 111, 
	693, 63, 63, 64, 1212, 135, 1212, 111, 
	111, 111, 135, 135, 135, 187, 695, 111, 
	63, 63, 64, 135, 111, 111, 111, 135, 
	135, 135, 694, 696, 697, 111, 696, 697, 
	63, 63, 64, 1213, 1214, 135, 1213, 1214, 
	111, 111, 111, 135, 135, 135, 187, 698, 
	111, 698, 63, 63, 64, 1215, 135, 1215, 
	111, 111, 111, 135, 135, 135, 187, 699, 
	111, 699, 63, 63, 64, 1216, 135, 1216, 
	111, 111, 111, 135, 135, 135, 187, 700, 
	111, 700, 63, 63, 64, 1217, 135, 1217, 
	111, 111, 111, 135, 135, 135, 187, 701, 
	111, 701, 63, 63, 64, 1218, 135, 1218, 
	111, 111, 111, 135, 135, 135, 187, 703, 
	704, 111, 703, 704, 63, 63, 64, 1219, 
	1220, 135, 1219, 1220, 111, 111, 111, 135, 
	135, 135, 702, 705, 111, 705, 63, 63, 
	64, 1221, 135, 1221, 111, 111, 111, 135, 
	135, 135, 187, 706, 111, 706, 63, 63, 
	64, 1222, 135, 1222, 111, 111, 111, 135, 
	135, 135, 187, 707, 111, 707, 63, 63, 
	64, 1223, 135, 1223, 111, 111, 111, 135, 
	135, 135, 187, 708, 111, 708, 63, 63, 
	64, 1224, 135, 1224, 111, 111, 111, 135, 
	135, 135, 187, 709, 111, 709, 63, 63, 
	64, 1225, 135, 1225, 111, 111, 111, 135, 
	135, 135, 187, 710, 711, 712, 713, 111, 
	710, 711, 712, 713, 63, 63, 64, 1226, 
	1227, 1228, 1229, 135, 1226, 1227, 1228, 1229, 
	111, 111, 111, 135, 135, 135, 187, 715, 
	111, 715, 63, 63, 64, 1230, 135, 1230, 
	111, 111, 111, 135, 135, 135, 714, 716, 
	111, 716, 63, 63, 64, 1231, 135, 1231, 
	111, 111, 111, 135, 135, 135, 187, 717, 
	718, 111, 717, 718, 63, 63, 64, 1232, 
	1233, 135, 1232, 1233, 111, 111, 111, 135, 
	135, 135, 187, 719, 720, 111, 719, 720, 
	63, 63, 64, 1234, 1235, 135, 1234, 1235, 
	111, 111, 111, 135, 135, 135, 187, 722, 
	111, 722, 63, 63, 64, 1236, 135, 1236, 
	111, 111, 111, 135, 135, 135, 721, 724, 
	725, 726, 111, 724, 725, 726, 63, 63, 
	64, 1237, 1238, 1239, 135, 1237, 1238, 1239, 
	111, 111, 111, 135, 135, 135, 723, 727, 
	111, 727, 63, 63, 64, 1240, 135, 1240, 
	111, 111, 111, 135, 135, 135, 187, 728, 
	111, 728, 63, 63, 64, 1241, 135, 1241, 
	111, 111, 111, 135, 135, 135, 187, 729, 
	111, 729, 63, 63, 64, 1242, 135, 1242, 
	111, 111, 111, 135, 135, 135, 187, 730, 
	111, 730, 63, 63, 64, 1243, 135, 1243, 
	111, 111, 111, 135, 135, 135, 187, 732, 
	111, 732, 63, 63, 64, 1244, 135, 1244, 
	111, 111, 111, 135, 135, 135, 731, 733, 
	111, 733, 63, 63, 64, 1245, 135, 1245, 
	111, 111, 111, 135, 135, 135, 187, 734, 
	111, 734, 63, 63, 64, 1246, 135, 1246, 
	111, 111, 111, 135, 135, 135, 187, 735, 
	111, 735, 63, 63, 64, 1247, 135, 1247, 
	111, 111, 111, 135, 135, 135, 187, 736, 
	111, 736, 63, 63, 64, 1248, 135, 1248, 
	111, 111, 111, 135, 135, 135, 187, 737, 
	111, 737, 63, 63, 64, 1249, 135, 1249, 
	111, 111, 111, 135, 135, 135, 187, 738, 
	111, 738, 63, 63, 64, 1250, 135, 1250, 
	111, 111, 111, 135, 135, 135, 187, 739, 
	111, 739, 63, 63, 64, 1251, 135, 1251, 
	111, 111, 111, 135, 135, 135, 187, 740, 
	741, 111, 740, 741, 63, 63, 64, 1252, 
	1253, 135, 1252, 1253, 111, 111, 111, 135, 
	135, 135, 187, 742, 111, 742, 63, 63, 
	64, 1254, 135, 1254, 111, 111, 111, 135, 
	135, 135, 187, 743, 111, 743, 63, 63, 
	64, 1255, 135, 1255, 111, 111, 111, 135, 
	135, 135, 187, 744, 111, 744, 63, 63, 
	64, 1256, 135, 1256, 111, 111, 111, 135, 
	135, 135, 187, 746, 111, 746, 63, 63, 
	64, 1257, 135, 1257, 111, 111, 111, 135, 
	135, 135, 745, 747, 111, 747, 63, 63, 
	64, 1258, 135, 1258, 111, 111, 111, 135, 
	135, 135, 187, 748, 749, 111, 748, 749, 
	63, 63, 64, 1259, 1260, 135, 1259, 1260, 
	111, 111, 111, 135, 135, 135, 187, 750, 
	751, 111, 750, 751, 63, 63, 64, 1261, 
	1262, 135, 1261, 1262, 111, 111, 111, 135, 
	135, 135, 187, 752, 111, 752, 63, 63, 
	64, 1263, 135, 1263, 111, 111, 111, 135, 
	135, 135, 187, 753, 111, 753, 63, 63, 
	64, 1264, 135, 1264, 111, 111, 111, 135, 
	135, 135, 187, 754, 111, 754, 63, 63, 
	64, 1265, 135, 1265, 111, 111, 111, 135, 
	135, 135, 187, 755, 111, 755, 63, 63, 
	64, 1266, 135, 1266, 111, 111, 111, 135, 
	135, 135, 187, 756, 111, 756, 63, 63, 
	64, 1267, 135, 1267, 111, 111, 111, 135, 
	135, 135, 187, 757, 111, 757, 63, 63, 
	64, 1268, 135, 1268, 111, 111, 111, 135, 
	135, 135, 187, 759, 760, 761, 762, 763, 
	764, 765, 111, 759, 760, 761, 762, 763, 
	764, 765, 63, 63, 64, 1269, 1270, 1271, 
	1272, 1273, 1274, 1275, 135, 1269, 1270, 1271, 
	1272, 1273, 1274, 1275, 111, 111, 111, 135, 
	135, 135, 758, 766, 111, 766, 63, 63, 
	64, 1276, 135, 1276, 111, 111, 111, 135, 
	135, 135, 187, 767, 111, 767, 63, 63, 
	64, 1277, 135, 1277, 111, 111, 111, 135, 
	135, 135, 187, 768, 111, 768, 63, 63, 
	64, 1278, 135, 1278, 111, 111, 111, 135, 
	135, 135, 187, 769, 111, 769, 63, 63, 
	64, 1279, 135, 1279, 111, 111, 111, 135, 
	135, 135, 187, 770, 111, 770, 63, 63, 
	64, 1280, 135, 1280, 111, 111, 111, 135, 
	135, 135, 187, 771, 111, 771, 63, 63, 
	64, 1281, 135, 1281, 111, 111, 111, 135, 
	135, 135, 187, 772, 111, 772, 63, 63, 
	64, 1282, 135, 1282, 111, 111, 111, 135, 
	135, 135, 187, 773, 111, 773, 63, 63, 
	64, 1283, 135, 1283, 111, 111, 111, 135, 
	135, 135, 187, 774, 775, 776, 111, 774, 
	775, 776, 63, 63, 64, 1284, 1285, 1286, 
	135, 1284, 1285, 1286, 111, 111, 111, 135, 
	135, 135, 187, 777, 111, 777, 63, 63, 
	64, 1287, 135, 1287, 111, 111, 111, 135, 
	135, 135, 187, 778, 111, 778, 63, 63, 
	64, 1288, 135, 1288, 111, 111, 111, 135, 
	135, 135, 187, 779, 111, 779, 63, 63, 
	64, 1289, 135, 1289, 111, 111, 111, 135, 
	135, 135, 187, 0
};
static const short _lexer_trans_targs[] = {
	38, 2, 38, 38, 3, 4, 6, 7, 
	9, 11, 14, 5, 38, 38, 8, 38, 
	10, 38, 12, 13, 38, 38, 15, 38, 
	16, 38, 38, 51, 38, 19, 22, 24, 
	27, 20, 21, 38, 23, 38, 25, 26, 
	38, 28, 29, 38, 31, 33, 32, 38, 
	34, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 36, 363, 37, 
	38, 38, 38, 39, 38, 38, 40, 41, 
	43, 38, 44, 38, 45, 38, 38, 38, 
	38, 0, 46, 47, 48, 38, 52, 53, 
	54, 55, 38, 41, 38, 38, 38, 38, 
	38, 56, 38, 38, 38, 57, 71, 84, 
	106, 131, 149, 155, 160, 164, 192, 58, 
	199, 229, 243, 250, 261, 279, 301, 335, 
	341, 58, 349, 58, 362, 364, 378, 391, 
	413, 438, 456, 462, 467, 471, 499, 365, 
	506, 536, 550, 557, 568, 586, 608, 642, 
	648, 365, 656, 365, 38, 38, 40, 1, 
	42, 38, 38, 38, 38, 38, 38, 38, 
	50, 17, 49, 38, 50, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 59, 60, 61, 62, 
	63, 67, 68, 38, 58, 58, 58, 58, 
	58, 38, 38, 64, 66, 65, 58, 58, 
	58, 58, 58, 69, 70, 58, 38, 38, 
	72, 73, 77, 79, 81, 38, 38, 74, 
	58, 75, 76, 58, 78, 58, 80, 58, 
	82, 83, 58, 58, 58, 58, 38, 38, 
	85, 92, 94, 95, 96, 99, 58, 100, 
	86, 87, 38, 88, 89, 90, 58, 91, 
	58, 38, 93, 38, 38, 38, 58, 58, 
	58, 58, 58, 38, 97, 58, 98, 58, 
	58, 38, 58, 38, 58, 18, 58, 101, 
	58, 104, 105, 58, 102, 103, 58, 58, 
	58, 38, 58, 58, 38, 38, 107, 108, 
	109, 58, 126, 128, 130, 58, 58, 58, 
	58, 38, 38, 58, 110, 121, 122, 58, 
	58, 111, 112, 116, 58, 58, 58, 118, 
	58, 58, 113, 114, 115, 58, 117, 58, 
	119, 120, 58, 58, 123, 124, 125, 58, 
	127, 58, 129, 30, 35, 38, 38, 132, 
	133, 142, 145, 38, 58, 134, 141, 135, 
	38, 136, 138, 137, 58, 139, 140, 58, 
	58, 143, 144, 58, 38, 146, 58, 147, 
	148, 58, 38, 38, 150, 154, 151, 152, 
	38, 153, 58, 58, 156, 157, 158, 159, 
	58, 38, 38, 161, 163, 162, 58, 38, 
	38, 58, 38, 165, 167, 173, 58, 174, 
	184, 185, 190, 191, 166, 58, 38, 168, 
	170, 169, 58, 171, 172, 58, 58, 38, 
	58, 175, 179, 180, 58, 181, 58, 38, 
	176, 177, 178, 58, 38, 58, 38, 58, 
	182, 183, 58, 58, 58, 38, 186, 188, 
	187, 58, 189, 58, 38, 58, 58, 38, 
	58, 58, 58, 193, 194, 195, 58, 58, 
	196, 38, 58, 58, 58, 38, 58, 58, 
	58, 58, 197, 198, 58, 58, 58, 38, 
	58, 58, 38, 38, 200, 216, 218, 58, 
	220, 228, 58, 38, 201, 202, 205, 212, 
	215, 38, 58, 38, 203, 204, 58, 38, 
	58, 58, 38, 206, 211, 58, 38, 207, 
	58, 208, 209, 210, 58, 58, 38, 213, 
	214, 58, 58, 217, 58, 58, 219, 58, 
	221, 223, 225, 222, 58, 58, 224, 58, 
	58, 226, 227, 58, 58, 58, 38, 230, 
	234, 235, 237, 241, 242, 231, 232, 233, 
	58, 58, 236, 38, 58, 58, 58, 58, 
	58, 58, 58, 58, 238, 58, 239, 240, 
	58, 58, 58, 58, 244, 249, 58, 58, 
	58, 245, 246, 247, 248, 58, 58, 251, 
	252, 257, 38, 58, 58, 58, 253, 255, 
	254, 58, 38, 58, 256, 58, 38, 58, 
	258, 38, 58, 58, 259, 38, 260, 58, 
	38, 262, 58, 264, 267, 273, 274, 263, 
	58, 265, 266, 58, 268, 269, 270, 271, 
	272, 58, 58, 38, 58, 275, 278, 276, 
	277, 58, 58, 38, 280, 58, 281, 285, 
	287, 58, 291, 292, 293, 297, 58, 298, 
	58, 58, 282, 283, 284, 58, 58, 286, 
	38, 58, 58, 38, 288, 289, 58, 38, 
	38, 38, 290, 38, 38, 58, 58, 38, 
	58, 58, 38, 294, 295, 58, 38, 38, 
	38, 296, 38, 38, 58, 58, 58, 299, 
	300, 58, 58, 58, 38, 58, 58, 302, 
	303, 305, 314, 316, 317, 319, 320, 322, 
	325, 330, 58, 58, 58, 304, 38, 38, 
	306, 310, 307, 308, 309, 58, 38, 311, 
	312, 58, 313, 58, 315, 58, 58, 58, 
	58, 58, 38, 318, 58, 58, 58, 321, 
	58, 38, 58, 38, 58, 58, 323, 324, 
	58, 326, 327, 38, 328, 329, 58, 331, 
	332, 333, 334, 58, 336, 338, 337, 58, 
	339, 38, 340, 58, 342, 343, 58, 58, 
	344, 345, 346, 347, 348, 58, 38, 350, 
	352, 354, 356, 357, 358, 360, 351, 58, 
	353, 58, 355, 58, 58, 58, 58, 359, 
	58, 58, 361, 58, 38, 38, 366, 367, 
	368, 369, 370, 374, 375, 365, 365, 365, 
	365, 365, 371, 373, 372, 365, 365, 365, 
	365, 365, 376, 377, 365, 379, 380, 384, 
	386, 388, 381, 365, 382, 383, 365, 385, 
	365, 387, 365, 389, 390, 365, 365, 365, 
	365, 392, 399, 401, 402, 403, 406, 365, 
	407, 393, 394, 395, 396, 397, 365, 398, 
	365, 400, 365, 365, 365, 365, 365, 404, 
	365, 405, 365, 365, 365, 365, 365, 408, 
	365, 411, 412, 365, 409, 410, 365, 365, 
	365, 365, 365, 414, 415, 416, 365, 433, 
	435, 437, 365, 365, 365, 365, 365, 417, 
	428, 429, 365, 365, 418, 419, 423, 365, 
	365, 365, 425, 365, 365, 420, 421, 422, 
	365, 424, 365, 426, 427, 365, 365, 430, 
	431, 432, 365, 434, 365, 436, 439, 440, 
	449, 452, 365, 441, 448, 442, 443, 445, 
	444, 365, 446, 447, 365, 365, 450, 451, 
	365, 453, 365, 454, 455, 365, 457, 461, 
	458, 459, 460, 365, 365, 463, 464, 465, 
	466, 365, 468, 470, 469, 365, 365, 472, 
	474, 480, 365, 481, 491, 492, 497, 498, 
	473, 365, 475, 477, 476, 365, 478, 479, 
	365, 365, 365, 482, 486, 487, 365, 488, 
	365, 483, 484, 485, 365, 365, 365, 489, 
	490, 365, 365, 365, 493, 495, 494, 365, 
	496, 365, 365, 365, 365, 365, 365, 500, 
	501, 502, 365, 365, 503, 365, 365, 365, 
	365, 365, 365, 365, 504, 505, 365, 365, 
	365, 365, 365, 507, 523, 525, 365, 527, 
	535, 365, 508, 509, 512, 519, 522, 365, 
	510, 511, 365, 365, 365, 513, 518, 365, 
	514, 365, 515, 516, 517, 365, 365, 520, 
	521, 365, 365, 524, 365, 365, 526, 365, 
	528, 530, 532, 529, 365, 365, 531, 365, 
	365, 533, 534, 365, 365, 365, 537, 541, 
	542, 544, 548, 549, 538, 539, 540, 365, 
	365, 543, 365, 365, 365, 365, 365, 365, 
	365, 365, 545, 365, 546, 547, 365, 365, 
	365, 365, 551, 556, 365, 365, 365, 552, 
	553, 554, 555, 365, 365, 558, 559, 564, 
	365, 365, 365, 560, 562, 561, 365, 365, 
	563, 365, 365, 565, 365, 365, 566, 567, 
	365, 569, 365, 571, 574, 580, 581, 570, 
	365, 572, 573, 365, 575, 576, 577, 578, 
	579, 365, 365, 365, 582, 585, 583, 584, 
	365, 365, 587, 365, 588, 592, 594, 365, 
	598, 599, 600, 604, 365, 605, 365, 365, 
	589, 590, 591, 365, 365, 593, 365, 365, 
	595, 596, 365, 597, 365, 365, 365, 365, 
	601, 602, 365, 603, 365, 365, 365, 606, 
	607, 365, 365, 365, 365, 365, 609, 610, 
	612, 621, 623, 624, 626, 627, 629, 632, 
	637, 365, 365, 365, 611, 613, 617, 614, 
	615, 616, 365, 618, 619, 365, 620, 365, 
	622, 365, 365, 365, 365, 365, 625, 365, 
	365, 365, 628, 365, 365, 365, 365, 630, 
	631, 365, 633, 634, 635, 636, 365, 638, 
	639, 640, 641, 365, 643, 645, 644, 365, 
	646, 647, 365, 649, 650, 365, 365, 651, 
	652, 653, 654, 655, 365, 657, 659, 661, 
	663, 664, 665, 667, 658, 365, 660, 365, 
	662, 365, 365, 365, 365, 666, 365, 365, 
	668, 365
};
static const short _lexer_trans_actions[] = {
	339, 0, 147, 331, 0, 0, 0, 0, 
	0, 0, 0, 0, 83, 95, 0, 85, 
	0, 91, 0, 0, 87, 89, 0, 93, 
	0, 145, 337, 0, 335, 0, 0, 0, 
	0, 0, 0, 119, 0, 123, 0, 0, 
	121, 0, 0, 117, 0, 0, 0, 139, 
	0, 125, 127, 129, 131, 133, 135, 137, 
	97, 101, 103, 99, 333, 0, 0, 0, 
	143, 141, 7, 0, 151, 9, 344, 347, 
	0, 149, 5, 13, 0, 15, 17, 19, 
	23, 0, 1244, 1244, 1244, 25, 0, 0, 
	0, 0, 41, 1256, 43, 153, 45, 47, 
	51, 0, 55, 57, 21, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1241, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 383, 0, 353, 5, 413, 386, 359, 
	389, 392, 416, 1241, 395, 419, 1241, 1241, 
	404, 371, 1241, 1241, 368, 425, 1241, 1241, 
	1241, 383, 431, 353, 155, 33, 1247, 0, 
	0, 329, 157, 11, 159, 161, 49, 323, 
	1250, 0, 1250, 327, 1253, 325, 317, 165, 
	27, 29, 31, 167, 35, 169, 39, 37, 
	171, 53, 191, 71, 0, 0, 0, 0, 
	0, 0, 0, 319, 464, 1025, 584, 587, 
	1022, 211, 81, 0, 0, 0, 470, 917, 
	1052, 590, 1055, 0, 0, 341, 181, 59, 
	0, 0, 0, 0, 0, 201, 75, 0, 
	593, 0, 0, 473, 0, 920, 0, 884, 
	0, 0, 872, 875, 881, 878, 173, 61, 
	0, 0, 0, 0, 0, 5, 1145, 0, 
	0, 0, 223, 0, 0, 0, 980, 0, 
	983, 307, 0, 225, 105, 309, 1079, 1082, 
	1070, 1136, 1142, 227, 0, 1151, 0, 617, 
	1148, 229, 608, 231, 614, 0, 1160, 0, 
	1178, 0, 0, 1166, 0, 0, 476, 1157, 
	1163, 311, 1172, 1169, 183, 63, 0, 0, 
	0, 626, 0, 0, 5, 620, 1049, 1040, 
	1046, 203, 77, 623, 0, 0, 0, 479, 
	482, 0, 0, 0, 494, 497, 500, 0, 
	506, 485, 0, 0, 0, 488, 0, 491, 
	0, 0, 503, 467, 0, 0, 0, 509, 
	0, 629, 5, 0, 0, 185, 65, 0, 
	0, 0, 0, 233, 428, 0, 0, 0, 
	219, 0, 0, 0, 518, 0, 0, 521, 
	512, 0, 0, 524, 235, 0, 638, 0, 
	0, 527, 193, 73, 0, 0, 0, 0, 
	287, 0, 824, 986, 0, 0, 0, 0, 
	530, 187, 67, 0, 0, 0, 641, 205, 
	79, 1238, 195, 0, 0, 0, 644, 0, 
	0, 0, 0, 0, 0, 923, 221, 0, 
	0, 0, 536, 0, 0, 539, 422, 237, 
	887, 0, 0, 0, 1037, 0, 1043, 239, 
	0, 0, 0, 542, 241, 656, 243, 662, 
	0, 0, 989, 926, 929, 215, 0, 0, 
	0, 932, 0, 935, 207, 398, 407, 209, 
	401, 410, 1094, 0, 0, 0, 668, 1100, 
	0, 303, 1088, 1091, 1097, 245, 1106, 1103, 
	1115, 1133, 0, 0, 1121, 1112, 1118, 305, 
	1127, 1124, 189, 69, 0, 0, 0, 377, 
	0, 0, 374, 247, 0, 0, 0, 0, 
	0, 299, 1013, 249, 0, 0, 806, 251, 
	809, 938, 253, 0, 0, 800, 255, 0, 
	803, 0, 0, 0, 812, 941, 297, 0, 
	0, 815, 818, 0, 1007, 545, 0, 548, 
	0, 0, 0, 0, 947, 953, 0, 950, 
	956, 0, 0, 554, 551, 998, 179, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	827, 890, 0, 289, 848, 851, 854, 857, 
	860, 863, 866, 869, 0, 992, 0, 0, 
	557, 959, 995, 356, 0, 0, 380, 350, 
	686, 0, 0, 0, 0, 830, 689, 0, 
	0, 0, 257, 1058, 560, 1061, 0, 0, 
	0, 695, 291, 896, 0, 698, 293, 902, 
	0, 259, 905, 704, 0, 261, 0, 797, 
	177, 0, 365, 0, 0, 0, 0, 0, 
	1229, 0, 0, 563, 0, 0, 0, 0, 
	0, 836, 833, 175, 710, 0, 0, 0, 
	0, 566, 713, 197, 0, 1184, 0, 0, 
	0, 1202, 0, 0, 0, 0, 1190, 0, 
	1073, 1076, 0, 0, 0, 962, 716, 0, 
	263, 722, 725, 265, 0, 0, 740, 267, 
	107, 269, 0, 271, 109, 1181, 1187, 313, 
	1196, 1193, 273, 0, 0, 755, 275, 111, 
	277, 0, 279, 113, 758, 1208, 1226, 0, 
	0, 1214, 1205, 1211, 315, 1220, 1217, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1031, 761, 1034, 0, 281, 115, 
	0, 0, 0, 0, 0, 569, 283, 0, 
	0, 839, 0, 965, 0, 1010, 770, 776, 
	773, 908, 213, 0, 1235, 779, 782, 0, 
	1085, 301, 1016, 217, 785, 1028, 0, 0, 
	968, 0, 0, 285, 0, 0, 791, 0, 
	0, 0, 0, 971, 0, 0, 0, 842, 
	0, 295, 0, 914, 0, 0, 974, 977, 
	0, 0, 0, 0, 0, 572, 199, 0, 
	0, 0, 0, 0, 0, 0, 0, 1019, 
	0, 575, 0, 578, 788, 461, 1064, 0, 
	1067, 581, 0, 1232, 163, 321, 1241, 1241, 
	1241, 449, 1241, 1241, 1241, 464, 1025, 584, 
	587, 1022, 1241, 1241, 1241, 470, 917, 1052, 
	590, 1055, 1241, 1241, 341, 434, 1241, 1241, 
	1241, 1241, 1241, 593, 1241, 1241, 473, 1241, 
	920, 1241, 884, 1241, 1241, 872, 875, 881, 
	878, 1241, 1139, 1154, 1241, 602, 1241, 1145, 
	1241, 1241, 596, 1241, 1241, 1241, 980, 1241, 
	983, 599, 1079, 1082, 1070, 1136, 1142, 605, 
	1151, 611, 617, 1148, 608, 614, 1160, 1241, 
	1178, 1241, 1175, 1166, 1241, 1241, 476, 1157, 
	1163, 1172, 1169, 1241, 1241, 437, 626, 1241, 
	1241, 1241, 620, 1049, 1040, 1046, 623, 1241, 
	1241, 1241, 479, 482, 1241, 1241, 1241, 494, 
	497, 500, 1241, 506, 485, 1241, 1241, 1241, 
	488, 1241, 491, 1241, 1241, 503, 467, 1241, 
	1241, 1241, 509, 1241, 629, 1241, 632, 1241, 
	1241, 635, 428, 1241, 1241, 515, 1241, 1241, 
	1241, 518, 1241, 1241, 521, 512, 1241, 1241, 
	524, 1241, 638, 1241, 1241, 527, 1241, 1241, 
	1241, 821, 1241, 824, 986, 1241, 1241, 1241, 
	1241, 530, 1241, 440, 1241, 641, 1238, 1241, 
	533, 1241, 644, 647, 1241, 455, 443, 446, 
	1241, 923, 1241, 1241, 1241, 536, 1241, 1241, 
	539, 422, 887, 650, 653, 659, 1037, 1241, 
	1043, 1241, 1241, 1241, 542, 656, 662, 1241, 
	1241, 989, 926, 929, 1241, 1241, 1241, 932, 
	1241, 935, 398, 407, 401, 410, 1094, 1109, 
	1241, 665, 668, 1100, 1241, 1088, 1091, 1097, 
	1106, 1103, 1115, 1133, 1241, 1130, 1121, 1112, 
	1118, 1127, 1124, 671, 1241, 1241, 377, 1241, 
	1241, 374, 1001, 674, 680, 944, 1241, 1013, 
	677, 1241, 806, 809, 938, 683, 1241, 800, 
	1241, 803, 1241, 1241, 1241, 812, 941, 1241, 
	1241, 815, 818, 1241, 1007, 545, 1241, 548, 
	1241, 1241, 1241, 1241, 947, 953, 1241, 950, 
	956, 1241, 1241, 554, 551, 998, 1241, 1241, 
	1241, 1241, 1241, 1241, 1241, 1241, 1241, 827, 
	890, 845, 848, 851, 854, 857, 860, 863, 
	866, 869, 1241, 992, 1241, 1241, 557, 959, 
	995, 356, 1241, 1241, 380, 350, 686, 1241, 
	1241, 1241, 1241, 830, 689, 692, 1241, 1241, 
	1058, 560, 1061, 1241, 1241, 893, 695, 896, 
	899, 698, 902, 701, 905, 704, 707, 1241, 
	797, 1241, 365, 1241, 1241, 362, 1241, 1241, 
	1229, 1241, 1241, 563, 1241, 1241, 1241, 1241, 
	1241, 836, 833, 710, 1241, 1241, 1241, 1241, 
	566, 713, 1241, 1184, 1241, 1241, 728, 1202, 
	1241, 1199, 743, 1241, 1190, 1241, 1073, 1076, 
	1241, 1241, 1241, 962, 716, 719, 722, 725, 
	731, 734, 740, 737, 1181, 1187, 1196, 1193, 
	746, 749, 755, 752, 758, 1208, 1226, 1241, 
	1223, 1214, 1205, 1211, 1220, 1217, 1241, 1241, 
	1241, 1241, 1241, 452, 1241, 1241, 458, 1241, 
	1241, 1031, 761, 1034, 764, 1241, 767, 1241, 
	1241, 1241, 569, 1241, 1241, 839, 1241, 965, 
	1241, 1010, 770, 776, 773, 908, 1241, 1235, 
	779, 782, 1004, 1085, 1016, 785, 1028, 1241, 
	1241, 968, 1241, 794, 1241, 1241, 791, 1241, 
	1241, 1241, 1241, 971, 1241, 1241, 1241, 842, 
	911, 1241, 914, 1241, 1241, 974, 977, 1241, 
	1241, 1241, 1241, 1241, 572, 1241, 1241, 1241, 
	1241, 1241, 1241, 1241, 1241, 1019, 1241, 575, 
	1241, 578, 788, 461, 1064, 1241, 1067, 581, 
	1241, 1232
};
static const short _lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_eof_trans[] = {
	0, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 27, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 61, 1, 0, 149, 
	1, 1, 154, 155, 157, 158, 160, 160, 
	160, 164, 1, 166, 167, 168, 172, 174, 
	177, 179, 1, 188, 188, 188, 194, 188, 
	188, 188, 188, 188, 188, 188, 188, 207, 
	214, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 231, 188, 188, 243, 
	188, 188, 188, 188, 250, 252, 254, 188, 
	260, 266, 268, 188, 188, 188, 188, 188, 
	188, 282, 285, 188, 188, 298, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 334, 340, 188, 188, 345, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 357, 188, 188, 188, 363, 188, 188, 
	369, 188, 188, 188, 188, 188, 188, 188, 
	378, 188, 188, 384, 387, 188, 188, 399, 
	188, 188, 188, 188, 188, 188, 408, 416, 
	188, 188, 188, 421, 423, 188, 188, 188, 
	188, 430, 188, 188, 188, 188, 437, 440, 
	188, 450, 188, 454, 188, 188, 464, 467, 
	476, 482, 484, 488, 188, 491, 495, 188, 
	188, 188, 188, 188, 503, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 527, 188, 188, 
	188, 188, 188, 188, 540, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 571, 188, 188, 579, 188, 
	583, 188, 586, 590, 188, 593, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 612, 188, 188, 188, 188, 188, 620, 
	188, 188, 188, 188, 188, 188, 641, 644, 
	648, 650, 652, 188, 656, 659, 663, 665, 
	667, 188, 188, 188, 677, 188, 188, 188, 
	695, 188, 188, 188, 188, 188, 703, 188, 
	188, 188, 188, 188, 188, 715, 188, 188, 
	188, 722, 724, 188, 188, 188, 188, 732, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 746, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 759, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 781, 782, 179, 1, 188, 188, 
	188, 194, 188, 188, 188, 188, 188, 188, 
	188, 188, 207, 214, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 231, 
	188, 188, 243, 188, 188, 188, 188, 250, 
	252, 254, 188, 260, 266, 268, 188, 188, 
	188, 188, 188, 188, 282, 285, 188, 188, 
	298, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 334, 340, 
	188, 188, 345, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 357, 188, 188, 188, 
	363, 188, 188, 369, 188, 188, 188, 188, 
	188, 188, 188, 378, 188, 188, 384, 387, 
	188, 188, 399, 188, 188, 188, 188, 188, 
	188, 408, 416, 188, 188, 188, 421, 423, 
	188, 188, 188, 188, 430, 188, 188, 188, 
	188, 437, 440, 188, 450, 188, 454, 188, 
	188, 464, 467, 476, 482, 484, 488, 188, 
	491, 495, 188, 188, 188, 188, 188, 503, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	527, 188, 188, 188, 188, 188, 188, 540, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 571, 188, 
	188, 579, 188, 583, 188, 586, 590, 188, 
	593, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 612, 188, 188, 188, 
	188, 188, 620, 188, 188, 188, 188, 188, 
	188, 641, 644, 648, 650, 652, 188, 656, 
	659, 663, 665, 667, 188, 188, 188, 677, 
	188, 188, 188, 695, 188, 188, 188, 188, 
	188, 703, 188, 188, 188, 188, 188, 188, 
	715, 188, 188, 188, 722, 724, 188, 188, 
	188, 188, 732, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188, 188, 746, 188, 
	188, 188, 188, 188, 188, 188, 188, 188, 
	759, 188, 188, 188, 188, 188, 188, 188, 
	188, 188, 188, 188, 188
};
static const int lexer_start = 38;
static const int lexer_error = 0;
static const int lexer_en_main = 38;
static void set_scan_buf( const char *text, bool _at_bol )
{
 Str_set( input_buf, text );
 p = Str_data(input_buf);
 at_bol = _at_bol;
 pe = Str_data(input_buf) + Str_len(input_buf);
 eof_ = pe;
	{
	cs = lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}
}
static tokid_t _scan_get( void )
{
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;
	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _lexer_actions + _lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
	{ts = p;}
	break;
		}
	}
	_widec = (*p);
	_klen = _lexer_cond_lengths[cs];
	_keys = _lexer_cond_keys + (_lexer_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _lexer_cond_spaces[_lexer_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
 at_bol  ) _widec += 256;
		break;
	}
				}
				break;
			}
		}
	}
	_keys = _lexer_trans_keys + _lexer_key_offsets[cs];
	_trans = _lexer_index_offsets[cs];
	_klen = _lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}
	_klen = _lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}
_match:
	_trans = _lexer_indicies[_trans];
_eof_trans:
	cs = _lexer_trans_targs[_trans];
	if ( _lexer_trans_actions[_trans] == 0 )
		goto _again;
	_acts = _lexer_actions + _lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
	{te = p+1;}
	break;
	case 3:
	{act = 1;}
	break;
	case 4:
	{act = 2;}
	break;
	case 5:
	{act = 6;}
	break;
	case 6:
	{act = 38;}
	break;
	case 7:
	{act = 39;}
	break;
	case 8:
	{act = 40;}
	break;
	case 9:
	{act = 41;}
	break;
	case 10:
	{act = 42;}
	break;
	case 11:
	{act = 43;}
	break;
	case 12:
	{act = 44;}
	break;
	case 13:
	{act = 45;}
	break;
	case 14:
	{act = 46;}
	break;
	case 15:
	{act = 47;}
	break;
	case 16:
	{act = 48;}
	break;
	case 17:
	{act = 49;}
	break;
	case 18:
	{act = 50;}
	break;
	case 19:
	{act = 51;}
	break;
	case 20:
	{act = 52;}
	break;
	case 21:
	{act = 53;}
	break;
	case 22:
	{act = 54;}
	break;
	case 23:
	{act = 55;}
	break;
	case 24:
	{act = 56;}
	break;
	case 25:
	{act = 57;}
	break;
	case 26:
	{act = 58;}
	break;
	case 27:
	{act = 59;}
	break;
	case 28:
	{act = 60;}
	break;
	case 29:
	{act = 61;}
	break;
	case 30:
	{act = 62;}
	break;
	case 31:
	{act = 63;}
	break;
	case 32:
	{act = 64;}
	break;
	case 33:
	{act = 65;}
	break;
	case 34:
	{act = 66;}
	break;
	case 35:
	{act = 67;}
	break;
	case 36:
	{act = 68;}
	break;
	case 37:
	{act = 69;}
	break;
	case 38:
	{act = 70;}
	break;
	case 39:
	{act = 71;}
	break;
	case 40:
	{act = 72;}
	break;
	case 41:
	{act = 73;}
	break;
	case 42:
	{act = 74;}
	break;
	case 43:
	{act = 75;}
	break;
	case 44:
	{act = 95;}
	break;
	case 45:
	{act = 96;}
	break;
	case 46:
	{act = 97;}
	break;
	case 47:
	{act = 98;}
	break;
	case 48:
	{act = 99;}
	break;
	case 49:
	{act = 100;}
	break;
	case 50:
	{act = 101;}
	break;
	case 51:
	{act = 102;}
	break;
	case 52:
	{act = 103;}
	break;
	case 53:
	{act = 104;}
	break;
	case 54:
	{act = 105;}
	break;
	case 55:
	{act = 106;}
	break;
	case 56:
	{act = 107;}
	break;
	case 57:
	{act = 108;}
	break;
	case 58:
	{act = 109;}
	break;
	case 59:
	{act = 110;}
	break;
	case 60:
	{act = 111;}
	break;
	case 61:
	{act = 112;}
	break;
	case 62:
	{act = 113;}
	break;
	case 63:
	{act = 114;}
	break;
	case 64:
	{act = 115;}
	break;
	case 65:
	{act = 116;}
	break;
	case 66:
	{act = 117;}
	break;
	case 67:
	{act = 118;}
	break;
	case 68:
	{act = 119;}
	break;
	case 69:
	{act = 120;}
	break;
	case 70:
	{act = 121;}
	break;
	case 71:
	{act = 122;}
	break;
	case 72:
	{act = 123;}
	break;
	case 73:
	{act = 124;}
	break;
	case 74:
	{act = 125;}
	break;
	case 75:
	{act = 126;}
	break;
	case 76:
	{act = 127;}
	break;
	case 77:
	{act = 128;}
	break;
	case 78:
	{act = 129;}
	break;
	case 79:
	{act = 130;}
	break;
	case 80:
	{act = 131;}
	break;
	case 81:
	{act = 132;}
	break;
	case 82:
	{act = 133;}
	break;
	case 83:
	{act = 134;}
	break;
	case 84:
	{act = 139;}
	break;
	case 85:
	{act = 140;}
	break;
	case 86:
	{act = 141;}
	break;
	case 87:
	{act = 142;}
	break;
	case 88:
	{act = 143;}
	break;
	case 89:
	{act = 144;}
	break;
	case 90:
	{act = 146;}
	break;
	case 91:
	{act = 147;}
	break;
	case 92:
	{act = 148;}
	break;
	case 93:
	{act = 149;}
	break;
	case 94:
	{act = 150;}
	break;
	case 95:
	{act = 151;}
	break;
	case 96:
	{act = 152;}
	break;
	case 97:
	{act = 153;}
	break;
	case 98:
	{act = 154;}
	break;
	case 99:
	{act = 155;}
	break;
	case 100:
	{act = 156;}
	break;
	case 101:
	{act = 157;}
	break;
	case 102:
	{act = 158;}
	break;
	case 103:
	{act = 159;}
	break;
	case 104:
	{act = 160;}
	break;
	case 105:
	{act = 161;}
	break;
	case 106:
	{act = 162;}
	break;
	case 107:
	{act = 163;}
	break;
	case 108:
	{act = 164;}
	break;
	case 109:
	{act = 165;}
	break;
	case 110:
	{act = 166;}
	break;
	case 111:
	{act = 167;}
	break;
	case 112:
	{act = 168;}
	break;
	case 113:
	{act = 169;}
	break;
	case 114:
	{act = 170;}
	break;
	case 115:
	{act = 171;}
	break;
	case 116:
	{act = 172;}
	break;
	case 117:
	{act = 173;}
	break;
	case 118:
	{act = 174;}
	break;
	case 119:
	{act = 175;}
	break;
	case 120:
	{act = 176;}
	break;
	case 121:
	{act = 177;}
	break;
	case 122:
	{act = 178;}
	break;
	case 123:
	{act = 179;}
	break;
	case 124:
	{act = 180;}
	break;
	case 125:
	{act = 181;}
	break;
	case 126:
	{act = 182;}
	break;
	case 127:
	{act = 183;}
	break;
	case 128:
	{act = 184;}
	break;
	case 129:
	{act = 185;}
	break;
	case 130:
	{act = 186;}
	break;
	case 131:
	{act = 187;}
	break;
	case 132:
	{act = 188;}
	break;
	case 133:
	{act = 189;}
	break;
	case 134:
	{act = 191;}
	break;
	case 135:
	{act = 192;}
	break;
	case 136:
	{act = 194;}
	break;
	case 137:
	{act = 195;}
	break;
	case 138:
	{act = 196;}
	break;
	case 139:
	{act = 198;}
	break;
	case 140:
	{act = 199;}
	break;
	case 141:
	{act = 201;}
	break;
	case 142:
	{act = 202;}
	break;
	case 143:
	{act = 203;}
	break;
	case 144:
	{act = 204;}
	break;
	case 145:
	{act = 206;}
	break;
	case 146:
	{act = 207;}
	break;
	case 147:
	{act = 208;}
	break;
	case 148:
	{act = 209;}
	break;
	case 149:
	{act = 210;}
	break;
	case 150:
	{act = 211;}
	break;
	case 151:
	{act = 212;}
	break;
	case 152:
	{act = 213;}
	break;
	case 153:
	{act = 214;}
	break;
	case 154:
	{act = 215;}
	break;
	case 155:
	{act = 216;}
	break;
	case 156:
	{act = 217;}
	break;
	case 157:
	{act = 218;}
	break;
	case 158:
	{act = 219;}
	break;
	case 159:
	{act = 220;}
	break;
	case 160:
	{act = 221;}
	break;
	case 161:
	{act = 222;}
	break;
	case 162:
	{act = 223;}
	break;
	case 163:
	{act = 224;}
	break;
	case 164:
	{act = 225;}
	break;
	case 165:
	{act = 226;}
	break;
	case 166:
	{act = 227;}
	break;
	case 167:
	{act = 228;}
	break;
	case 168:
	{act = 229;}
	break;
	case 169:
	{act = 230;}
	break;
	case 170:
	{act = 231;}
	break;
	case 171:
	{act = 232;}
	break;
	case 172:
	{act = 233;}
	break;
	case 173:
	{act = 234;}
	break;
	case 174:
	{act = 235;}
	break;
	case 175:
	{act = 236;}
	break;
	case 176:
	{act = 237;}
	break;
	case 177:
	{act = 238;}
	break;
	case 178:
	{act = 239;}
	break;
	case 179:
	{act = 240;}
	break;
	case 180:
	{act = 253;}
	break;
	case 181:
	{act = 254;}
	break;
	case 182:
	{act = 255;}
	break;
	case 183:
	{act = 256;}
	break;
	case 184:
	{act = 257;}
	break;
	case 185:
	{act = 258;}
	break;
	case 186:
	{act = 259;}
	break;
	case 187:
	{act = 260;}
	break;
	case 188:
	{act = 261;}
	break;
	case 189:
	{act = 262;}
	break;
	case 190:
	{act = 263;}
	break;
	case 191:
	{act = 264;}
	break;
	case 192:
	{act = 265;}
	break;
	case 193:
	{act = 266;}
	break;
	case 194:
	{act = 267;}
	break;
	case 195:
	{act = 268;}
	break;
	case 196:
	{act = 269;}
	break;
	case 197:
	{act = 270;}
	break;
	case 198:
	{act = 271;}
	break;
	case 199:
	{act = 272;}
	break;
	case 200:
	{act = 273;}
	break;
	case 201:
	{act = 274;}
	break;
	case 202:
	{act = 275;}
	break;
	case 203:
	{act = 276;}
	break;
	case 204:
	{act = 277;}
	break;
	case 205:
	{act = 278;}
	break;
	case 206:
	{act = 279;}
	break;
	case 207:
	{act = 280;}
	break;
	case 208:
	{act = 281;}
	break;
	case 209:
	{act = 282;}
	break;
	case 210:
	{act = 283;}
	break;
	case 211:
	{act = 284;}
	break;
	case 212:
	{act = 285;}
	break;
	case 213:
	{act = 286;}
	break;
	case 214:
	{act = 287;}
	break;
	case 215:
	{act = 288;}
	break;
	case 216:
	{act = 289;}
	break;
	case 217:
	{act = 290;}
	break;
	case 218:
	{act = 291;}
	break;
	case 219:
	{act = 292;}
	break;
	case 220:
	{act = 293;}
	break;
	case 221:
	{act = 294;}
	break;
	case 222:
	{act = 295;}
	break;
	case 223:
	{act = 296;}
	break;
	case 224:
	{act = 297;}
	break;
	case 225:
	{act = 298;}
	break;
	case 226:
	{act = 299;}
	break;
	case 227:
	{act = 300;}
	break;
	case 228:
	{act = 301;}
	break;
	case 229:
	{act = 302;}
	break;
	case 230:
	{act = 303;}
	break;
	case 231:
	{act = 304;}
	break;
	case 232:
	{act = 305;}
	break;
	case 233:
	{act = 306;}
	break;
	case 234:
	{act = 307;}
	break;
	case 235:
	{act = 308;}
	break;
	case 236:
	{act = 309;}
	break;
	case 237:
	{act = 310;}
	break;
	case 238:
	{act = 311;}
	break;
	case 239:
	{act = 312;}
	break;
	case 240:
	{act = 313;}
	break;
	case 241:
	{act = 314;}
	break;
	case 242:
	{act = 315;}
	break;
	case 243:
	{act = 316;}
	break;
	case 244:
	{act = 317;}
	break;
	case 245:
	{act = 318;}
	break;
	case 246:
	{act = 319;}
	break;
	case 247:
	{act = 320;}
	break;
	case 248:
	{act = 321;}
	break;
	case 249:
	{act = 322;}
	break;
	case 250:
	{act = 323;}
	break;
	case 251:
	{act = 324;}
	break;
	case 252:
	{act = 325;}
	break;
	case 253:
	{act = 326;}
	break;
	case 254:
	{act = 327;}
	break;
	case 255:
	{act = 328;}
	break;
	case 256:
	{act = 329;}
	break;
	case 257:
	{act = 330;}
	break;
	case 258:
	{act = 331;}
	break;
	case 259:
	{act = 332;}
	break;
	case 260:
	{act = 333;}
	break;
	case 261:
	{act = 334;}
	break;
	case 262:
	{act = 335;}
	break;
	case 263:
	{act = 336;}
	break;
	case 264:
	{act = 337;}
	break;
	case 265:
	{act = 338;}
	break;
	case 266:
	{act = 339;}
	break;
	case 267:
	{act = 340;}
	break;
	case 268:
	{act = 341;}
	break;
	case 269:
	{act = 342;}
	break;
	case 270:
	{act = 343;}
	break;
	case 271:
	{act = 344;}
	break;
	case 272:
	{act = 345;}
	break;
	case 273:
	{act = 346;}
	break;
	case 274:
	{act = 347;}
	break;
	case 275:
	{act = 348;}
	break;
	case 276:
	{act = 349;}
	break;
	case 277:
	{act = 350;}
	break;
	case 278:
	{act = 351;}
	break;
	case 279:
	{act = 352;}
	break;
	case 280:
	{act = 353;}
	break;
	case 281:
	{act = 354;}
	break;
	case 282:
	{act = 355;}
	break;
	case 283:
	{act = 356;}
	break;
	case 284:
	{act = 357;}
	break;
	case 285:
	{act = 358;}
	break;
	case 286:
	{act = 359;}
	break;
	case 287:
	{act = 360;}
	break;
	case 288:
	{act = 361;}
	break;
	case 289:
	{act = 362;}
	break;
	case 290:
	{act = 363;}
	break;
	case 291:
	{act = 364;}
	break;
	case 292:
	{act = 365;}
	break;
	case 293:
	{act = 366;}
	break;
	case 294:
	{act = 367;}
	break;
	case 295:
	{act = 368;}
	break;
	case 296:
	{act = 369;}
	break;
	case 297:
	{act = 370;}
	break;
	case 298:
	{act = 371;}
	break;
	case 299:
	{act = 372;}
	break;
	case 300:
	{act = 373;}
	break;
	case 301:
	{act = 374;}
	break;
	case 302:
	{act = 375;}
	break;
	case 303:
	{act = 378;}
	break;
	case 304:
	{act = 380;}
	break;
	case 305:
	{act = 382;}
	break;
	case 306:
	{act = 384;}
	break;
	case 307:
	{act = 386;}
	break;
	case 308:
	{act = 390;}
	break;
	case 309:
	{te = p+1;{
	sym.tok = TK_NEWLINE;
	;
	{p++; goto _out; }
}}
	break;
	case 310:
	{te = p+1;{
	sym.tok = TK_CONST_EXPR;
	;
	{p++; goto _out; }
}}
	break;
	case 311:
	{te = p+1;{
	sym.tok = TK_LOG_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 312:
	{te = p+1;{
	sym.tok = TK_RPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 313:
	{te = p+1;{
	sym.tok = TK_PLUS;
	;
	{p++; goto _out; }
}}
	break;
	case 314:
	{te = p+1;{
	sym.tok = TK_COMMA;
	;
	{p++; goto _out; }
}}
	break;
	case 315:
	{te = p+1;{
	sym.tok = TK_MINUS;
	;
	{p++; goto _out; }
}}
	break;
	case 316:
	{te = p+1;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 317:
	{te = p+1;{
	sym.tok = TK_DIVIDE;
	;
	{p++; goto _out; }
}}
	break;
	case 318:
	{te = p+1;{
	sym.tok = TK_COLON;
	;
	{p++; goto _out; }
}}
	break;
	case 319:
	{te = p+1;{
	sym.tok = TK_LEFT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 320:
	{te = p+1;{
	sym.tok = TK_LESS_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 321:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 322:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 323:
	{te = p+1;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 324:
	{te = p+1;{
	sym.tok = TK_RIGHT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 325:
	{te = p+1;{
	sym.tok = TK_GREATER_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 326:
	{te = p+1;{
	sym.tok = TK_QUESTION;
	;
	{p++; goto _out; }
}}
	break;
	case 327:
	{te = p+1;{
	sym.tok = TK_LSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 328:
	{te = p+1;{
	sym.tok = TK_RSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 329:
	{te = p+1;{
	sym.tok = TK_BIN_XOR;
	;
	{p++; goto _out; }
}}
	break;
	case 330:
	{te = p+1;{
	sym.tok = TK_POWER;
	;
	{p++; goto _out; }
}}
	break;
	case 331:
	{te = p+1;{
	sym.tok = TK_LCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 332:
	{te = p+1;{
	sym.tok = TK_LOG_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 333:
	{te = p+1;{
	sym.tok = TK_RCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 334:
	{te = p+1;{
	sym.tok = TK_BIN_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 335:
	{te = p+1;{
	sym.tok = TK_B1;
	;
	{p++; goto _out; }
}}
	break;
	case 336:
	{te = p+1;{
	sym.tok = TK_C1;
	;
	{p++; goto _out; }
}}
	break;
	case 337:
	{te = p+1;{
	sym.tok = TK_D1;
	;
	{p++; goto _out; }
}}
	break;
	case 338:
	{te = p+1;{
	sym.tok = TK_E1;
	;
	{p++; goto _out; }
}}
	break;
	case 339:
	{te = p+1;{
	sym.tok = TK_H1;
	;
	{p++; goto _out; }
}}
	break;
	case 340:
	{te = p+1;{
	sym.tok = TK_L1;
	;
	{p++; goto _out; }
}}
	break;
	case 341:
	{te = p+1;{
	sym.tok = TK_A1;
	;
	{p++; goto _out; }
}}
	break;
	case 342:
	{te = p+1;{
	sym.tok = TK_F1;
	;
	{p++; goto _out; }
}}
	break;
	case 343:
	{te = p+1;{
	sym.tok = TK_BC1;
	;
	{p++; goto _out; }
}}
	break;
	case 344:
	{te = p+1;{
	sym.tok = TK_DE1;
	;
	{p++; goto _out; }
}}
	break;
	case 345:
	{te = p+1;{
	sym.tok = TK_HL1;
	;
	{p++; goto _out; }
}}
	break;
	case 346:
	{te = p+1;{
	sym.tok = TK_AF1;
	;
	{p++; goto _out; }
}}
	break;
	case 347:
	{te = p+1;{
	sym.tok = TK_IND_BC;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 348:
	{te = p+1;{
	sym.tok = TK_IND_DE;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 349:
	{te = p+1;{
	sym.tok = TK_IND_IX;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 350:
	{te = p+1;{
	sym.tok = TK_IND_IY;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 351:
	{te = p+1;{
	sym.tok = TK_IND_HL;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 352:
	{te = p+1;{
	sym.tok = TK_IND_SP;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 353:
	{te = p+1;{
	sym.tok = TK_IND_C;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 354:
	{te = p+1;{
	sym.tok = TK_DS_B;
	;
	{p++; goto _out; }
}}
	break;
	case 355:
	{te = p+1;{
	sym.tok = TK_DS_W;
	;
	{p++; goto _out; }
}}
	break;
	case 356:
	{te = p+1;{
	sym.tok = TK_DS_P;
	;
	{p++; goto _out; }
}}
	break;
	case 357:
	{te = p+1;{
	sym.tok = TK_DS_Q;
	;
	{p++; goto _out; }
}}
	break;
	case 358:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CCF1;
		sym.tok_opcode = TK_CCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 359:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLA1;
		sym.tok_opcode = TK_RLA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA1;
	}
	{p++; goto _out; }
}}
	break;
	case 360:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLCA1;
		sym.tok_opcode = TK_RLCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 361:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRA1;
		sym.tok_opcode = TK_RRA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA1;
	}
	{p++; goto _out; }
}}
	break;
	case 362:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRCA1;
		sym.tok_opcode = TK_RRCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 363:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_SCF1;
		sym.tok_opcode = TK_SCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 364:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_WAIT;
		sym.tok_opcode = TK_CU_WAIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_WAIT;
	}
	{p++; goto _out; }
}}
	break;
	case 365:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_MOVE;
		sym.tok_opcode = TK_CU_MOVE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_MOVE;
	}
	{p++; goto _out; }
}}
	break;
	case 366:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_STOP;
		sym.tok_opcode = TK_CU_STOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_STOP;
	}
	{p++; goto _out; }
}}
	break;
	case 367:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_NOP;
		sym.tok_opcode = TK_CU_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_NOP;
	}
	{p++; goto _out; }
}}
	break;
	case 368:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR0;
		sym.tok_opcode = TK_DMA_WR0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR0;
	}
	{p++; goto _out; }
}}
	break;
	case 369:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR1;
		sym.tok_opcode = TK_DMA_WR1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR1;
	}
	{p++; goto _out; }
}}
	break;
	case 370:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR2;
		sym.tok_opcode = TK_DMA_WR2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR2;
	}
	{p++; goto _out; }
}}
	break;
	case 371:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR3;
		sym.tok_opcode = TK_DMA_WR3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR3;
	}
	{p++; goto _out; }
}}
	break;
	case 372:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR4;
		sym.tok_opcode = TK_DMA_WR4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR4;
	}
	{p++; goto _out; }
}}
	break;
	case 373:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR5;
		sym.tok_opcode = TK_DMA_WR5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR5;
	}
	{p++; goto _out; }
}}
	break;
	case 374:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR6;
		sym.tok_opcode = TK_DMA_WR6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR6;
	}
	{p++; goto _out; }
}}
	break;
	case 375:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_CMD;
		sym.tok_opcode = TK_DMA_CMD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_CMD;
	}
	{p++; goto _out; }
}}
	break;
	case 376:
	{te = p+1;}
	break;
	case 377:
	{te = p+1;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 378:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 379:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 3, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 380:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = 0;
  if ( get_sym_string() )
  {
   STR_DEFINE(string, STR_SIZE);
   Str_set_bytes(string, ts, te-ts);
   Str_len(string) = cstr_compress_escapes(Str_data(string));
   if (Str_len(string) == 1)
    sym.number = Str_data(string)[0];
   else
    error_invalid_squoted_string();
   STR_DELETE(string);
  }
  else
  {
   error_invalid_squoted_string();
  }
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 381:
	{te = p+1;{
  sym.tok = TK_STRING;
  if ( ! get_sym_string() )
   error_unclosed_string();
  {p++; goto _out; }
 }}
	break;
	case 382:
	{te = p+1;{
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 383:
	{te = p;p--;{
	sym.tok = TK_LOG_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 384:
	{te = p;p--;{
	sym.tok = TK_BIN_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 385:
	{te = p;p--;{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 386:
	{te = p;p--;{
	sym.tok = TK_MULTIPLY;
	;
	{p++; goto _out; }
}}
	break;
	case 387:
	{te = p;p--;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 388:
	{te = p;p--;{
	sym.tok = TK_LESS;
	;
	{p++; goto _out; }
}}
	break;
	case 389:
	{te = p;p--;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 390:
	{te = p;p--;{
	sym.tok = TK_GREATER;
	;
	{p++; goto _out; }
}}
	break;
	case 391:
	{te = p;p--;{
	sym.tok = TK_BIN_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 392:
	{te = p;p--;{
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}}
	break;
	case 393:
	{te = p;p--;{
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}}
	break;
	case 394:
	{te = p;p--;{
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}}
	break;
	case 395:
	{te = p;p--;{
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}}
	break;
	case 396:
	{te = p;p--;{
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}}
	break;
	case 397:
	{te = p;p--;{
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}}
	break;
	case 398:
	{te = p;p--;{
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}}
	break;
	case 399:
	{te = p;p--;{
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}}
	break;
	case 400:
	{te = p;p--;{
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}}
	break;
	case 401:
	{te = p;p--;{
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}}
	break;
	case 402:
	{te = p;p--;{
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}}
	break;
	case 403:
	{te = p;p--;{
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}}
	break;
	case 404:
	{te = p;p--;{
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}}
	break;
	case 405:
	{te = p;p--;{
	if (opts.cpu & CPU_Z80N) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}}
	break;
	case 406:
	{te = p;p--;{
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}}
	break;
	case 407:
	{te = p;p--;{
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}}
	break;
	case 408:
	{te = p;p--;{
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}}
	break;
	case 409:
	{te = p;p--;{
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}}
	break;
	case 410:
	{te = p;p--;{
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}}
	break;
	case 411:
	{te = p;p--;{
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}}
	break;
	case 412:
	{te = p;p--;{
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}}
	break;
	case 413:
	{te = p;p--;{
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}}
	break;
	case 414:
	{te = p;p--;{
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}}
	break;
	case 415:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_ELIF;
		sym.tok_opcode = TK_ELIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIF;
	}
	{p++; goto _out; }
}}
	break;
	case 416:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}}
	break;
	case 417:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}}
	break;
	case 418:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}}
	break;
	case 419:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}}
	break;
	case 420:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}}
	break;
	case 421:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}}
	break;
	case 422:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}}
	break;
	case 423:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}}
	break;
	case 424:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}}
	break;
	case 425:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}}
	break;
	case 426:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}}
	break;
	case 427:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}}
	break;
	case 428:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}}
	break;
	case 429:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}}
	break;
	case 430:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}}
	break;
	case 431:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}}
	break;
	case 432:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}}
	break;
	case 433:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}}
	break;
	case 434:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}}
	break;
	case 435:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}}
	break;
	case 436:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}}
	break;
	case 437:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}}
	break;
	case 438:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}}
	break;
	case 439:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}}
	break;
	case 440:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}}
	break;
	case 441:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}}
	break;
	case 442:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}}
	break;
	case 443:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}}
	break;
	case 444:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}}
	break;
	case 445:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}}
	break;
	case 446:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}}
	break;
	case 447:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}}
	break;
	case 448:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}}
	break;
	case 449:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}}
	break;
	case 450:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}}
	break;
	case 451:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}}
	break;
	case 452:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}}
	break;
	case 453:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}}
	break;
	case 454:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}}
	break;
	case 455:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDA;
		sym.tok_opcode = TK_LDA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDA;
	}
	{p++; goto _out; }
}}
	break;
	case 456:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_STA;
		sym.tok_opcode = TK_STA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_STA;
	}
	{p++; goto _out; }
}}
	break;
	case 457:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_JM;
		sym.tok_opcode = TK_JM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JM;
	}
	{p++; goto _out; }
}}
	break;
	case 458:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_J_P;
		sym.tok_opcode = TK_J_P;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_P;
	}
	{p++; goto _out; }
}}
	break;
	case 459:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CC;
		sym.tok_opcode = TK_CC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CC;
	}
	{p++; goto _out; }
}}
	break;
	case 460:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CM;
		sym.tok_opcode = TK_CM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CM;
	}
	{p++; goto _out; }
}}
	break;
	case 461:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_C_P;
		sym.tok_opcode = TK_C_P;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_P;
	}
	{p++; goto _out; }
}}
	break;
	case 462:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RP;
		sym.tok_opcode = TK_RP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RP;
	}
	{p++; goto _out; }
}}
	break;
	case 463:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_R_P;
		sym.tok_opcode = TK_R_P;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_P;
	}
	{p++; goto _out; }
}}
	break;
	case 464:
	{te = p;p--;}
	break;
	case 465:
	{te = p;p--;{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 466:
	{te = p;p--;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 467:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 468:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 469:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 470:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 471:
	{{p = ((te))-1;}{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 472:
	{{p = ((te))-1;}{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 473:
	{{p = ((te))-1;}{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 474:
	{{p = ((te))-1;}{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 475:
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 2:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 6:
	{{p = ((te))-1;}
	sym.tok = TK_MOD;
	;
	{p++; goto _out; }
}
	break;
	case 38:
	{{p = ((te))-1;}
	sym.tok = TK_NZ;
	;
	{p++; goto _out; }
}
	break;
	case 39:
	{{p = ((te))-1;}
	sym.tok = TK_Z;
	;
	{p++; goto _out; }
}
	break;
	case 40:
	{{p = ((te))-1;}
	sym.tok = TK_NC;
	;
	{p++; goto _out; }
}
	break;
	case 41:
	{{p = ((te))-1;}
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}
	break;
	case 42:
	{{p = ((te))-1;}
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}
	break;
	case 43:
	{{p = ((te))-1;}
	sym.tok = TK_PE;
	;
	{p++; goto _out; }
}
	break;
	case 44:
	{{p = ((te))-1;}
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}
	break;
	case 45:
	{{p = ((te))-1;}
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}
	break;
	case 46:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LZ;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 47:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LO;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 48:
	{{p = ((te))-1;}
	sym.tok = TK_NV;
	;
	{p++; goto _out; }
}
	break;
	case 49:
	{{p = ((te))-1;}
	sym.tok = TK_V;
	;
	{p++; goto _out; }
}
	break;
	case 50:
	{{p = ((te))-1;}
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}
	break;
	case 51:
	{{p = ((te))-1;}
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}
	break;
	case 52:
	{{p = ((te))-1;}
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}
	break;
	case 53:
	{{p = ((te))-1;}
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}
	break;
	case 54:
	{{p = ((te))-1;}
	sym.tok = TK_IXH;
	;
	{p++; goto _out; }
}
	break;
	case 55:
	{{p = ((te))-1;}
	sym.tok = TK_IYH;
	;
	{p++; goto _out; }
}
	break;
	case 56:
	{{p = ((te))-1;}
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}
	break;
	case 57:
	{{p = ((te))-1;}
	sym.tok = TK_IXL;
	;
	{p++; goto _out; }
}
	break;
	case 58:
	{{p = ((te))-1;}
	sym.tok = TK_IYL;
	;
	{p++; goto _out; }
}
	break;
	case 59:
	{{p = ((te))-1;}
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}
	break;
	case 60:
	{{p = ((te))-1;}
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}
	break;
	case 61:
	{{p = ((te))-1;}
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}
	break;
	case 62:
	{{p = ((te))-1;}
	sym.tok = TK_IIR;
	;
	{p++; goto _out; }
}
	break;
	case 63:
	{{p = ((te))-1;}
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}
	break;
	case 64:
	{{p = ((te))-1;}
	sym.tok = TK_EIR;
	;
	{p++; goto _out; }
}
	break;
	case 65:
	{{p = ((te))-1;}
	if (opts.cpu & CPU_Z80N) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 66:
	{{p = ((te))-1;}
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}
	break;
	case 67:
	{{p = ((te))-1;}
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}
	break;
	case 68:
	{{p = ((te))-1;}
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}
	break;
	case 69:
	{{p = ((te))-1;}
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}
	break;
	case 70:
	{{p = ((te))-1;}
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}
	break;
	case 71:
	{{p = ((te))-1;}
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}
	break;
	case 72:
	{{p = ((te))-1;}
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}
	break;
	case 73:
	{{p = ((te))-1;}
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}
	break;
	case 74:
	{{p = ((te))-1;}
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}
	break;
	case 75:
	{{p = ((te))-1;}
	sym.tok = TK_XPC;
	;
	{p++; goto _out; }
}
	break;
	case 95:
	{{p = ((te))-1;}
	sym.tok = TK_A32;
	;
	{p++; goto _out; }
}
	break;
	case 96:
	{{p = ((te))-1;}
	sym.tok = TK_DEHL;
	;
	{p++; goto _out; }
}
	break;
	case 97:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALIGN;
		sym.tok_opcode = TK_ALIGN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALIGN;
	}
	{p++; goto _out; }
}
	break;
	case 98:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BINARY;
		sym.tok_opcode = TK_BINARY;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BINARY;
	}
	{p++; goto _out; }
}
	break;
	case 99:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_LINE;
		sym.tok_opcode = TK_C_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 100:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFB;
		sym.tok_opcode = TK_DEFB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFB;
	}
	{p++; goto _out; }
}
	break;
	case 101:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFC;
		sym.tok_opcode = TK_DEFC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFC;
	}
	{p++; goto _out; }
}
	break;
	case 102:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFDB;
		sym.tok_opcode = TK_DEFDB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFDB;
	}
	{p++; goto _out; }
}
	break;
	case 103:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFGROUP;
		sym.tok_opcode = TK_DEFGROUP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFGROUP;
	}
	{p++; goto _out; }
}
	break;
	case 104:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFINE;
		sym.tok_opcode = TK_DEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 105:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFM;
		sym.tok_opcode = TK_DEFM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFM;
	}
	{p++; goto _out; }
}
	break;
	case 106:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFQ;
		sym.tok_opcode = TK_DEFQ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFQ;
	}
	{p++; goto _out; }
}
	break;
	case 107:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFS;
		sym.tok_opcode = TK_DEFS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFS;
	}
	{p++; goto _out; }
}
	break;
	case 108:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFVARS;
		sym.tok_opcode = TK_DEFVARS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFVARS;
	}
	{p++; goto _out; }
}
	break;
	case 109:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFW;
		sym.tok_opcode = TK_DEFW;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFW;
	}
	{p++; goto _out; }
}
	break;
	case 110:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEPHASE;
		sym.tok_opcode = TK_DEPHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEPHASE;
	}
	{p++; goto _out; }
}
	break;
	case 111:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELSE;
		sym.tok_opcode = TK_ELSE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELSE;
	}
	{p++; goto _out; }
}
	break;
	case 112:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIF;
		sym.tok_opcode = TK_ELIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIF;
	}
	{p++; goto _out; }
}
	break;
	case 113:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIFDEF;
		sym.tok_opcode = TK_ELIFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 114:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIFNDEF;
		sym.tok_opcode = TK_ELIFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 115:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ENDIF;
		sym.tok_opcode = TK_ENDIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ENDIF;
	}
	{p++; goto _out; }
}
	break;
	case 116:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXTERN;
		sym.tok_opcode = TK_EXTERN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXTERN;
	}
	{p++; goto _out; }
}
	break;
	case 117:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_GLOBAL;
		sym.tok_opcode = TK_GLOBAL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_GLOBAL;
	}
	{p++; goto _out; }
}
	break;
	case 118:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}
	break;
	case 119:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFDEF;
		sym.tok_opcode = TK_IFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 120:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFNDEF;
		sym.tok_opcode = TK_IFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 121:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INCLUDE;
		sym.tok_opcode = TK_INCLUDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INCLUDE;
	}
	{p++; goto _out; }
}
	break;
	case 122:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LIB;
		sym.tok_opcode = TK_LIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LIB;
	}
	{p++; goto _out; }
}
	break;
	case 123:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LINE;
		sym.tok_opcode = TK_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 124:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTOFF;
		sym.tok_opcode = TK_LSTOFF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTOFF;
	}
	{p++; goto _out; }
}
	break;
	case 125:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTON;
		sym.tok_opcode = TK_LSTON;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTON;
	}
	{p++; goto _out; }
}
	break;
	case 126:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MODULE;
		sym.tok_opcode = TK_MODULE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MODULE;
	}
	{p++; goto _out; }
}
	break;
	case 127:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORG;
		sym.tok_opcode = TK_ORG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORG;
	}
	{p++; goto _out; }
}
	break;
	case 128:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PHASE;
		sym.tok_opcode = TK_PHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PHASE;
	}
	{p++; goto _out; }
}
	break;
	case 129:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUBLIC;
		sym.tok_opcode = TK_PUBLIC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUBLIC;
	}
	{p++; goto _out; }
}
	break;
	case 130:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SECTION;
		sym.tok_opcode = TK_SECTION;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SECTION;
	}
	{p++; goto _out; }
}
	break;
	case 131:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UNDEFINE;
		sym.tok_opcode = TK_UNDEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UNDEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 132:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XDEF;
		sym.tok_opcode = TK_XDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XDEF;
	}
	{p++; goto _out; }
}
	break;
	case 133:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XLIB;
		sym.tok_opcode = TK_XLIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XLIB;
	}
	{p++; goto _out; }
}
	break;
	case 134:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XREF;
		sym.tok_opcode = TK_XREF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XREF;
	}
	{p++; goto _out; }
}
	break;
	case 139:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADC;
		sym.tok_opcode = TK_ADC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADC;
	}
	{p++; goto _out; }
}
	break;
	case 140:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADD;
		sym.tok_opcode = TK_ADD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADD;
	}
	{p++; goto _out; }
}
	break;
	case 141:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_AND;
		sym.tok_opcode = TK_AND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_AND;
	}
	{p++; goto _out; }
}
	break;
	case 142:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BIT;
		sym.tok_opcode = TK_BIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BIT;
	}
	{p++; goto _out; }
}
	break;
	case 143:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}
	break;
	case 144:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}
	break;
	case 146:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}
	break;
	case 147:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}
	break;
	case 148:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPDR;
		sym.tok_opcode = TK_CPDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPDR;
	}
	{p++; goto _out; }
}
	break;
	case 149:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}
	break;
	case 150:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPIR;
		sym.tok_opcode = TK_CPIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPIR;
	}
	{p++; goto _out; }
}
	break;
	case 151:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPL;
		sym.tok_opcode = TK_CPL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPL;
	}
	{p++; goto _out; }
}
	break;
	case 152:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAA;
		sym.tok_opcode = TK_DAA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAA;
	}
	{p++; goto _out; }
}
	break;
	case 153:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEC;
		sym.tok_opcode = TK_DEC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEC;
	}
	{p++; goto _out; }
}
	break;
	case 154:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DI;
		sym.tok_opcode = TK_DI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DI;
	}
	{p++; goto _out; }
}
	break;
	case 155:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DJNZ;
		sym.tok_opcode = TK_DJNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DJNZ;
	}
	{p++; goto _out; }
}
	break;
	case 156:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}
	break;
	case 157:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}
	break;
	case 158:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXX;
		sym.tok_opcode = TK_EXX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXX;
	}
	{p++; goto _out; }
}
	break;
	case 159:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HALT;
		sym.tok_opcode = TK_HALT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HALT;
	}
	{p++; goto _out; }
}
	break;
	case 160:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IM;
		sym.tok_opcode = TK_IM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IM;
	}
	{p++; goto _out; }
}
	break;
	case 161:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}
	break;
	case 162:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}
	break;
	case 163:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}
	break;
	case 164:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INDR;
		sym.tok_opcode = TK_INDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INDR;
	}
	{p++; goto _out; }
}
	break;
	case 165:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}
	break;
	case 166:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INIR;
		sym.tok_opcode = TK_INIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INIR;
	}
	{p++; goto _out; }
}
	break;
	case 167:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}
	break;
	case 168:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JR;
		sym.tok_opcode = TK_JR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JR;
	}
	{p++; goto _out; }
}
	break;
	case 169:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}
	break;
	case 170:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}
	break;
	case 171:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}
	break;
	case 172:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}
	break;
	case 173:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}
	break;
	case 174:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEG;
		sym.tok_opcode = TK_NEG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEG;
	}
	{p++; goto _out; }
}
	break;
	case 175:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NOP;
		sym.tok_opcode = TK_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NOP;
	}
	{p++; goto _out; }
}
	break;
	case 176:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}
	break;
	case 177:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDR;
		sym.tok_opcode = TK_OTDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDR;
	}
	{p++; goto _out; }
}
	break;
	case 178:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIR;
		sym.tok_opcode = TK_OTIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIR;
	}
	{p++; goto _out; }
}
	break;
	case 179:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}
	break;
	case 180:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTD;
		sym.tok_opcode = TK_OUTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTD;
	}
	{p++; goto _out; }
}
	break;
	case 181:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}
	break;
	case 182:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}
	break;
	case 183:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUSH;
		sym.tok_opcode = TK_PUSH;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUSH;
	}
	{p++; goto _out; }
}
	break;
	case 184:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RES;
		sym.tok_opcode = TK_RES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RES;
	}
	{p++; goto _out; }
}
	break;
	case 185:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}
	break;
	case 186:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETI;
		sym.tok_opcode = TK_RETI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETI;
	}
	{p++; goto _out; }
}
	break;
	case 187:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETN;
		sym.tok_opcode = TK_RETN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETN;
	}
	{p++; goto _out; }
}
	break;
	case 188:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}
	break;
	case 189:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}
	break;
	case 191:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}
	break;
	case 192:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}
	break;
	case 194:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLD;
		sym.tok_opcode = TK_RLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLD;
	}
	{p++; goto _out; }
}
	break;
	case 195:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}
	break;
	case 196:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}
	break;
	case 198:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}
	break;
	case 199:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}
	break;
	case 201:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRD;
		sym.tok_opcode = TK_RRD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRD;
	}
	{p++; goto _out; }
}
	break;
	case 202:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RST;
		sym.tok_opcode = TK_RST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RST;
	}
	{p++; goto _out; }
}
	break;
	case 203:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBC;
		sym.tok_opcode = TK_SBC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBC;
	}
	{p++; goto _out; }
}
	break;
	case 204:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}
	break;
	case 206:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}
	break;
	case 207:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLA;
		sym.tok_opcode = TK_SLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLA;
	}
	{p++; goto _out; }
}
	break;
	case 208:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLL;
		sym.tok_opcode = TK_SLL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLL;
	}
	{p++; goto _out; }
}
	break;
	case 209:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLI;
		sym.tok_opcode = TK_SLI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLI;
	}
	{p++; goto _out; }
}
	break;
	case 210:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRA;
		sym.tok_opcode = TK_SRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRA;
	}
	{p++; goto _out; }
}
	break;
	case 211:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRL;
		sym.tok_opcode = TK_SRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRL;
	}
	{p++; goto _out; }
}
	break;
	case 212:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUB;
		sym.tok_opcode = TK_SUB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUB;
	}
	{p++; goto _out; }
}
	break;
	case 213:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XOR;
		sym.tok_opcode = TK_XOR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XOR;
	}
	{p++; goto _out; }
}
	break;
	case 214:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAPNIB;
		sym.tok_opcode = TK_SWAPNIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAPNIB;
	}
	{p++; goto _out; }
}
	break;
	case 215:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}
	break;
	case 216:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTINB;
		sym.tok_opcode = TK_OUTINB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTINB;
	}
	{p++; goto _out; }
}
	break;
	case 217:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIX;
		sym.tok_opcode = TK_LDIX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIX;
	}
	{p++; goto _out; }
}
	break;
	case 218:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRX;
		sym.tok_opcode = TK_LDIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRX;
	}
	{p++; goto _out; }
}
	break;
	case 219:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDX;
		sym.tok_opcode = TK_LDDX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDX;
	}
	{p++; goto _out; }
}
	break;
	case 220:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDRX;
		sym.tok_opcode = TK_LDDRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDRX;
	}
	{p++; goto _out; }
}
	break;
	case 221:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRSCALE;
		sym.tok_opcode = TK_LDIRSCALE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRSCALE;
	}
	{p++; goto _out; }
}
	break;
	case 222:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDPIRX;
		sym.tok_opcode = TK_LDPIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDPIRX;
	}
	{p++; goto _out; }
}
	break;
	case 223:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDWS;
		sym.tok_opcode = TK_LDWS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDWS;
	}
	{p++; goto _out; }
}
	break;
	case 224:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}
	break;
	case 225:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILLDE;
		sym.tok_opcode = TK_FILLDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILLDE;
	}
	{p++; goto _out; }
}
	break;
	case 226:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MIRROR;
		sym.tok_opcode = TK_MIRROR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MIRROR;
	}
	{p++; goto _out; }
}
	break;
	case 227:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEXTREG;
		sym.tok_opcode = TK_NEXTREG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEXTREG;
	}
	{p++; goto _out; }
}
	break;
	case 228:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELDN;
		sym.tok_opcode = TK_PIXELDN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELDN;
	}
	{p++; goto _out; }
}
	break;
	case 229:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELAD;
		sym.tok_opcode = TK_PIXELAD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELAD;
	}
	{p++; goto _out; }
}
	break;
	case 230:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETAE;
		sym.tok_opcode = TK_SETAE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETAE;
	}
	{p++; goto _out; }
}
	break;
	case 231:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TEST;
		sym.tok_opcode = TK_TEST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TEST;
	}
	{p++; goto _out; }
}
	break;
	case 232:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}
	break;
	case 233:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU0;
		sym.tok_opcode = TK_MMU0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU0;
	}
	{p++; goto _out; }
}
	break;
	case 234:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU1;
		sym.tok_opcode = TK_MMU1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU1;
	}
	{p++; goto _out; }
}
	break;
	case 235:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU2;
		sym.tok_opcode = TK_MMU2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU2;
	}
	{p++; goto _out; }
}
	break;
	case 236:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU3;
		sym.tok_opcode = TK_MMU3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU3;
	}
	{p++; goto _out; }
}
	break;
	case 237:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU4;
		sym.tok_opcode = TK_MMU4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU4;
	}
	{p++; goto _out; }
}
	break;
	case 238:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU5;
		sym.tok_opcode = TK_MMU5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU5;
	}
	{p++; goto _out; }
}
	break;
	case 239:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU6;
		sym.tok_opcode = TK_MMU6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU6;
	}
	{p++; goto _out; }
}
	break;
	case 240:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU7;
		sym.tok_opcode = TK_MMU7;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU7;
	}
	{p++; goto _out; }
}
	break;
	case 253:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSLA;
		sym.tok_opcode = TK_BSLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSLA;
	}
	{p++; goto _out; }
}
	break;
	case 254:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSRA;
		sym.tok_opcode = TK_BSRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSRA;
	}
	{p++; goto _out; }
}
	break;
	case 255:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSRL;
		sym.tok_opcode = TK_BSRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSRL;
	}
	{p++; goto _out; }
}
	break;
	case 256:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BSRF;
		sym.tok_opcode = TK_BSRF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BSRF;
	}
	{p++; goto _out; }
}
	break;
	case 257:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BRLC;
		sym.tok_opcode = TK_BRLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BRLC;
	}
	{p++; goto _out; }
}
	break;
	case 258:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN0;
		sym.tok_opcode = TK_IN0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN0;
	}
	{p++; goto _out; }
}
	break;
	case 259:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MLT;
		sym.tok_opcode = TK_MLT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MLT;
	}
	{p++; goto _out; }
}
	break;
	case 260:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}
	break;
	case 261:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDMR;
		sym.tok_opcode = TK_OTDMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDMR;
	}
	{p++; goto _out; }
}
	break;
	case 262:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}
	break;
	case 263:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIMR;
		sym.tok_opcode = TK_OTIMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIMR;
	}
	{p++; goto _out; }
}
	break;
	case 264:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT0;
		sym.tok_opcode = TK_OUT0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT0;
	}
	{p++; goto _out; }
}
	break;
	case 265:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLP;
		sym.tok_opcode = TK_SLP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLP;
	}
	{p++; goto _out; }
}
	break;
	case 266:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}
	break;
	case 267:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TSTIO;
		sym.tok_opcode = TK_TSTIO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TSTIO;
	}
	{p++; goto _out; }
}
	break;
	case 268:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALTD;
		sym.tok_opcode = TK_ALTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALTD;
	}
	{p++; goto _out; }
}
	break;
	case 269:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BOOL;
		sym.tok_opcode = TK_BOOL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BOOL;
	}
	{p++; goto _out; }
}
	break;
	case 270:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IDET;
		sym.tok_opcode = TK_IDET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IDET;
	}
	{p++; goto _out; }
}
	break;
	case 271:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOE;
		sym.tok_opcode = TK_IOE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOE;
	}
	{p++; goto _out; }
}
	break;
	case 272:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOI;
		sym.tok_opcode = TK_IOI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOI;
	}
	{p++; goto _out; }
}
	break;
	case 273:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPRES;
		sym.tok_opcode = TK_IPRES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPRES;
	}
	{p++; goto _out; }
}
	break;
	case 274:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPSET;
		sym.tok_opcode = TK_IPSET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPSET;
	}
	{p++; goto _out; }
}
	break;
	case 275:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDSR;
		sym.tok_opcode = TK_LDDSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDSR;
	}
	{p++; goto _out; }
}
	break;
	case 276:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDISR;
		sym.tok_opcode = TK_LDISR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDISR;
	}
	{p++; goto _out; }
}
	break;
	case 277:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}
	break;
	case 278:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDR;
		sym.tok_opcode = TK_LSDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDR;
	}
	{p++; goto _out; }
}
	break;
	case 279:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIR;
		sym.tok_opcode = TK_LSIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIR;
	}
	{p++; goto _out; }
}
	break;
	case 280:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDDR;
		sym.tok_opcode = TK_LSDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDDR;
	}
	{p++; goto _out; }
}
	break;
	case 281:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIDR;
		sym.tok_opcode = TK_LSIDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIDR;
	}
	{p++; goto _out; }
}
	break;
	case 282:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MUL;
		sym.tok_opcode = TK_MUL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MUL;
	}
	{p++; goto _out; }
}
	break;
	case 283:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RDMODE;
		sym.tok_opcode = TK_RDMODE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RDMODE;
	}
	{p++; goto _out; }
}
	break;
	case 284:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETUSR;
		sym.tok_opcode = TK_SETUSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETUSR;
	}
	{p++; goto _out; }
}
	break;
	case 285:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SURES;
		sym.tok_opcode = TK_SURES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SURES;
	}
	{p++; goto _out; }
}
	break;
	case 286:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SYSCALL;
		sym.tok_opcode = TK_SYSCALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SYSCALL;
	}
	{p++; goto _out; }
}
	break;
	case 287:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMA;
		sym.tok_opcode = TK_UMA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMA;
	}
	{p++; goto _out; }
}
	break;
	case 288:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMS;
		sym.tok_opcode = TK_UMS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMS;
	}
	{p++; goto _out; }
}
	break;
	case 289:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_OZ;
		sym.tok_opcode = TK_CALL_OZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_OZ;
	}
	{p++; goto _out; }
}
	break;
	case 290:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_PKG;
		sym.tok_opcode = TK_CALL_PKG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_PKG;
	}
	{p++; goto _out; }
}
	break;
	case 291:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FPP;
		sym.tok_opcode = TK_FPP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FPP;
	}
	{p++; goto _out; }
}
	break;
	case 292:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INVOKE;
		sym.tok_opcode = TK_INVOKE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INVOKE;
	}
	{p++; goto _out; }
}
	break;
	case 293:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MOV;
		sym.tok_opcode = TK_MOV;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MOV;
	}
	{p++; goto _out; }
}
	break;
	case 294:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MVI;
		sym.tok_opcode = TK_MVI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MVI;
	}
	{p++; goto _out; }
}
	break;
	case 295:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LXI;
		sym.tok_opcode = TK_LXI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LXI;
	}
	{p++; goto _out; }
}
	break;
	case 296:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDA;
		sym.tok_opcode = TK_LDA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDA;
	}
	{p++; goto _out; }
}
	break;
	case 297:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_STA;
		sym.tok_opcode = TK_STA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_STA;
	}
	{p++; goto _out; }
}
	break;
	case 298:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LHLD;
		sym.tok_opcode = TK_LHLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LHLD;
	}
	{p++; goto _out; }
}
	break;
	case 299:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SHLD;
		sym.tok_opcode = TK_SHLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SHLD;
	}
	{p++; goto _out; }
}
	break;
	case 300:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDAX;
		sym.tok_opcode = TK_LDAX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDAX;
	}
	{p++; goto _out; }
}
	break;
	case 301:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_STAX;
		sym.tok_opcode = TK_STAX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_STAX;
	}
	{p++; goto _out; }
}
	break;
	case 302:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XCHG;
		sym.tok_opcode = TK_XCHG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XCHG;
	}
	{p++; goto _out; }
}
	break;
	case 303:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADI;
		sym.tok_opcode = TK_ADI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADI;
	}
	{p++; goto _out; }
}
	break;
	case 304:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ACI;
		sym.tok_opcode = TK_ACI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ACI;
	}
	{p++; goto _out; }
}
	break;
	case 305:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUI;
		sym.tok_opcode = TK_SUI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUI;
	}
	{p++; goto _out; }
}
	break;
	case 306:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBB;
		sym.tok_opcode = TK_SBB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBB;
	}
	{p++; goto _out; }
}
	break;
	case 307:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBI;
		sym.tok_opcode = TK_SBI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBI;
	}
	{p++; goto _out; }
}
	break;
	case 308:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INR;
		sym.tok_opcode = TK_INR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INR;
	}
	{p++; goto _out; }
}
	break;
	case 309:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DCR;
		sym.tok_opcode = TK_DCR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DCR;
	}
	{p++; goto _out; }
}
	break;
	case 310:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INX;
		sym.tok_opcode = TK_INX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INX;
	}
	{p++; goto _out; }
}
	break;
	case 311:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DCX;
		sym.tok_opcode = TK_DCX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DCX;
	}
	{p++; goto _out; }
}
	break;
	case 312:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAD;
		sym.tok_opcode = TK_DAD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAD;
	}
	{p++; goto _out; }
}
	break;
	case 313:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ANA;
		sym.tok_opcode = TK_ANA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ANA;
	}
	{p++; goto _out; }
}
	break;
	case 314:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ANI;
		sym.tok_opcode = TK_ANI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ANI;
	}
	{p++; goto _out; }
}
	break;
	case 315:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORA;
		sym.tok_opcode = TK_ORA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORA;
	}
	{p++; goto _out; }
}
	break;
	case 316:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORI;
		sym.tok_opcode = TK_ORI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORI;
	}
	{p++; goto _out; }
}
	break;
	case 317:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XRA;
		sym.tok_opcode = TK_XRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XRA;
	}
	{p++; goto _out; }
}
	break;
	case 318:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XRI;
		sym.tok_opcode = TK_XRI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XRI;
	}
	{p++; goto _out; }
}
	break;
	case 319:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CMP;
		sym.tok_opcode = TK_CMP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CMP;
	}
	{p++; goto _out; }
}
	break;
	case 320:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RAL;
		sym.tok_opcode = TK_RAL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RAL;
	}
	{p++; goto _out; }
}
	break;
	case 321:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RAR;
		sym.tok_opcode = TK_RAR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RAR;
	}
	{p++; goto _out; }
}
	break;
	case 322:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CMA;
		sym.tok_opcode = TK_CMA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CMA;
	}
	{p++; goto _out; }
}
	break;
	case 323:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CMC;
		sym.tok_opcode = TK_CMC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CMC;
	}
	{p++; goto _out; }
}
	break;
	case 324:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_STC;
		sym.tok_opcode = TK_STC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_STC;
	}
	{p++; goto _out; }
}
	break;
	case 325:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JMP;
		sym.tok_opcode = TK_JMP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JMP;
	}
	{p++; goto _out; }
}
	break;
	case 326:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JNC;
		sym.tok_opcode = TK_JNC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JNC;
	}
	{p++; goto _out; }
}
	break;
	case 327:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JC;
		sym.tok_opcode = TK_JC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JC;
	}
	{p++; goto _out; }
}
	break;
	case 328:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JNZ;
		sym.tok_opcode = TK_JNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JNZ;
	}
	{p++; goto _out; }
}
	break;
	case 329:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JZ;
		sym.tok_opcode = TK_JZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JZ;
	}
	{p++; goto _out; }
}
	break;
	case 330:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JPO;
		sym.tok_opcode = TK_JPO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JPO;
	}
	{p++; goto _out; }
}
	break;
	case 331:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JPE;
		sym.tok_opcode = TK_JPE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JPE;
	}
	{p++; goto _out; }
}
	break;
	case 332:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JM;
		sym.tok_opcode = TK_JM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JM;
	}
	{p++; goto _out; }
}
	break;
	case 333:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_NC;
		sym.tok_opcode = TK_J_NC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_NC;
	}
	{p++; goto _out; }
}
	break;
	case 334:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_C;
		sym.tok_opcode = TK_J_C;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_C;
	}
	{p++; goto _out; }
}
	break;
	case 335:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_NZ;
		sym.tok_opcode = TK_J_NZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_NZ;
	}
	{p++; goto _out; }
}
	break;
	case 336:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_Z;
		sym.tok_opcode = TK_J_Z;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_Z;
	}
	{p++; goto _out; }
}
	break;
	case 337:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_PO;
		sym.tok_opcode = TK_J_PO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_PO;
	}
	{p++; goto _out; }
}
	break;
	case 338:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_PE;
		sym.tok_opcode = TK_J_PE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_PE;
	}
	{p++; goto _out; }
}
	break;
	case 339:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_P;
		sym.tok_opcode = TK_J_P;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_P;
	}
	{p++; goto _out; }
}
	break;
	case 340:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_J_M;
		sym.tok_opcode = TK_J_M;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_J_M;
	}
	{p++; goto _out; }
}
	break;
	case 341:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CNC;
		sym.tok_opcode = TK_CNC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CNC;
	}
	{p++; goto _out; }
}
	break;
	case 342:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CC;
		sym.tok_opcode = TK_CC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CC;
	}
	{p++; goto _out; }
}
	break;
	case 343:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CNZ;
		sym.tok_opcode = TK_CNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CNZ;
	}
	{p++; goto _out; }
}
	break;
	case 344:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CZ;
		sym.tok_opcode = TK_CZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CZ;
	}
	{p++; goto _out; }
}
	break;
	case 345:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPO;
		sym.tok_opcode = TK_CPO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPO;
	}
	{p++; goto _out; }
}
	break;
	case 346:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPE;
		sym.tok_opcode = TK_CPE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPE;
	}
	{p++; goto _out; }
}
	break;
	case 347:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CM;
		sym.tok_opcode = TK_CM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CM;
	}
	{p++; goto _out; }
}
	break;
	case 348:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_NC;
		sym.tok_opcode = TK_C_NC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_NC;
	}
	{p++; goto _out; }
}
	break;
	case 349:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_C;
		sym.tok_opcode = TK_C_C;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_C;
	}
	{p++; goto _out; }
}
	break;
	case 350:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_NZ;
		sym.tok_opcode = TK_C_NZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_NZ;
	}
	{p++; goto _out; }
}
	break;
	case 351:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_Z;
		sym.tok_opcode = TK_C_Z;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_Z;
	}
	{p++; goto _out; }
}
	break;
	case 352:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_PO;
		sym.tok_opcode = TK_C_PO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_PO;
	}
	{p++; goto _out; }
}
	break;
	case 353:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_PE;
		sym.tok_opcode = TK_C_PE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_PE;
	}
	{p++; goto _out; }
}
	break;
	case 354:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_P;
		sym.tok_opcode = TK_C_P;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_P;
	}
	{p++; goto _out; }
}
	break;
	case 355:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_M;
		sym.tok_opcode = TK_C_M;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_M;
	}
	{p++; goto _out; }
}
	break;
	case 356:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RNC;
		sym.tok_opcode = TK_RNC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RNC;
	}
	{p++; goto _out; }
}
	break;
	case 357:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RC;
		sym.tok_opcode = TK_RC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RC;
	}
	{p++; goto _out; }
}
	break;
	case 358:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RNZ;
		sym.tok_opcode = TK_RNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RNZ;
	}
	{p++; goto _out; }
}
	break;
	case 359:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RZ;
		sym.tok_opcode = TK_RZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RZ;
	}
	{p++; goto _out; }
}
	break;
	case 360:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RPO;
		sym.tok_opcode = TK_RPO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RPO;
	}
	{p++; goto _out; }
}
	break;
	case 361:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RPE;
		sym.tok_opcode = TK_RPE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RPE;
	}
	{p++; goto _out; }
}
	break;
	case 362:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RP;
		sym.tok_opcode = TK_RP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RP;
	}
	{p++; goto _out; }
}
	break;
	case 363:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RM;
		sym.tok_opcode = TK_RM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RM;
	}
	{p++; goto _out; }
}
	break;
	case 364:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_NC;
		sym.tok_opcode = TK_R_NC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_NC;
	}
	{p++; goto _out; }
}
	break;
	case 365:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_C;
		sym.tok_opcode = TK_R_C;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_C;
	}
	{p++; goto _out; }
}
	break;
	case 366:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_NZ;
		sym.tok_opcode = TK_R_NZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_NZ;
	}
	{p++; goto _out; }
}
	break;
	case 367:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_Z;
		sym.tok_opcode = TK_R_Z;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_Z;
	}
	{p++; goto _out; }
}
	break;
	case 368:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_PO;
		sym.tok_opcode = TK_R_PO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_PO;
	}
	{p++; goto _out; }
}
	break;
	case 369:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_PE;
		sym.tok_opcode = TK_R_PE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_PE;
	}
	{p++; goto _out; }
}
	break;
	case 370:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_P;
		sym.tok_opcode = TK_R_P;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_P;
	}
	{p++; goto _out; }
}
	break;
	case 371:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_R_M;
		sym.tok_opcode = TK_R_M;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_R_M;
	}
	{p++; goto _out; }
}
	break;
	case 372:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PCHL;
		sym.tok_opcode = TK_PCHL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PCHL;
	}
	{p++; goto _out; }
}
	break;
	case 373:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XTHL;
		sym.tok_opcode = TK_XTHL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XTHL;
	}
	{p++; goto _out; }
}
	break;
	case 374:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SPHL;
		sym.tok_opcode = TK_SPHL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SPHL;
	}
	{p++; goto _out; }
}
	break;
	case 375:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HLT;
		sym.tok_opcode = TK_HLT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HLT;
	}
	{p++; goto _out; }
}
	break;
	case 378:
	{{p = ((te))-1;}
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }
	break;
	case 380:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 382:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 384:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 386:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 390:
	{{p = ((te))-1;}
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	}
	}
	break;
		}
	}
_again:
	_acts = _lexer_actions + _lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
	{ts = 0;}
	break;
		}
	}
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == ( eof_) )
	{
	if ( _lexer_eof_trans[cs] > 0 ) {
		_trans = _lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}
	_out: {}
	}
 return sym.tok;
}
