static const short _lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	216, 1, 217, 1, 218, 1, 219, 1, 
	220, 1, 221, 1, 222, 1, 223, 1, 
	224, 1, 225, 1, 226, 1, 227, 1, 
	228, 1, 229, 1, 230, 1, 231, 1, 
	232, 1, 233, 1, 234, 1, 235, 1, 
	236, 1, 237, 1, 238, 1, 239, 1, 
	240, 1, 241, 1, 242, 1, 243, 1, 
	244, 1, 245, 1, 246, 1, 247, 1, 
	248, 1, 249, 1, 250, 1, 251, 1, 
	252, 1, 253, 1, 254, 1, 255, 1, 
	256, 1, 257, 1, 258, 1, 259, 1, 
	260, 1, 261, 1, 262, 1, 263, 1, 
	264, 1, 265, 1, 266, 1, 267, 1, 
	268, 1, 269, 1, 270, 1, 271, 1, 
	272, 1, 273, 1, 274, 1, 275, 1, 
	276, 1, 277, 1, 278, 1, 279, 1, 
	280, 1, 281, 1, 282, 1, 283, 1, 
	284, 1, 285, 1, 286, 1, 287, 1, 
	288, 1, 289, 1, 290, 1, 291, 1, 
	292, 1, 293, 1, 294, 1, 295, 1, 
	296, 1, 297, 1, 298, 1, 299, 1, 
	300, 1, 301, 1, 302, 1, 303, 1, 
	304, 1, 305, 1, 306, 1, 307, 1, 
	308, 1, 309, 1, 310, 1, 311, 1, 
	312, 1, 313, 1, 314, 1, 315, 1, 
	316, 1, 317, 1, 318, 1, 319, 1, 
	320, 1, 321, 1, 322, 1, 323, 1, 
	324, 1, 325, 1, 326, 1, 327, 1, 
	328, 1, 329, 1, 330, 1, 331, 1, 
	332, 1, 333, 1, 334, 1, 335, 1, 
	336, 1, 337, 1, 338, 1, 339, 1, 
	340, 1, 341, 1, 342, 1, 343, 1, 
	344, 1, 345, 1, 346, 1, 347, 1, 
	348, 1, 349, 1, 350, 1, 351, 1, 
	352, 1, 353, 1, 354, 1, 355, 1, 
	356, 1, 357, 1, 358, 1, 359, 1, 
	360, 1, 361, 1, 362, 1, 363, 1, 
	364, 1, 365, 1, 366, 1, 367, 1, 
	368, 1, 369, 1, 370, 2, 2, 3, 
	2, 2, 4, 2, 2, 5, 2, 2, 
	6, 2, 2, 7, 2, 2, 8, 2, 
	2, 9, 2, 2, 10, 2, 2, 11, 
	2, 2, 12, 2, 2, 13, 2, 2, 
	14, 2, 2, 15, 2, 2, 16, 2, 
	2, 17, 2, 2, 18, 2, 2, 19, 
	2, 2, 20, 2, 2, 21, 2, 2, 
	22, 2, 2, 23, 2, 2, 24, 2, 
	2, 25, 2, 2, 26, 2, 2, 27, 
	2, 2, 28, 2, 2, 29, 2, 2, 
	30, 2, 2, 31, 2, 2, 32, 2, 
	2, 33, 2, 2, 34, 2, 2, 35, 
	2, 2, 36, 2, 2, 37, 2, 2, 
	38, 2, 2, 39, 2, 2, 40, 2, 
	2, 41, 2, 2, 42, 2, 2, 43, 
	2, 2, 44, 2, 2, 45, 2, 2, 
	46, 2, 2, 47, 2, 2, 48, 2, 
	2, 49, 2, 2, 50, 2, 2, 51, 
	2, 2, 52, 2, 2, 53, 2, 2, 
	54, 2, 2, 55, 2, 2, 56, 2, 
	2, 57, 2, 2, 58, 2, 2, 59, 
	2, 2, 60, 2, 2, 61, 2, 2, 
	62, 2, 2, 63, 2, 2, 64, 2, 
	2, 65, 2, 2, 66, 2, 2, 67, 
	2, 2, 68, 2, 2, 69, 2, 2, 
	70, 2, 2, 71, 2, 2, 72, 2, 
	2, 73, 2, 2, 74, 2, 2, 75, 
	2, 2, 76, 2, 2, 77, 2, 2, 
	78, 2, 2, 79, 2, 2, 80, 2, 
	2, 81, 2, 2, 82, 2, 2, 83, 
	2, 2, 84, 2, 2, 85, 2, 2, 
	86, 2, 2, 87, 2, 2, 88, 2, 
	2, 89, 2, 2, 90, 2, 2, 91, 
	2, 2, 92, 2, 2, 93, 2, 2, 
	94, 2, 2, 95, 2, 2, 96, 2, 
	2, 97, 2, 2, 98, 2, 2, 99, 
	2, 2, 100, 2, 2, 101, 2, 2, 
	102, 2, 2, 103, 2, 2, 104, 2, 
	2, 105, 2, 2, 106, 2, 2, 107, 
	2, 2, 108, 2, 2, 109, 2, 2, 
	110, 2, 2, 111, 2, 2, 112, 2, 
	2, 113, 2, 2, 114, 2, 2, 115, 
	2, 2, 116, 2, 2, 117, 2, 2, 
	118, 2, 2, 119, 2, 2, 120, 2, 
	2, 121, 2, 2, 122, 2, 2, 123, 
	2, 2, 124, 2, 2, 125, 2, 2, 
	126, 2, 2, 127, 2, 2, 128, 2, 
	2, 129, 2, 2, 130, 2, 2, 131, 
	2, 2, 132, 2, 2, 133, 2, 2, 
	134, 2, 2, 135, 2, 2, 136, 2, 
	2, 137, 2, 2, 138, 2, 2, 139, 
	2, 2, 140, 2, 2, 141, 2, 2, 
	142, 2, 2, 143, 2, 2, 144, 2, 
	2, 145, 2, 2, 146, 2, 2, 147, 
	2, 2, 148, 2, 2, 149, 2, 2, 
	150, 2, 2, 151, 2, 2, 152, 2, 
	2, 153, 2, 2, 154, 2, 2, 155, 
	2, 2, 156, 2, 2, 157, 2, 2, 
	158, 2, 2, 159, 2, 2, 160, 2, 
	2, 161, 2, 2, 162, 2, 2, 163, 
	2, 2, 164, 2, 2, 165, 2, 2, 
	166, 2, 2, 167, 2, 2, 168, 2, 
	2, 169, 2, 2, 170, 2, 2, 171, 
	2, 2, 172, 2, 2, 173, 2, 2, 
	174, 2, 2, 175, 2, 2, 176, 2, 
	2, 177, 2, 2, 178, 2, 2, 179, 
	2, 2, 180, 2, 2, 181, 2, 2, 
	182, 2, 2, 183, 2, 2, 184, 2, 
	2, 185, 2, 2, 186, 2, 2, 187, 
	2, 2, 188, 2, 2, 189, 2, 2, 
	190, 2, 2, 191, 2, 2, 192, 2, 
	2, 193, 2, 2, 194, 2, 2, 195, 
	2, 2, 196, 2, 2, 197, 2, 2, 
	198, 2, 2, 199, 2, 2, 200, 2, 
	2, 201, 2, 2, 202, 2, 2, 203, 
	2, 2, 204, 2, 2, 205, 2, 2, 
	206, 2, 2, 207, 2, 2, 208, 2, 
	2, 209, 2, 2, 210, 2, 2, 211, 
	2, 2, 212, 2, 2, 213, 2, 2, 
	214, 2, 2, 215
};
static const short _lexer_cond_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 8, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 17, 21, 28, 35, 42, 
	49, 56, 63, 70, 77, 84, 91, 98, 
	105, 112, 119, 126, 133, 140, 147, 154, 
	161, 168, 175, 182, 189, 196, 203, 210, 
	217, 224, 231, 238, 245, 252, 259, 266, 
	273, 280, 287, 294, 301, 308, 315, 322, 
	329, 336, 343, 350, 357, 364, 371, 378, 
	385, 392, 399, 406, 413, 420, 427, 434, 
	441, 448, 455, 462, 469, 476, 483, 490, 
	497, 504, 511, 518, 525, 532, 539, 546, 
	553, 560, 567, 574, 581, 588, 595, 602, 
	609, 616, 623, 630, 637, 644, 651, 658, 
	665, 672, 679, 686, 693, 700, 707, 714, 
	721, 728, 735, 742, 749, 756, 763, 770, 
	777, 784, 791, 798, 805, 812, 819, 826, 
	833, 840, 847, 854, 861, 868, 875, 882, 
	889, 896, 903, 910, 917, 924, 931, 938, 
	945, 952, 959, 966, 973, 980, 987, 994, 
	1001, 1008, 1015, 1022, 1029, 1036, 1043, 1050, 
	1057, 1064, 1071, 1078, 1085, 1092, 1099, 1106, 
	1113, 1120, 1127, 1134, 1141, 1148, 1155, 1162, 
	1169, 1176, 1183, 1190, 1197, 1204, 1211, 1218, 
	1225, 1232, 1239, 1246, 1253, 1260, 1267, 1274, 
	1281, 1288, 1295, 1302, 1309, 1316, 1323, 1330, 
	1337, 1344, 1351, 1358, 1365, 1372, 1379, 1386, 
	1393, 1400, 1407, 1414, 1421, 1428, 1435, 1442, 
	1449, 1456, 1463, 1470, 1477, 1484, 1491, 1498, 
	1505, 1512, 1519, 1526, 1533, 1540, 1547, 1554, 
	1561, 1568, 1575, 1582, 1589, 1596, 1603, 1610, 
	1617, 1624, 1631, 1638, 1645, 1652, 1659, 1666, 
	1673, 1680, 1687, 1694, 1701, 1708, 1715, 1722, 
	1729, 1736, 1743, 1750, 1757, 1764, 1771, 1778, 
	1785, 1792, 1799, 1806, 1813
};
static const char _lexer_cond_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 3, 4, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 4, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7
};
static const short _lexer_cond_keys[] = {
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 58, 58, 
	46, 46, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 48, 57, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	0
};
static const char _lexer_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_key_offsets[] = {
	0, 0, 2, 5, 19, 21, 26, 31, 
	33, 38, 40, 45, 49, 54, 59, 61, 
	66, 74, 80, 88, 90, 92, 94, 96, 
	98, 100, 102, 104, 106, 108, 110, 114, 
	116, 118, 120, 127, 135, 142, 145, 283, 
	284, 290, 293, 295, 296, 310, 311, 325, 
	337, 345, 353, 363, 369, 370, 373, 374, 
	376, 377, 396, 403, 411, 422, 430, 441, 
	450, 459, 468, 477, 486, 495, 504, 518, 
	526, 537, 546, 555, 564, 573, 582, 598, 
	607, 616, 623, 634, 643, 652, 661, 670, 
	678, 691, 700, 709, 717, 726, 735, 744, 
	753, 773, 782, 798, 823, 832, 841, 850, 
	859, 868, 877, 886, 895, 904, 913, 922, 
	931, 940, 949, 958, 967, 976, 984, 992, 
	1008, 1017, 1026, 1035, 1044, 1053, 1062, 1073, 
	1082, 1091, 1100, 1112, 1121, 1130, 1139, 1148, 
	1157, 1166, 1175, 1184, 1193, 1202, 1214, 1223, 
	1232, 1240, 1265, 1274, 1283, 1294, 1303, 1312, 
	1321, 1330, 1339, 1348, 1364, 1373, 1382, 1391, 
	1400, 1409, 1418, 1427, 1436, 1445, 1456, 1467, 
	1476, 1485, 1494, 1503, 1514, 1525, 1536, 1554, 
	1569, 1582, 1591, 1600, 1613, 1624, 1633, 1642, 
	1651, 1660, 1669, 1678, 1687, 1696, 1705, 1716, 
	1725, 1738, 1749, 1758, 1769, 1778, 1787, 1798, 
	1807, 1824, 1833, 1842, 1851, 1860, 1869, 1878, 
	1893, 1902, 1911, 1920, 1929, 1938, 1955, 1966, 
	1975, 1984, 1993, 2002, 2011, 2024, 2033, 2044, 
	2055, 2064, 2075, 2084, 2093, 2105, 2114, 2123, 
	2140, 2149, 2158, 2167, 2176, 2185, 2194, 2205, 
	2214, 2223, 2232, 2243, 2252, 2261, 2270, 2279, 
	2296, 2305, 2314, 2323, 2332, 2343, 2354, 2367, 
	2375, 2384, 2392, 2405, 2413, 2422, 2430, 2439, 
	2464, 2473, 2482, 2490, 2501, 2510, 2519, 2528, 
	2537, 2548, 2557, 2566, 2575, 2590, 2601, 2612, 
	2621, 2630, 2639, 2648, 2657, 2666, 2675, 2684, 
	2693, 2702, 2711, 2720, 2731, 2740, 2749, 2758, 
	2767, 2776, 2787, 2798, 2807, 2816, 2825, 2834, 
	2843, 2852, 2869, 2878, 2887, 2896, 2905, 2914, 
	2923, 2932, 2941, 2948, 2955, 2995, 3012, 3031, 
	3056, 3074, 3099, 3120, 3141, 3162, 3183, 3204, 
	3225, 3246, 3276, 3294, 3319, 3340, 3361, 3382, 
	3403, 3424, 3458, 3479, 3500, 3517, 3542, 3563, 
	3584, 3605, 3626, 3644, 3673, 3694, 3715, 3733, 
	3754, 3775, 3796, 3817, 3859, 3880, 3914, 3967, 
	3988, 4009, 4030, 4051, 4072, 4093, 4114, 4135, 
	4156, 4177, 4198, 4219, 4240, 4261, 4282, 4303, 
	4324, 4342, 4360, 4394, 4415, 4436, 4457, 4478, 
	4499, 4520, 4545, 4566, 4587, 4608, 4634, 4655, 
	4676, 4697, 4718, 4739, 4760, 4781, 4802, 4823, 
	4844, 4870, 4891, 4912, 4930, 4983, 5004, 5025, 
	5050, 5071, 5092, 5113, 5134, 5155, 5176, 5211, 
	5232, 5253, 5274, 5295, 5316, 5337, 5358, 5379, 
	5400, 5425, 5450, 5471, 5492, 5513, 5534, 5559, 
	5584, 5609, 5647, 5680, 5709, 5730, 5751, 5780, 
	5805, 5826, 5847, 5868, 5889, 5910, 5931, 5952, 
	5973, 5994, 6019, 6040, 6069, 6094, 6115, 6140, 
	6161, 6182, 6207, 6228, 6265, 6286, 6307, 6328, 
	6349, 6370, 6391, 6424, 6445, 6466, 6487, 6508, 
	6529, 6566, 6591, 6612, 6633, 6654, 6675, 6696, 
	6725, 6746, 6771, 6796, 6817, 6842, 6863, 6884, 
	6911, 6932, 6953, 6990, 7011, 7032, 7053, 7074, 
	7095, 7116, 7141, 7162, 7183, 7204, 7229, 7250, 
	7271, 7292, 7313, 7350, 7371, 7392, 7413, 7434, 
	7459, 7484, 7513, 7531, 7552, 7570, 7599, 7617, 
	7638, 7656, 7677, 7730, 7751, 7772, 7790, 7815, 
	7836, 7857, 7878, 7899, 7924, 7945, 7966, 7987, 
	8020, 8045, 8070, 8091, 8112, 8133, 8154, 8175, 
	8196, 8217, 8238, 8259, 8280, 8301, 8322, 8347, 
	8368, 8389, 8410, 8431, 8452, 8477, 8502, 8523, 
	8544, 8565, 8586, 8607, 8628, 8665, 8686, 8707, 
	8728, 8749, 8770, 8791, 8812
};
static const short _lexer_trans_keys[] = {
	35, 45, 34, 35, 45, 9, 32, 66, 
	67, 68, 72, 73, 83, 98, 99, 100, 
	104, 105, 115, 67, 99, 9, 32, 41, 
	43, 45, 9, 32, 41, 43, 45, 69, 
	101, 9, 32, 41, 43, 45, 76, 108, 
	9, 32, 41, 43, 45, 88, 89, 120, 
	121, 9, 32, 41, 43, 45, 9, 32, 
	41, 43, 45, 80, 112, 9, 32, 41, 
	43, 45, 72, 104, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	77, 78, 83, 87, 109, 110, 115, 119, 
	79, 111, 86, 118, 69, 101, 79, 111, 
	80, 112, 84, 116, 79, 111, 80, 112, 
	65, 97, 73, 105, 84, 116, 67, 87, 
	99, 119, 77, 109, 68, 100, 82, 114, 
	48, 49, 50, 51, 52, 53, 54, 66, 
	80, 81, 87, 98, 112, 113, 119, 521, 
	544, 607, 577, 602, 609, 634, 521, 544, 
	570, 10, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 47, 
	48, 49, 58, 59, 60, 61, 62, 63, 
	64, 91, 92, 93, 94, 96, 123, 124, 
	125, 126, 127, 302, 321, 322, 323, 324, 
	325, 326, 327, 328, 329, 330, 332, 333, 
	334, 335, 336, 338, 339, 340, 341, 342, 
	344, 346, 351, 353, 354, 355, 356, 357, 
	358, 359, 360, 361, 362, 364, 365, 366, 
	367, 368, 370, 371, 372, 373, 374, 376, 
	378, 558, 577, 578, 579, 580, 581, 582, 
	583, 584, 585, 586, 588, 589, 590, 591, 
	592, 594, 595, 596, 597, 598, 600, 602, 
	607, 609, 610, 611, 612, 613, 614, 615, 
	616, 617, 618, 620, 621, 622, 623, 624, 
	626, 627, 628, 629, 630, 632, 634, -128, 
	32, 50, 57, 331, 345, 363, 377, 587, 
	601, 619, 633, 61, 48, 57, 65, 70, 
	97, 102, 34, 48, 49, 48, 49, 38, 
	9, 32, 66, 67, 68, 72, 73, 83, 
	98, 99, 100, 104, 105, 115, 42, 66, 
	72, 88, 98, 104, 120, 48, 49, 50, 
	57, 65, 70, 97, 102, 66, 72, 98, 
	104, 48, 49, 50, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 49, 50, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 10, 60, 61, 62, 61, 61, 62, 
	124, 39, 51, 68, 70, 76, 78, 83, 
	95, 100, 102, 108, 110, 115, 48, 57, 
	65, 90, 97, 122, 95, 48, 57, 65, 
	90, 97, 122, 50, 95, 48, 57, 65, 
	90, 97, 122, 67, 68, 95, 99, 100, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 73, 84, 
	95, 105, 116, 48, 57, 65, 90, 97, 
	122, 71, 95, 103, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	39, 67, 73, 79, 95, 99, 105, 111, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 78, 84, 
	95, 110, 116, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 89, 95, 121, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 39, 65, 
	67, 80, 85, 95, 97, 99, 112, 117, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 48, 57, 65, 90, 97, 122, 79, 
	80, 95, 111, 112, 48, 57, 65, 90, 
	97, 122, 90, 95, 122, 48, 57, 65, 
	89, 97, 121, 75, 95, 107, 48, 57, 
	65, 90, 97, 122, 71, 95, 103, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 68, 73, 
	76, 95, 100, 105, 108, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 46, 95, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 39, 65, 69, 73, 74, 77, 83, 
	95, 97, 101, 105, 106, 109, 115, 48, 
	57, 66, 90, 98, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 39, 67, 
	70, 72, 80, 95, 99, 102, 104, 112, 
	48, 57, 65, 90, 97, 122, 66, 67, 
	71, 73, 77, 81, 83, 86, 87, 95, 
	98, 99, 103, 105, 109, 113, 115, 118, 
	119, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 85, 95, 117, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 90, 95, 
	122, 48, 57, 65, 89, 97, 121, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	46, 95, 48, 57, 65, 90, 97, 122, 
	46, 95, 48, 57, 65, 90, 97, 122, 
	39, 73, 76, 78, 88, 95, 105, 108, 
	110, 120, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 84, 88, 
	95, 116, 120, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 39, 73, 80, 95, 
	105, 112, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 39, 65, 76, 95, 97, 108, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	68, 70, 73, 77, 78, 79, 80, 88, 
	89, 95, 100, 102, 105, 109, 110, 111, 
	112, 120, 121, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 68, 78, 95, 100, 110, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 48, 67, 68, 73, 
	86, 95, 99, 100, 105, 118, 49, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 75, 95, 107, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 69, 73, 95, 
	101, 105, 48, 57, 65, 90, 97, 122, 
	82, 83, 95, 114, 115, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 83, 95, 115, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 72, 
	76, 95, 104, 108, 48, 57, 65, 90, 
	97, 122, 72, 76, 95, 104, 108, 48, 
	57, 65, 90, 97, 122, 80, 82, 95, 
	112, 114, 48, 57, 65, 90, 97, 122, 
	39, 68, 73, 79, 83, 90, 95, 100, 
	105, 111, 115, 122, 48, 57, 65, 89, 
	97, 121, 68, 73, 80, 87, 95, 100, 
	105, 112, 119, 48, 57, 65, 90, 97, 
	122, 82, 83, 88, 95, 114, 115, 120, 
	48, 57, 65, 90, 97, 122, 88, 95, 
	120, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	82, 83, 88, 95, 114, 115, 120, 48, 
	57, 65, 90, 97, 122, 83, 88, 95, 
	115, 120, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 88, 
	95, 120, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 66, 78, 95, 98, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 68, 73, 84, 
	95, 100, 105, 116, 48, 57, 65, 90, 
	97, 122, 68, 82, 95, 100, 114, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 68, 82, 
	95, 100, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 70, 78, 95, 102, 110, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 73, 
	76, 77, 79, 85, 95, 105, 108, 109, 
	111, 117, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	48, 57, 65, 90, 97, 122, 48, 49, 
	50, 51, 52, 53, 54, 55, 95, 56, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	48, 57, 65, 90, 97, 122, 85, 95, 
	117, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 67, 69, 79, 86, 90, 95, 
	99, 101, 111, 118, 122, 48, 57, 65, 
	89, 97, 121, 71, 88, 95, 103, 120, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 71, 95, 103, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 82, 84, 85, 95, 114, 
	116, 117, 48, 57, 65, 90, 97, 122, 
	71, 95, 103, 48, 57, 65, 90, 97, 
	122, 68, 73, 95, 100, 105, 48, 57, 
	65, 90, 97, 122, 77, 82, 95, 109, 
	114, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	77, 82, 95, 109, 114, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 48, 68, 73, 
	95, 100, 105, 49, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 66, 95, 98, 48, 57, 65, 
	90, 97, 122, 69, 72, 73, 79, 85, 
	95, 101, 104, 105, 111, 117, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 88, 
	95, 120, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 65, 68, 95, 97, 100, 48, 
	57, 66, 90, 98, 122, 68, 95, 100, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	66, 83, 95, 98, 115, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 72, 95, 
	104, 48, 57, 65, 90, 97, 122, 68, 
	69, 76, 82, 83, 95, 100, 101, 108, 
	114, 115, 48, 57, 65, 90, 97, 122, 
	77, 95, 109, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 83, 84, 95, 115, 
	116, 48, 57, 65, 90, 97, 122, 73, 
	78, 95, 105, 110, 48, 57, 65, 90, 
	97, 122, 65, 67, 68, 95, 97, 99, 
	100, 48, 57, 66, 90, 98, 122, 39, 
	95, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	65, 67, 68, 95, 97, 99, 100, 48, 
	57, 66, 90, 98, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 66, 
	67, 69, 76, 80, 82, 85, 87, 89, 
	95, 98, 99, 101, 108, 112, 114, 117, 
	119, 121, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 70, 95, 102, 48, 57, 65, 90, 
	97, 122, 39, 95, 48, 57, 65, 90, 
	97, 122, 67, 84, 95, 99, 116, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 65, 85, 95, 97, 117, 48, 57, 
	66, 90, 98, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 65, 
	73, 76, 80, 95, 97, 105, 108, 112, 
	48, 57, 66, 90, 98, 122, 65, 76, 
	95, 97, 108, 48, 57, 66, 90, 98, 
	122, 66, 82, 95, 98, 114, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 66, 95, 98, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 67, 95, 99, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	69, 83, 95, 101, 115, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	77, 78, 95, 109, 110, 48, 57, 65, 
	90, 97, 122, 65, 83, 95, 97, 115, 
	48, 57, 66, 90, 98, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 68, 76, 79, 80, 
	82, 95, 100, 108, 111, 112, 114, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	66, 95, 98, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 521, 544, 607, 
	577, 602, 609, 634, 607, 560, 569, 577, 
	602, 609, 634, 39, 307, 324, 326, 332, 
	334, 339, 351, 356, 358, 364, 366, 371, 
	521, 544, 563, 570, 580, 582, 588, 590, 
	595, 607, 612, 614, 620, 622, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 306, 351, 521, 544, 
	562, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	324, 351, 355, 356, 521, 544, 570, 579, 
	580, 607, 611, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 340, 351, 361, 372, 521, 
	544, 570, 585, 596, 607, 617, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 327, 351, 359, 521, 544, 
	570, 583, 607, 615, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 351, 356, 
	521, 544, 570, 580, 607, 612, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 333, 
	351, 365, 521, 544, 570, 589, 607, 621, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 336, 351, 368, 521, 
	544, 570, 592, 607, 624, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 323, 351, 355, 521, 544, 570, 579, 
	607, 611, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 323, 
	329, 335, 351, 355, 361, 367, 521, 544, 
	570, 579, 585, 591, 607, 611, 617, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 340, 
	351, 366, 372, 521, 544, 570, 590, 596, 
	607, 622, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 345, 351, 377, 521, 544, 570, 601, 
	607, 633, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 335, 351, 
	367, 521, 544, 570, 591, 607, 623, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 321, 323, 336, 341, 351, 353, 355, 
	368, 373, 521, 544, 570, 577, 579, 592, 
	597, 607, 609, 611, 624, 629, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 336, 351, 
	367, 368, 521, 544, 570, 591, 592, 607, 
	623, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 346, 351, 
	378, 521, 544, 570, 602, 607, 634, 304, 
	313, 321, 345, 353, 377, 560, 569, 577, 
	601, 609, 633, 331, 351, 363, 521, 544, 
	570, 587, 607, 619, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	327, 351, 359, 521, 544, 570, 583, 607, 
	615, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 329, 332, 351, 
	356, 361, 364, 521, 544, 570, 580, 585, 
	588, 607, 612, 617, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 46, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 334, 
	351, 366, 521, 544, 570, 590, 607, 622, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 39, 321, 325, 329, 330, 333, 339, 
	351, 353, 357, 361, 362, 365, 371, 521, 
	544, 570, 577, 581, 585, 586, 589, 595, 
	607, 609, 613, 617, 618, 621, 627, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	39, 323, 326, 328, 336, 351, 355, 358, 
	360, 368, 521, 544, 570, 579, 582, 584, 
	592, 607, 611, 614, 616, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 323, 327, 329, 333, 337, 
	339, 342, 343, 351, 354, 355, 359, 361, 
	365, 369, 371, 374, 375, 521, 544, 570, 
	578, 579, 583, 585, 589, 593, 595, 598, 
	599, 607, 610, 611, 615, 617, 621, 625, 
	627, 630, 631, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 335, 351, 367, 521, 
	544, 570, 591, 607, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 341, 351, 373, 521, 544, 570, 597, 
	607, 629, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 336, 351, 
	368, 521, 544, 570, 592, 607, 624, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 351, 366, 521, 544, 
	570, 590, 607, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 328, 351, 360, 521, 544, 570, 584, 
	607, 616, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 346, 351, 378, 521, 544, 570, 
	602, 607, 634, 304, 313, 321, 345, 353, 
	377, 560, 569, 577, 601, 609, 633, 321, 
	351, 353, 521, 544, 570, 577, 607, 609, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 46, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 46, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 329, 332, 334, 344, 351, 361, 364, 
	366, 376, 521, 544, 570, 585, 588, 590, 
	600, 607, 617, 620, 622, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 351, 356, 521, 544, 570, 580, 
	607, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 344, 351, 372, 376, 521, 544, 570, 
	596, 600, 607, 628, 632, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 334, 351, 366, 521, 544, 
	570, 590, 607, 622, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 329, 336, 351, 361, 368, 521, 544, 
	570, 585, 592, 607, 617, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 336, 351, 
	368, 521, 544, 570, 592, 607, 624, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	335, 351, 367, 521, 544, 570, 591, 607, 
	623, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 322, 351, 354, 
	521, 544, 570, 578, 607, 610, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 351, 353, 521, 544, 570, 
	577, 607, 609, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 321, 332, 351, 
	353, 364, 521, 544, 570, 577, 588, 607, 
	609, 620, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 326, 329, 333, 334, 335, 
	336, 344, 345, 351, 356, 358, 361, 365, 
	366, 367, 368, 376, 377, 521, 544, 570, 
	580, 582, 585, 589, 590, 591, 592, 600, 
	601, 607, 612, 614, 617, 621, 622, 623, 
	624, 632, 633, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 340, 351, 372, 521, 
	544, 570, 596, 607, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 334, 351, 356, 366, 521, 544, 
	570, 580, 590, 607, 612, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 351, 356, 521, 
	544, 570, 580, 607, 612, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	304, 323, 324, 329, 342, 351, 355, 356, 
	361, 374, 521, 544, 560, 570, 579, 580, 
	585, 598, 607, 611, 612, 617, 630, 305, 
	313, 321, 346, 353, 378, 561, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	341, 351, 373, 521, 544, 570, 597, 607, 
	629, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 351, 356, 
	521, 544, 570, 580, 607, 612, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 331, 351, 
	363, 521, 544, 570, 587, 607, 619, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 329, 351, 357, 361, 521, 544, 570, 
	581, 585, 607, 613, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 339, 351, 370, 371, 521, 544, 
	570, 594, 595, 607, 626, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 328, 332, 
	351, 360, 364, 521, 544, 570, 584, 588, 
	607, 616, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 328, 
	332, 351, 360, 364, 521, 544, 570, 584, 
	588, 607, 616, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	336, 338, 351, 368, 370, 521, 544, 570, 
	592, 594, 607, 624, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 39, 324, 329, 335, 339, 346, 351, 
	356, 361, 367, 371, 378, 521, 544, 570, 
	580, 585, 591, 595, 602, 607, 612, 617, 
	623, 627, 634, 304, 313, 321, 345, 353, 
	377, 560, 569, 577, 601, 609, 633, 324, 
	329, 336, 343, 351, 356, 361, 368, 375, 
	521, 544, 570, 580, 585, 592, 599, 607, 
	612, 617, 624, 631, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 339, 344, 351, 370, 371, 376, 521, 
	544, 570, 594, 595, 600, 607, 626, 627, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 344, 351, 376, 
	521, 544, 570, 600, 607, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	339, 344, 351, 370, 371, 376, 521, 544, 
	570, 594, 595, 600, 607, 626, 627, 632, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 344, 351, 371, 
	376, 521, 544, 570, 595, 600, 607, 627, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 351, 355, 
	521, 544, 570, 579, 607, 611, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 351, 353, 521, 544, 570, 
	577, 607, 609, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	344, 351, 376, 521, 544, 570, 600, 607, 
	632, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 334, 351, 354, 366, 521, 
	544, 570, 578, 590, 607, 610, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 329, 340, 351, 356, 361, 372, 521, 
	544, 570, 580, 585, 596, 607, 612, 617, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 338, 351, 
	356, 370, 521, 544, 570, 580, 594, 607, 
	612, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 338, 351, 356, 370, 
	521, 544, 570, 580, 594, 607, 612, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 334, 
	351, 358, 366, 521, 544, 570, 582, 590, 
	607, 614, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 332, 333, 335, 
	341, 351, 361, 364, 365, 367, 373, 521, 
	544, 570, 585, 588, 589, 591, 597, 607, 
	617, 620, 621, 623, 629, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 341, 351, 373, 521, 544, 570, 
	597, 607, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 304, 
	305, 306, 307, 308, 309, 310, 311, 351, 
	521, 544, 560, 561, 562, 563, 564, 565, 
	566, 567, 570, 607, 312, 313, 321, 346, 
	353, 378, 568, 569, 577, 602, 609, 634, 
	324, 351, 356, 521, 544, 570, 580, 607, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 341, 351, 373, 
	521, 544, 570, 597, 607, 629, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 323, 325, 335, 342, 346, 351, 355, 
	357, 367, 374, 378, 521, 544, 570, 579, 
	581, 591, 598, 602, 607, 611, 613, 623, 
	630, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 327, 344, 
	351, 359, 376, 521, 544, 570, 583, 600, 
	607, 615, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	351, 372, 521, 544, 570, 596, 607, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 327, 351, 
	359, 521, 544, 570, 583, 607, 615, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 336, 351, 368, 521, 544, 
	570, 592, 607, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 340, 341, 351, 370, 372, 373, 521, 
	544, 570, 594, 596, 597, 607, 626, 628, 
	629, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 327, 351, 359, 
	521, 544, 570, 583, 607, 615, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 329, 351, 356, 361, 521, 
	544, 570, 580, 585, 607, 612, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 333, 338, 351, 365, 370, 
	521, 544, 570, 589, 594, 607, 621, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 333, 338, 351, 365, 370, 521, 544, 
	570, 589, 594, 607, 621, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	351, 372, 521, 544, 570, 596, 607, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 304, 324, 329, 351, 
	356, 361, 521, 544, 560, 570, 580, 585, 
	607, 612, 617, 305, 313, 321, 346, 353, 
	378, 561, 569, 577, 602, 609, 634, 334, 
	351, 366, 521, 544, 570, 590, 607, 622, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 351, 354, 521, 
	544, 570, 578, 607, 610, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 328, 329, 335, 341, 351, 357, 
	360, 361, 367, 373, 521, 544, 570, 581, 
	584, 585, 591, 597, 607, 613, 616, 617, 
	623, 629, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 344, 351, 376, 
	521, 544, 570, 600, 607, 632, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 324, 351, 353, 
	356, 521, 544, 570, 577, 580, 607, 609, 
	612, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 324, 351, 356, 
	521, 544, 570, 580, 607, 612, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 336, 
	351, 368, 521, 544, 570, 592, 607, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 339, 351, 354, 
	371, 521, 544, 570, 578, 595, 607, 610, 
	627, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	351, 355, 521, 544, 570, 579, 607, 611, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 328, 351, 360, 521, 
	544, 570, 584, 607, 616, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 324, 325, 332, 338, 339, 351, 356, 
	357, 364, 370, 371, 521, 544, 570, 580, 
	581, 588, 594, 595, 607, 612, 613, 620, 
	626, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 333, 351, 
	365, 521, 544, 570, 589, 607, 621, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 351, 356, 521, 544, 570, 580, 607, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 339, 340, 351, 371, 372, 521, 
	544, 570, 595, 596, 607, 627, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 329, 334, 351, 361, 366, 
	521, 544, 570, 585, 590, 607, 617, 622, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 323, 324, 351, 
	353, 355, 356, 521, 544, 570, 577, 579, 
	580, 607, 609, 611, 612, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	39, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 323, 324, 351, 353, 355, 
	356, 521, 544, 570, 577, 579, 580, 607, 
	609, 611, 612, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 39, 
	351, 521, 544, 570, 607, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 322, 323, 325, 
	332, 336, 338, 341, 343, 345, 351, 354, 
	355, 357, 364, 368, 370, 373, 375, 377, 
	521, 544, 570, 578, 579, 581, 588, 592, 
	594, 597, 599, 601, 607, 610, 611, 613, 
	620, 624, 626, 629, 631, 633, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 351, 355, 521, 544, 570, 
	579, 607, 611, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 351, 521, 544, 
	570, 607, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 340, 
	351, 355, 372, 521, 544, 570, 579, 596, 
	607, 611, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	351, 372, 521, 544, 570, 596, 607, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 341, 351, 353, 373, 
	521, 544, 570, 577, 597, 607, 609, 629, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 329, 332, 336, 351, 
	353, 361, 364, 368, 521, 544, 570, 577, 
	585, 588, 592, 607, 609, 617, 620, 624, 
	304, 313, 322, 346, 354, 378, 560, 569, 
	578, 602, 610, 634, 321, 332, 351, 353, 
	364, 521, 544, 570, 577, 588, 607, 609, 
	620, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 322, 338, 351, 
	354, 370, 521, 544, 570, 578, 594, 607, 
	610, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 351, 354, 521, 
	544, 570, 578, 607, 610, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 323, 351, 
	355, 521, 544, 570, 579, 607, 611, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 339, 351, 357, 371, 521, 
	544, 570, 581, 595, 607, 613, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	340, 351, 372, 521, 544, 570, 596, 607, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 329, 351, 361, 521, 544, 570, 
	585, 607, 617, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 335, 
	351, 367, 521, 544, 570, 591, 607, 623, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 333, 334, 351, 365, 
	366, 521, 544, 570, 589, 590, 607, 621, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 339, 351, 
	353, 371, 521, 544, 570, 577, 595, 607, 
	609, 627, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 332, 335, 336, 
	338, 351, 356, 364, 367, 368, 370, 521, 
	544, 570, 580, 588, 591, 592, 594, 607, 
	612, 620, 623, 624, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 329, 351, 361, 521, 544, 
	570, 585, 607, 617, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 351, 354, 521, 544, 570, 578, 607, 
	610, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 323, 351, 355, 521, 544, 570, 
	579, 607, 611, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 326, 351, 358, 521, 
	544, 570, 582, 607, 614, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 0
};
static const char _lexer_single_lengths[] = {
	0, 2, 3, 14, 2, 5, 5, 2, 
	5, 2, 5, 4, 5, 5, 2, 5, 
	2, 0, 8, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 7, 8, 3, 3, 126, 1, 
	0, 1, 0, 1, 14, 1, 6, 4, 
	2, 2, 2, 0, 1, 3, 1, 2, 
	1, 13, 1, 2, 5, 2, 5, 3, 
	3, 3, 3, 3, 3, 3, 8, 2, 
	5, 3, 3, 3, 3, 3, 10, 3, 
	3, 1, 5, 3, 3, 3, 3, 2, 
	7, 3, 3, 2, 3, 3, 3, 3, 
	14, 3, 10, 19, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 2, 2, 10, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 6, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 6, 3, 3, 
	2, 19, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 10, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 5, 5, 3, 
	3, 3, 3, 5, 5, 5, 12, 9, 
	7, 3, 3, 7, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	7, 5, 3, 5, 3, 3, 5, 3, 
	11, 3, 3, 3, 3, 3, 3, 9, 
	3, 3, 3, 3, 3, 11, 5, 3, 
	3, 3, 3, 3, 7, 3, 5, 5, 
	3, 5, 3, 3, 6, 3, 3, 11, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 5, 3, 3, 3, 3, 11, 
	3, 3, 3, 3, 5, 5, 7, 2, 
	3, 2, 7, 2, 3, 2, 3, 19, 
	3, 3, 2, 5, 3, 3, 3, 3, 
	5, 3, 3, 3, 9, 5, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 3, 
	3, 5, 5, 3, 3, 3, 3, 3, 
	3, 11, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 1, 28, 5, 7, 13, 
	6, 13, 9, 9, 9, 9, 9, 9, 
	9, 18, 6, 13, 9, 9, 9, 9, 
	9, 22, 9, 9, 5, 13, 9, 9, 
	9, 9, 6, 17, 9, 9, 6, 9, 
	9, 9, 9, 30, 9, 22, 41, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	6, 6, 22, 9, 9, 9, 9, 9, 
	9, 13, 9, 9, 9, 14, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	14, 9, 9, 6, 41, 9, 9, 13, 
	9, 9, 9, 9, 9, 9, 23, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	13, 13, 9, 9, 9, 9, 13, 13, 
	13, 26, 21, 17, 9, 9, 17, 13, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 13, 9, 17, 13, 9, 13, 9, 
	9, 13, 9, 25, 9, 9, 9, 9, 
	9, 9, 21, 9, 9, 9, 9, 9, 
	25, 13, 9, 9, 9, 9, 9, 17, 
	9, 13, 13, 9, 13, 9, 9, 15, 
	9, 9, 25, 9, 9, 9, 9, 9, 
	9, 13, 9, 9, 9, 13, 9, 9, 
	9, 9, 25, 9, 9, 9, 9, 13, 
	13, 17, 6, 9, 6, 17, 6, 9, 
	6, 9, 41, 9, 9, 6, 13, 9, 
	9, 9, 9, 13, 9, 9, 9, 21, 
	13, 13, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 13, 9, 
	9, 9, 9, 9, 13, 13, 9, 9, 
	9, 9, 9, 9, 25, 9, 9, 9, 
	9, 9, 9, 9, 9
};
static const char _lexer_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 2, 0, 6, 0, 
	3, 1, 1, 0, 0, 0, 4, 4, 
	3, 3, 4, 3, 0, 0, 0, 0, 
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 2, 3, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6
};
static const short _lexer_index_offsets[] = {
	0, 0, 3, 7, 22, 25, 31, 37, 
	40, 46, 49, 55, 60, 66, 72, 75, 
	81, 87, 91, 100, 103, 106, 109, 112, 
	115, 118, 121, 124, 127, 130, 133, 138, 
	141, 144, 147, 155, 164, 170, 174, 307, 
	309, 313, 316, 318, 320, 335, 337, 348, 
	357, 363, 369, 376, 380, 382, 386, 388, 
	391, 393, 410, 415, 421, 430, 436, 445, 
	452, 459, 466, 473, 480, 487, 494, 506, 
	512, 521, 528, 535, 542, 549, 556, 570, 
	577, 584, 589, 598, 605, 612, 619, 626, 
	632, 643, 650, 657, 663, 670, 677, 684, 
	691, 709, 716, 730, 753, 760, 767, 774, 
	781, 788, 795, 802, 809, 816, 823, 830, 
	837, 844, 851, 858, 865, 872, 878, 884, 
	898, 905, 912, 919, 926, 933, 940, 949, 
	956, 963, 970, 980, 987, 994, 1001, 1008, 
	1015, 1022, 1029, 1036, 1043, 1050, 1060, 1067, 
	1074, 1080, 1103, 1110, 1117, 1126, 1133, 1140, 
	1147, 1154, 1161, 1168, 1182, 1189, 1196, 1203, 
	1210, 1217, 1224, 1231, 1238, 1245, 1254, 1263, 
	1270, 1277, 1284, 1291, 1300, 1309, 1318, 1334, 
	1347, 1358, 1365, 1372, 1383, 1392, 1399, 1406, 
	1413, 1420, 1427, 1434, 1441, 1448, 1455, 1464, 
	1471, 1482, 1491, 1498, 1507, 1514, 1521, 1530, 
	1537, 1552, 1559, 1566, 1573, 1580, 1587, 1594, 
	1607, 1614, 1621, 1628, 1635, 1642, 1657, 1666, 
	1673, 1680, 1687, 1694, 1701, 1712, 1719, 1728, 
	1737, 1744, 1753, 1760, 1767, 1777, 1784, 1791, 
	1806, 1813, 1820, 1827, 1834, 1841, 1848, 1857, 
	1864, 1871, 1878, 1887, 1894, 1901, 1908, 1915, 
	1930, 1937, 1944, 1951, 1958, 1967, 1976, 1987, 
	1993, 2000, 2006, 2017, 2023, 2030, 2036, 2043, 
	2066, 2073, 2080, 2086, 2095, 2102, 2109, 2116, 
	2123, 2132, 2139, 2146, 2153, 2166, 2175, 2184, 
	2191, 2198, 2205, 2212, 2219, 2226, 2233, 2240, 
	2247, 2254, 2261, 2268, 2277, 2284, 2291, 2298, 
	2305, 2312, 2321, 2330, 2337, 2344, 2351, 2358, 
	2365, 2372, 2387, 2394, 2401, 2408, 2415, 2422, 
	2429, 2436, 2443, 2449, 2454, 2489, 2501, 2515, 
	2535, 2548, 2568, 2584, 2600, 2616, 2632, 2648, 
	2664, 2680, 2705, 2718, 2738, 2754, 2770, 2786, 
	2802, 2818, 2847, 2863, 2879, 2891, 2911, 2927, 
	2943, 2959, 2975, 2988, 3012, 3028, 3044, 3057, 
	3073, 3089, 3105, 3121, 3158, 3174, 3203, 3251, 
	3267, 3283, 3299, 3315, 3331, 3347, 3363, 3379, 
	3395, 3411, 3427, 3443, 3459, 3475, 3491, 3507, 
	3523, 3536, 3549, 3578, 3594, 3610, 3626, 3642, 
	3658, 3674, 3694, 3710, 3726, 3742, 3763, 3779, 
	3795, 3811, 3827, 3843, 3859, 3875, 3891, 3907, 
	3923, 3944, 3960, 3976, 3989, 4037, 4053, 4069, 
	4089, 4105, 4121, 4137, 4153, 4169, 4185, 4215, 
	4231, 4247, 4263, 4279, 4295, 4311, 4327, 4343, 
	4359, 4379, 4399, 4415, 4431, 4447, 4463, 4483, 
	4503, 4523, 4556, 4584, 4608, 4624, 4640, 4664, 
	4684, 4700, 4716, 4732, 4748, 4764, 4780, 4796, 
	4812, 4828, 4848, 4864, 4888, 4908, 4924, 4944, 
	4960, 4976, 4996, 5012, 5044, 5060, 5076, 5092, 
	5108, 5124, 5140, 5168, 5184, 5200, 5216, 5232, 
	5248, 5280, 5300, 5316, 5332, 5348, 5364, 5380, 
	5404, 5420, 5440, 5460, 5476, 5496, 5512, 5528, 
	5550, 5566, 5582, 5614, 5630, 5646, 5662, 5678, 
	5694, 5710, 5730, 5746, 5762, 5778, 5798, 5814, 
	5830, 5846, 5862, 5894, 5910, 5926, 5942, 5958, 
	5978, 5998, 6022, 6035, 6051, 6064, 6088, 6101, 
	6117, 6130, 6146, 6194, 6210, 6226, 6239, 6259, 
	6275, 6291, 6307, 6323, 6343, 6359, 6375, 6391, 
	6419, 6439, 6459, 6475, 6491, 6507, 6523, 6539, 
	6555, 6571, 6587, 6603, 6619, 6635, 6651, 6671, 
	6687, 6703, 6719, 6735, 6751, 6771, 6791, 6807, 
	6823, 6839, 6855, 6871, 6887, 6919, 6935, 6951, 
	6967, 6983, 6999, 7015, 7031
};
static const short _lexer_indicies[] = {
	1, 1, 0, 2, 1, 1, 0, 4, 
	4, 5, 6, 7, 8, 9, 10, 5, 
	6, 7, 8, 9, 10, 3, 11, 11, 
	3, 11, 11, 12, 12, 12, 3, 6, 
	6, 13, 13, 13, 3, 14, 14, 3, 
	14, 14, 15, 15, 15, 3, 16, 16, 
	3, 16, 16, 17, 17, 17, 3, 18, 
	19, 18, 19, 3, 18, 18, 20, 20, 
	20, 3, 19, 19, 21, 21, 21, 3, 
	22, 22, 3, 22, 22, 23, 23, 23, 
	3, 25, 25, 24, 24, 24, 0, 27, 
	27, 27, 26, 29, 30, 31, 32, 29, 
	30, 31, 32, 28, 33, 33, 28, 34, 
	34, 28, 35, 35, 28, 36, 36, 28, 
	37, 37, 28, 38, 38, 28, 39, 39, 
	28, 40, 40, 28, 41, 41, 28, 42, 
	42, 28, 43, 43, 28, 44, 45, 44, 
	45, 28, 46, 46, 28, 47, 47, 28, 
	48, 48, 28, 49, 50, 51, 52, 53, 
	54, 55, 28, 56, 57, 58, 59, 56, 
	57, 58, 59, 28, 61, 61, 62, 62, 
	62, 60, 63, 63, 64, 0, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 82, 83, 85, 
	86, 87, 88, 89, 90, 91, 92, 93, 
	94, 95, 93, 96, 97, 98, 99, 65, 
	100, 101, 102, 103, 104, 105, 106, 107, 
	108, 109, 110, 112, 113, 114, 115, 116, 
	117, 118, 119, 120, 121, 122, 123, 111, 
	101, 102, 103, 104, 105, 106, 107, 108, 
	109, 110, 112, 113, 114, 115, 116, 117, 
	118, 119, 120, 121, 122, 123, 124, 125, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	134, 136, 137, 138, 139, 140, 141, 142, 
	143, 144, 145, 146, 147, 135, 125, 126, 
	127, 128, 129, 130, 131, 132, 133, 134, 
	136, 137, 138, 139, 140, 141, 142, 143, 
	144, 145, 146, 147, 65, 84, 111, 111, 
	135, 135, 81, 149, 148, 150, 150, 150, 
	0, 151, 152, 0, 152, 153, 155, 154, 
	4, 4, 5, 6, 7, 8, 9, 10, 
	5, 6, 7, 8, 9, 10, 156, 158, 
	157, 160, 25, 161, 160, 25, 161, 83, 
	84, 24, 24, 159, 162, 25, 162, 25, 
	83, 84, 24, 24, 159, 25, 25, 84, 
	24, 24, 159, 25, 25, 24, 24, 24, 
	163, 25, 25, 164, 24, 24, 24, 0, 
	27, 27, 27, 165, 166, 86, 168, 169, 
	170, 167, 172, 171, 174, 175, 173, 177, 
	176, 179, 180, 181, 182, 183, 184, 185, 
	111, 181, 182, 183, 184, 185, 111, 111, 
	111, 178, 111, 111, 111, 111, 0, 187, 
	111, 111, 111, 111, 186, 188, 189, 111, 
	188, 189, 111, 111, 111, 186, 191, 111, 
	111, 111, 111, 190, 192, 193, 111, 192, 
	193, 111, 111, 111, 186, 194, 111, 194, 
	111, 111, 111, 186, 195, 111, 195, 111, 
	111, 111, 186, 196, 111, 196, 111, 111, 
	111, 186, 197, 111, 197, 111, 111, 111, 
	186, 198, 111, 198, 111, 111, 111, 186, 
	199, 111, 199, 111, 111, 111, 186, 200, 
	111, 200, 111, 111, 111, 186, 202, 203, 
	204, 205, 111, 203, 204, 205, 111, 111, 
	111, 201, 207, 111, 111, 111, 111, 206, 
	208, 209, 111, 208, 209, 111, 111, 111, 
	186, 210, 111, 210, 111, 111, 111, 186, 
	211, 111, 211, 111, 111, 111, 186, 212, 
	111, 212, 111, 111, 111, 186, 213, 111, 
	213, 111, 111, 111, 186, 214, 111, 214, 
	111, 111, 111, 186, 216, 217, 218, 219, 
	220, 221, 217, 218, 219, 220, 111, 111, 
	111, 215, 222, 111, 222, 111, 111, 111, 
	186, 223, 111, 223, 111, 111, 111, 186, 
	225, 111, 111, 111, 224, 226, 227, 111, 
	226, 227, 111, 111, 111, 186, 228, 111, 
	228, 111, 111, 111, 186, 229, 111, 229, 
	111, 111, 111, 186, 230, 111, 230, 111, 
	111, 111, 186, 231, 111, 231, 111, 111, 
	111, 186, 233, 111, 111, 111, 111, 232, 
	235, 236, 237, 111, 235, 236, 237, 111, 
	111, 111, 234, 239, 111, 239, 111, 111, 
	111, 238, 241, 111, 241, 111, 111, 111, 
	240, 242, 111, 111, 111, 111, 186, 243, 
	111, 243, 111, 111, 111, 186, 244, 111, 
	244, 111, 111, 111, 186, 245, 111, 245, 
	111, 111, 111, 186, 246, 111, 246, 111, 
	111, 111, 186, 248, 249, 250, 251, 252, 
	253, 254, 111, 249, 250, 251, 252, 253, 
	254, 111, 111, 111, 247, 255, 111, 255, 
	111, 111, 111, 186, 257, 258, 259, 260, 
	261, 111, 258, 259, 260, 261, 111, 111, 
	111, 256, 262, 263, 264, 265, 266, 267, 
	268, 269, 270, 111, 262, 263, 264, 265, 
	266, 267, 268, 269, 270, 111, 111, 111, 
	186, 271, 111, 271, 111, 111, 111, 186, 
	272, 111, 272, 111, 111, 111, 186, 273, 
	111, 273, 111, 111, 111, 186, 274, 111, 
	274, 111, 111, 111, 186, 275, 111, 275, 
	111, 111, 111, 186, 276, 111, 276, 111, 
	111, 111, 186, 277, 111, 277, 111, 111, 
	111, 186, 278, 111, 278, 111, 111, 111, 
	186, 279, 111, 279, 111, 111, 111, 186, 
	280, 111, 280, 111, 111, 111, 186, 281, 
	111, 281, 111, 111, 111, 186, 282, 111, 
	282, 111, 111, 111, 186, 283, 111, 283, 
	111, 111, 111, 186, 284, 111, 284, 111, 
	111, 111, 186, 285, 111, 285, 111, 111, 
	111, 186, 286, 111, 286, 111, 111, 111, 
	186, 287, 111, 287, 111, 111, 111, 186, 
	288, 111, 111, 111, 111, 186, 289, 111, 
	111, 111, 111, 186, 291, 292, 293, 294, 
	295, 111, 292, 293, 294, 295, 111, 111, 
	111, 290, 297, 111, 297, 111, 111, 111, 
	296, 298, 111, 298, 111, 111, 111, 186, 
	299, 111, 299, 111, 111, 111, 186, 300, 
	111, 300, 111, 111, 111, 186, 301, 111, 
	301, 111, 111, 111, 186, 302, 111, 302, 
	111, 111, 111, 186, 304, 305, 111, 304, 
	305, 111, 111, 111, 303, 306, 111, 306, 
	111, 111, 111, 186, 307, 111, 307, 111, 
	111, 111, 186, 308, 111, 308, 111, 111, 
	111, 186, 310, 311, 312, 111, 311, 312, 
	111, 111, 111, 309, 313, 111, 313, 111, 
	111, 111, 186, 314, 111, 314, 111, 111, 
	111, 186, 316, 111, 316, 111, 111, 111, 
	315, 317, 111, 317, 111, 111, 111, 186, 
	318, 111, 318, 111, 111, 111, 186, 319, 
	111, 319, 111, 111, 111, 186, 320, 111, 
	320, 111, 111, 111, 186, 321, 111, 321, 
	111, 111, 111, 186, 322, 111, 322, 111, 
	111, 111, 186, 323, 111, 323, 111, 111, 
	111, 186, 325, 326, 327, 111, 326, 327, 
	111, 111, 111, 324, 328, 111, 328, 111, 
	111, 111, 186, 329, 111, 329, 111, 111, 
	111, 186, 331, 111, 111, 111, 111, 330, 
	333, 334, 335, 336, 337, 338, 339, 340, 
	341, 111, 333, 334, 335, 336, 337, 338, 
	339, 340, 341, 111, 111, 111, 332, 342, 
	111, 342, 111, 111, 111, 186, 343, 111, 
	343, 111, 111, 111, 186, 345, 346, 111, 
	345, 346, 111, 111, 111, 344, 347, 111, 
	347, 111, 111, 111, 186, 348, 111, 348, 
	111, 111, 111, 186, 349, 111, 349, 111, 
	111, 111, 186, 350, 111, 350, 111, 111, 
	111, 186, 351, 111, 351, 111, 111, 111, 
	186, 352, 111, 352, 111, 111, 111, 186, 
	354, 355, 356, 357, 358, 111, 355, 356, 
	357, 358, 111, 111, 111, 353, 360, 111, 
	360, 111, 111, 111, 359, 361, 111, 361, 
	111, 111, 111, 186, 362, 111, 362, 111, 
	111, 111, 186, 363, 111, 363, 111, 111, 
	111, 186, 365, 111, 365, 111, 111, 111, 
	364, 367, 111, 367, 111, 111, 111, 366, 
	368, 111, 368, 111, 111, 111, 186, 369, 
	111, 369, 111, 111, 111, 186, 370, 111, 
	370, 111, 111, 111, 186, 371, 372, 111, 
	371, 372, 111, 111, 111, 186, 374, 375, 
	111, 374, 375, 111, 111, 111, 373, 376, 
	111, 376, 111, 111, 111, 186, 377, 111, 
	377, 111, 111, 111, 186, 378, 111, 378, 
	111, 111, 111, 186, 379, 111, 379, 111, 
	111, 111, 186, 381, 382, 111, 381, 382, 
	111, 111, 111, 380, 384, 385, 111, 384, 
	385, 111, 111, 111, 383, 386, 387, 111, 
	386, 387, 111, 111, 111, 186, 389, 390, 
	391, 392, 393, 394, 111, 390, 391, 392, 
	393, 394, 111, 111, 111, 388, 396, 397, 
	398, 399, 111, 396, 397, 398, 399, 111, 
	111, 111, 395, 401, 402, 403, 111, 401, 
	402, 403, 111, 111, 111, 400, 405, 111, 
	405, 111, 111, 111, 404, 406, 111, 406, 
	111, 111, 111, 186, 408, 409, 410, 111, 
	408, 409, 410, 111, 111, 111, 407, 412, 
	413, 111, 412, 413, 111, 111, 111, 411, 
	414, 111, 414, 111, 111, 111, 186, 415, 
	111, 415, 111, 111, 111, 186, 416, 111, 
	416, 111, 111, 111, 186, 417, 111, 417, 
	111, 111, 111, 186, 418, 111, 418, 111, 
	111, 111, 186, 420, 111, 420, 111, 111, 
	111, 419, 421, 111, 421, 111, 111, 111, 
	186, 422, 111, 422, 111, 111, 111, 186, 
	423, 111, 423, 111, 111, 111, 186, 424, 
	425, 111, 424, 425, 111, 111, 111, 186, 
	426, 111, 426, 111, 111, 111, 186, 427, 
	428, 429, 111, 427, 428, 429, 111, 111, 
	111, 186, 430, 431, 111, 430, 431, 111, 
	111, 111, 186, 432, 111, 432, 111, 111, 
	111, 186, 433, 434, 111, 433, 434, 111, 
	111, 111, 186, 435, 111, 435, 111, 111, 
	111, 186, 436, 111, 436, 111, 111, 111, 
	186, 437, 438, 111, 437, 438, 111, 111, 
	111, 186, 439, 111, 439, 111, 111, 111, 
	186, 441, 442, 443, 444, 445, 111, 441, 
	442, 443, 444, 445, 111, 111, 111, 440, 
	446, 111, 446, 111, 111, 111, 186, 447, 
	111, 447, 111, 111, 111, 186, 448, 111, 
	448, 111, 111, 111, 186, 449, 111, 449, 
	111, 111, 111, 186, 450, 111, 450, 111, 
	111, 111, 186, 451, 111, 451, 111, 111, 
	111, 186, 453, 454, 455, 456, 457, 458, 
	459, 460, 111, 111, 111, 111, 452, 461, 
	111, 461, 111, 111, 111, 186, 462, 111, 
	462, 111, 111, 111, 186, 463, 111, 463, 
	111, 111, 111, 186, 464, 111, 464, 111, 
	111, 111, 186, 465, 111, 465, 111, 111, 
	111, 186, 466, 467, 468, 469, 470, 111, 
	466, 467, 468, 469, 470, 111, 111, 111, 
	186, 471, 472, 111, 471, 472, 111, 111, 
	111, 186, 473, 111, 473, 111, 111, 111, 
	186, 474, 111, 474, 111, 111, 111, 186, 
	475, 111, 475, 111, 111, 111, 186, 476, 
	111, 476, 111, 111, 111, 186, 477, 111, 
	477, 111, 111, 111, 186, 478, 479, 480, 
	111, 478, 479, 480, 111, 111, 111, 186, 
	482, 111, 482, 111, 111, 111, 481, 483, 
	484, 111, 483, 484, 111, 111, 111, 186, 
	485, 486, 111, 485, 486, 111, 111, 111, 
	186, 488, 111, 488, 111, 111, 111, 487, 
	489, 490, 111, 489, 490, 111, 111, 111, 
	186, 492, 111, 492, 111, 111, 111, 491, 
	493, 111, 493, 111, 111, 111, 186, 495, 
	496, 497, 111, 496, 497, 111, 111, 111, 
	494, 499, 111, 499, 111, 111, 111, 498, 
	500, 111, 500, 111, 111, 111, 186, 502, 
	503, 504, 505, 506, 111, 502, 503, 504, 
	505, 506, 111, 111, 111, 501, 507, 111, 
	507, 111, 111, 111, 186, 508, 111, 508, 
	111, 111, 111, 186, 509, 111, 509, 111, 
	111, 111, 186, 510, 111, 510, 111, 111, 
	111, 186, 511, 111, 511, 111, 111, 111, 
	186, 512, 111, 512, 111, 111, 111, 186, 
	513, 514, 111, 513, 514, 111, 111, 111, 
	186, 515, 111, 515, 111, 111, 111, 186, 
	516, 111, 516, 111, 111, 111, 186, 518, 
	111, 518, 111, 111, 111, 517, 519, 520, 
	111, 519, 520, 111, 111, 111, 186, 521, 
	111, 521, 111, 111, 111, 186, 522, 111, 
	522, 111, 111, 111, 186, 523, 111, 523, 
	111, 111, 111, 186, 524, 111, 524, 111, 
	111, 111, 186, 526, 527, 528, 529, 530, 
	111, 526, 527, 528, 529, 530, 111, 111, 
	111, 525, 531, 111, 531, 111, 111, 111, 
	186, 532, 111, 532, 111, 111, 111, 186, 
	533, 111, 533, 111, 111, 111, 186, 534, 
	111, 534, 111, 111, 111, 186, 535, 536, 
	111, 535, 536, 111, 111, 111, 186, 538, 
	539, 111, 538, 539, 111, 111, 111, 537, 
	541, 542, 543, 111, 541, 542, 543, 111, 
	111, 111, 540, 545, 111, 111, 111, 111, 
	544, 547, 111, 547, 111, 111, 111, 546, 
	549, 111, 111, 111, 111, 548, 551, 552, 
	553, 111, 551, 552, 553, 111, 111, 111, 
	550, 555, 111, 111, 111, 111, 554, 557, 
	111, 557, 111, 111, 111, 556, 559, 111, 
	111, 111, 111, 558, 560, 111, 560, 111, 
	111, 111, 186, 561, 562, 563, 564, 565, 
	566, 567, 568, 569, 111, 561, 562, 563, 
	564, 565, 566, 567, 568, 569, 111, 111, 
	111, 186, 570, 111, 570, 111, 111, 111, 
	186, 571, 111, 571, 111, 111, 111, 186, 
	573, 111, 111, 111, 111, 572, 574, 575, 
	111, 574, 575, 111, 111, 111, 186, 576, 
	111, 576, 111, 111, 111, 186, 577, 111, 
	577, 111, 111, 111, 186, 578, 111, 578, 
	111, 111, 111, 186, 579, 111, 579, 111, 
	111, 111, 186, 581, 582, 111, 581, 582, 
	111, 111, 111, 580, 583, 111, 583, 111, 
	111, 111, 186, 584, 111, 584, 111, 111, 
	111, 186, 585, 111, 585, 111, 111, 111, 
	186, 586, 587, 588, 589, 111, 586, 587, 
	588, 589, 111, 111, 111, 186, 590, 591, 
	111, 590, 591, 111, 111, 111, 186, 593, 
	594, 111, 593, 594, 111, 111, 111, 592, 
	595, 111, 595, 111, 111, 111, 186, 596, 
	111, 596, 111, 111, 111, 186, 597, 111, 
	597, 111, 111, 111, 186, 598, 111, 598, 
	111, 111, 111, 186, 600, 111, 600, 111, 
	111, 111, 599, 601, 111, 601, 111, 111, 
	111, 186, 602, 111, 602, 111, 111, 111, 
	186, 603, 111, 603, 111, 111, 111, 186, 
	604, 111, 604, 111, 111, 111, 186, 605, 
	111, 605, 111, 111, 111, 186, 606, 111, 
	606, 111, 111, 111, 186, 607, 111, 607, 
	111, 111, 111, 186, 608, 609, 111, 608, 
	609, 111, 111, 111, 186, 610, 111, 610, 
	111, 111, 111, 186, 611, 111, 611, 111, 
	111, 111, 186, 612, 111, 612, 111, 111, 
	111, 186, 614, 111, 614, 111, 111, 111, 
	613, 615, 111, 615, 111, 111, 111, 186, 
	616, 617, 111, 616, 617, 111, 111, 111, 
	186, 618, 619, 111, 618, 619, 111, 111, 
	111, 186, 620, 111, 620, 111, 111, 111, 
	186, 621, 111, 621, 111, 111, 111, 186, 
	622, 111, 622, 111, 111, 111, 186, 623, 
	111, 623, 111, 111, 111, 186, 624, 111, 
	624, 111, 111, 111, 186, 625, 111, 625, 
	111, 111, 111, 186, 627, 628, 629, 630, 
	631, 111, 627, 628, 629, 630, 631, 111, 
	111, 111, 626, 632, 111, 632, 111, 111, 
	111, 186, 633, 111, 633, 111, 111, 111, 
	186, 634, 111, 634, 111, 111, 111, 186, 
	635, 111, 635, 111, 111, 111, 186, 636, 
	111, 636, 111, 111, 111, 186, 637, 111, 
	637, 111, 111, 111, 186, 638, 111, 638, 
	111, 111, 111, 186, 639, 111, 639, 111, 
	111, 111, 186, 61, 61, 62, 62, 62, 
	640, 62, 62, 62, 62, 641, 179, 180, 
	181, 182, 183, 184, 185, 111, 181, 182, 
	183, 184, 185, 63, 63, 642, 64, 643, 
	644, 645, 646, 647, 135, 643, 644, 645, 
	646, 647, 111, 111, 111, 135, 135, 135, 
	178, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 0, 187, 111, 63, 
	63, 648, 64, 135, 111, 111, 111, 135, 
	135, 135, 186, 188, 189, 111, 188, 189, 
	63, 63, 64, 649, 650, 135, 649, 650, 
	111, 111, 111, 135, 135, 135, 186, 191, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 190, 192, 193, 111, 192, 
	193, 63, 63, 64, 651, 652, 135, 651, 
	652, 111, 111, 111, 135, 135, 135, 186, 
	194, 111, 194, 63, 63, 64, 653, 135, 
	653, 111, 111, 111, 135, 135, 135, 186, 
	195, 111, 195, 63, 63, 64, 654, 135, 
	654, 111, 111, 111, 135, 135, 135, 186, 
	196, 111, 196, 63, 63, 64, 655, 135, 
	655, 111, 111, 111, 135, 135, 135, 186, 
	197, 111, 197, 63, 63, 64, 656, 135, 
	656, 111, 111, 111, 135, 135, 135, 186, 
	198, 111, 198, 63, 63, 64, 657, 135, 
	657, 111, 111, 111, 135, 135, 135, 186, 
	199, 111, 199, 63, 63, 64, 658, 135, 
	658, 111, 111, 111, 135, 135, 135, 186, 
	200, 111, 200, 63, 63, 64, 659, 135, 
	659, 111, 111, 111, 135, 135, 135, 186, 
	202, 203, 204, 205, 111, 203, 204, 205, 
	63, 63, 64, 660, 661, 662, 135, 660, 
	661, 662, 111, 111, 111, 135, 135, 135, 
	201, 207, 111, 63, 63, 64, 135, 111, 
	111, 111, 135, 135, 135, 206, 208, 209, 
	111, 208, 209, 63, 63, 64, 663, 664, 
	135, 663, 664, 111, 111, 111, 135, 135, 
	135, 186, 210, 111, 210, 63, 63, 64, 
	665, 135, 665, 111, 111, 111, 135, 135, 
	135, 186, 211, 111, 211, 63, 63, 64, 
	666, 135, 666, 111, 111, 111, 135, 135, 
	135, 186, 212, 111, 212, 63, 63, 64, 
	667, 135, 667, 111, 111, 111, 135, 135, 
	135, 186, 213, 111, 213, 63, 63, 64, 
	668, 135, 668, 111, 111, 111, 135, 135, 
	135, 186, 214, 111, 214, 63, 63, 64, 
	669, 135, 669, 111, 111, 111, 135, 135, 
	135, 186, 216, 217, 218, 219, 220, 221, 
	217, 218, 219, 220, 63, 63, 64, 670, 
	671, 672, 673, 674, 670, 671, 672, 673, 
	111, 111, 111, 135, 135, 135, 215, 222, 
	111, 222, 63, 63, 64, 675, 135, 675, 
	111, 111, 111, 135, 135, 135, 186, 223, 
	111, 223, 63, 63, 64, 676, 135, 676, 
	111, 111, 111, 135, 135, 135, 186, 225, 
	63, 63, 64, 677, 111, 111, 111, 135, 
	135, 135, 224, 226, 227, 111, 226, 227, 
	63, 63, 64, 678, 679, 135, 678, 679, 
	111, 111, 111, 135, 135, 135, 186, 228, 
	111, 228, 63, 63, 64, 680, 135, 680, 
	111, 111, 111, 135, 135, 135, 186, 229, 
	111, 229, 63, 63, 64, 681, 135, 681, 
	111, 111, 111, 135, 135, 135, 186, 230, 
	111, 230, 63, 63, 64, 682, 135, 682, 
	111, 111, 111, 135, 135, 135, 186, 231, 
	111, 231, 63, 63, 64, 683, 135, 683, 
	111, 111, 111, 135, 135, 135, 186, 233, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 232, 235, 236, 237, 111, 
	235, 236, 237, 63, 63, 64, 684, 685, 
	686, 135, 684, 685, 686, 111, 111, 111, 
	135, 135, 135, 234, 239, 111, 239, 63, 
	63, 64, 687, 135, 687, 111, 111, 111, 
	135, 135, 135, 238, 241, 111, 241, 63, 
	63, 64, 688, 135, 688, 111, 111, 111, 
	135, 135, 135, 240, 242, 111, 63, 63, 
	64, 135, 111, 111, 111, 135, 135, 135, 
	186, 243, 111, 243, 63, 63, 64, 689, 
	135, 689, 111, 111, 111, 135, 135, 135, 
	186, 244, 111, 244, 63, 63, 64, 690, 
	135, 690, 111, 111, 111, 135, 135, 135, 
	186, 245, 111, 245, 63, 63, 64, 691, 
	135, 691, 111, 111, 111, 135, 135, 135, 
	186, 246, 111, 246, 63, 63, 64, 692, 
	135, 692, 111, 111, 111, 135, 135, 135, 
	186, 248, 249, 250, 251, 252, 253, 254, 
	111, 249, 250, 251, 252, 253, 254, 63, 
	63, 64, 693, 694, 695, 696, 697, 698, 
	135, 693, 694, 695, 696, 697, 698, 111, 
	111, 111, 135, 135, 135, 247, 255, 111, 
	255, 63, 63, 64, 699, 135, 699, 111, 
	111, 111, 135, 135, 135, 186, 257, 258, 
	259, 260, 261, 111, 258, 259, 260, 261, 
	63, 63, 64, 700, 701, 702, 703, 135, 
	700, 701, 702, 703, 111, 111, 111, 135, 
	135, 135, 256, 262, 263, 264, 265, 266, 
	267, 268, 269, 270, 111, 262, 263, 264, 
	265, 266, 267, 268, 269, 270, 63, 63, 
	64, 704, 705, 706, 707, 708, 709, 710, 
	711, 712, 135, 704, 705, 706, 707, 708, 
	709, 710, 711, 712, 111, 111, 111, 135, 
	135, 135, 186, 271, 111, 271, 63, 63, 
	64, 713, 135, 713, 111, 111, 111, 135, 
	135, 135, 186, 272, 111, 272, 63, 63, 
	64, 714, 135, 714, 111, 111, 111, 135, 
	135, 135, 186, 273, 111, 273, 63, 63, 
	64, 715, 135, 715, 111, 111, 111, 135, 
	135, 135, 186, 274, 111, 274, 63, 63, 
	64, 716, 135, 716, 111, 111, 111, 135, 
	135, 135, 186, 275, 111, 275, 63, 63, 
	64, 717, 135, 717, 111, 111, 111, 135, 
	135, 135, 186, 276, 111, 276, 63, 63, 
	64, 718, 135, 718, 111, 111, 111, 135, 
	135, 135, 186, 277, 111, 277, 63, 63, 
	64, 719, 135, 719, 111, 111, 111, 135, 
	135, 135, 186, 278, 111, 278, 63, 63, 
	64, 720, 135, 720, 111, 111, 111, 135, 
	135, 135, 186, 279, 111, 279, 63, 63, 
	64, 721, 135, 721, 111, 111, 111, 135, 
	135, 135, 186, 280, 111, 280, 63, 63, 
	64, 722, 135, 722, 111, 111, 111, 135, 
	135, 135, 186, 281, 111, 281, 63, 63, 
	64, 723, 135, 723, 111, 111, 111, 135, 
	135, 135, 186, 282, 111, 282, 63, 63, 
	64, 724, 135, 724, 111, 111, 111, 135, 
	135, 135, 186, 283, 111, 283, 63, 63, 
	64, 725, 135, 725, 111, 111, 111, 135, 
	135, 135, 186, 284, 111, 284, 63, 63, 
	64, 726, 135, 726, 111, 111, 111, 135, 
	135, 135, 186, 285, 111, 285, 63, 63, 
	64, 727, 135, 727, 111, 111, 111, 135, 
	135, 135, 186, 286, 111, 286, 63, 63, 
	64, 728, 135, 728, 111, 111, 111, 135, 
	135, 135, 186, 287, 111, 287, 63, 63, 
	64, 729, 135, 729, 111, 111, 111, 135, 
	135, 135, 186, 288, 111, 63, 63, 64, 
	135, 111, 111, 111, 135, 135, 135, 186, 
	289, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 186, 291, 292, 293, 
	294, 295, 111, 292, 293, 294, 295, 63, 
	63, 64, 730, 731, 732, 733, 135, 730, 
	731, 732, 733, 111, 111, 111, 135, 135, 
	135, 290, 297, 111, 297, 63, 63, 64, 
	734, 135, 734, 111, 111, 111, 135, 135, 
	135, 296, 298, 111, 298, 63, 63, 64, 
	735, 135, 735, 111, 111, 111, 135, 135, 
	135, 186, 299, 111, 299, 63, 63, 64, 
	736, 135, 736, 111, 111, 111, 135, 135, 
	135, 186, 300, 111, 300, 63, 63, 64, 
	737, 135, 737, 111, 111, 111, 135, 135, 
	135, 186, 301, 111, 301, 63, 63, 64, 
	738, 135, 738, 111, 111, 111, 135, 135, 
	135, 186, 302, 111, 302, 63, 63, 64, 
	739, 135, 739, 111, 111, 111, 135, 135, 
	135, 186, 304, 305, 111, 304, 305, 63, 
	63, 64, 740, 741, 135, 740, 741, 111, 
	111, 111, 135, 135, 135, 303, 306, 111, 
	306, 63, 63, 64, 742, 135, 742, 111, 
	111, 111, 135, 135, 135, 186, 307, 111, 
	307, 63, 63, 64, 743, 135, 743, 111, 
	111, 111, 135, 135, 135, 186, 308, 111, 
	308, 63, 63, 64, 744, 135, 744, 111, 
	111, 111, 135, 135, 135, 186, 310, 311, 
	312, 111, 311, 312, 63, 63, 64, 745, 
	746, 135, 745, 746, 111, 111, 111, 135, 
	135, 135, 309, 313, 111, 313, 63, 63, 
	64, 747, 135, 747, 111, 111, 111, 135, 
	135, 135, 186, 314, 111, 314, 63, 63, 
	64, 748, 135, 748, 111, 111, 111, 135, 
	135, 135, 186, 316, 111, 316, 63, 63, 
	64, 749, 135, 749, 111, 111, 111, 135, 
	135, 135, 315, 317, 111, 317, 63, 63, 
	64, 750, 135, 750, 111, 111, 111, 135, 
	135, 135, 186, 318, 111, 318, 63, 63, 
	64, 751, 135, 751, 111, 111, 111, 135, 
	135, 135, 186, 319, 111, 319, 63, 63, 
	64, 752, 135, 752, 111, 111, 111, 135, 
	135, 135, 186, 320, 111, 320, 63, 63, 
	64, 753, 135, 753, 111, 111, 111, 135, 
	135, 135, 186, 321, 111, 321, 63, 63, 
	64, 754, 135, 754, 111, 111, 111, 135, 
	135, 135, 186, 322, 111, 322, 63, 63, 
	64, 755, 135, 755, 111, 111, 111, 135, 
	135, 135, 186, 323, 111, 323, 63, 63, 
	64, 756, 135, 756, 111, 111, 111, 135, 
	135, 135, 186, 325, 326, 327, 111, 326, 
	327, 63, 63, 64, 757, 758, 135, 757, 
	758, 111, 111, 111, 135, 135, 135, 324, 
	328, 111, 328, 63, 63, 64, 759, 135, 
	759, 111, 111, 111, 135, 135, 135, 186, 
	329, 111, 329, 63, 63, 64, 760, 135, 
	760, 111, 111, 111, 135, 135, 135, 186, 
	331, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 330, 333, 334, 335, 
	336, 337, 338, 339, 340, 341, 111, 333, 
	334, 335, 336, 337, 338, 339, 340, 341, 
	63, 63, 64, 761, 762, 763, 764, 765, 
	766, 767, 768, 769, 135, 761, 762, 763, 
	764, 765, 766, 767, 768, 769, 111, 111, 
	111, 135, 135, 135, 332, 342, 111, 342, 
	63, 63, 64, 770, 135, 770, 111, 111, 
	111, 135, 135, 135, 186, 343, 111, 343, 
	63, 63, 64, 771, 135, 771, 111, 111, 
	111, 135, 135, 135, 186, 345, 346, 111, 
	345, 346, 63, 63, 64, 772, 773, 135, 
	772, 773, 111, 111, 111, 135, 135, 135, 
	344, 347, 111, 347, 63, 63, 64, 774, 
	135, 774, 111, 111, 111, 135, 135, 135, 
	186, 348, 111, 348, 63, 63, 64, 775, 
	135, 775, 111, 111, 111, 135, 135, 135, 
	186, 349, 111, 349, 63, 63, 64, 776, 
	135, 776, 111, 111, 111, 135, 135, 135, 
	186, 350, 111, 350, 63, 63, 64, 777, 
	135, 777, 111, 111, 111, 135, 135, 135, 
	186, 351, 111, 351, 63, 63, 64, 778, 
	135, 778, 111, 111, 111, 135, 135, 135, 
	186, 352, 111, 352, 63, 63, 64, 779, 
	135, 779, 111, 111, 111, 135, 135, 135, 
	186, 354, 355, 356, 357, 358, 111, 355, 
	356, 357, 358, 63, 63, 780, 64, 781, 
	782, 783, 784, 135, 781, 782, 783, 784, 
	111, 111, 111, 135, 135, 135, 353, 360, 
	111, 360, 63, 63, 64, 785, 135, 785, 
	111, 111, 111, 135, 135, 135, 359, 361, 
	111, 361, 63, 63, 64, 786, 135, 786, 
	111, 111, 111, 135, 135, 135, 186, 362, 
	111, 362, 63, 63, 64, 787, 135, 787, 
	111, 111, 111, 135, 135, 135, 186, 363, 
	111, 363, 63, 63, 64, 788, 135, 788, 
	111, 111, 111, 135, 135, 135, 186, 365, 
	111, 365, 63, 63, 64, 789, 135, 789, 
	111, 111, 111, 135, 135, 135, 364, 367, 
	111, 367, 63, 63, 64, 790, 135, 790, 
	111, 111, 111, 135, 135, 135, 366, 368, 
	111, 368, 63, 63, 64, 791, 135, 791, 
	111, 111, 111, 135, 135, 135, 186, 369, 
	111, 369, 63, 63, 64, 792, 135, 792, 
	111, 111, 111, 135, 135, 135, 186, 370, 
	111, 370, 63, 63, 64, 793, 135, 793, 
	111, 111, 111, 135, 135, 135, 186, 371, 
	372, 111, 371, 372, 63, 63, 64, 794, 
	795, 135, 794, 795, 111, 111, 111, 135, 
	135, 135, 186, 374, 375, 111, 374, 375, 
	63, 63, 64, 796, 797, 135, 796, 797, 
	111, 111, 111, 135, 135, 135, 373, 376, 
	111, 376, 63, 63, 64, 798, 135, 798, 
	111, 111, 111, 135, 135, 135, 186, 377, 
	111, 377, 63, 63, 64, 799, 135, 799, 
	111, 111, 111, 135, 135, 135, 186, 378, 
	111, 378, 63, 63, 64, 800, 135, 800, 
	111, 111, 111, 135, 135, 135, 186, 379, 
	111, 379, 63, 63, 64, 801, 135, 801, 
	111, 111, 111, 135, 135, 135, 186, 381, 
	382, 111, 381, 382, 63, 63, 64, 802, 
	803, 135, 802, 803, 111, 111, 111, 135, 
	135, 135, 380, 384, 385, 111, 384, 385, 
	63, 63, 64, 804, 805, 135, 804, 805, 
	111, 111, 111, 135, 135, 135, 383, 386, 
	387, 111, 386, 387, 63, 63, 64, 806, 
	807, 135, 806, 807, 111, 111, 111, 135, 
	135, 135, 186, 389, 390, 391, 392, 393, 
	394, 111, 390, 391, 392, 393, 394, 63, 
	63, 64, 808, 809, 810, 811, 812, 135, 
	808, 809, 810, 811, 812, 111, 111, 111, 
	135, 135, 135, 388, 396, 397, 398, 399, 
	111, 396, 397, 398, 399, 63, 63, 64, 
	813, 814, 815, 816, 135, 813, 814, 815, 
	816, 111, 111, 111, 135, 135, 135, 395, 
	401, 402, 403, 111, 401, 402, 403, 63, 
	63, 64, 817, 818, 819, 135, 817, 818, 
	819, 111, 111, 111, 135, 135, 135, 400, 
	405, 111, 405, 63, 63, 64, 820, 135, 
	820, 111, 111, 111, 135, 135, 135, 404, 
	406, 111, 406, 63, 63, 64, 821, 135, 
	821, 111, 111, 111, 135, 135, 135, 186, 
	408, 409, 410, 111, 408, 409, 410, 63, 
	63, 64, 822, 823, 824, 135, 822, 823, 
	824, 111, 111, 111, 135, 135, 135, 407, 
	412, 413, 111, 412, 413, 63, 63, 64, 
	825, 826, 135, 825, 826, 111, 111, 111, 
	135, 135, 135, 411, 414, 111, 414, 63, 
	63, 64, 827, 135, 827, 111, 111, 111, 
	135, 135, 135, 186, 415, 111, 415, 63, 
	63, 64, 828, 135, 828, 111, 111, 111, 
	135, 135, 135, 186, 416, 111, 416, 63, 
	63, 64, 829, 135, 829, 111, 111, 111, 
	135, 135, 135, 186, 417, 111, 417, 63, 
	63, 64, 830, 135, 830, 111, 111, 111, 
	135, 135, 135, 186, 418, 111, 418, 63, 
	63, 64, 831, 135, 831, 111, 111, 111, 
	135, 135, 135, 186, 420, 111, 420, 63, 
	63, 64, 832, 135, 832, 111, 111, 111, 
	135, 135, 135, 419, 421, 111, 421, 63, 
	63, 64, 833, 135, 833, 111, 111, 111, 
	135, 135, 135, 186, 422, 111, 422, 63, 
	63, 64, 834, 135, 834, 111, 111, 111, 
	135, 135, 135, 186, 423, 111, 423, 63, 
	63, 64, 835, 135, 835, 111, 111, 111, 
	135, 135, 135, 186, 424, 425, 111, 424, 
	425, 63, 63, 64, 836, 837, 135, 836, 
	837, 111, 111, 111, 135, 135, 135, 186, 
	426, 111, 426, 63, 63, 64, 838, 135, 
	838, 111, 111, 111, 135, 135, 135, 186, 
	427, 428, 429, 111, 427, 428, 429, 63, 
	63, 64, 839, 840, 841, 135, 839, 840, 
	841, 111, 111, 111, 135, 135, 135, 186, 
	430, 431, 111, 430, 431, 63, 63, 64, 
	842, 843, 135, 842, 843, 111, 111, 111, 
	135, 135, 135, 186, 432, 111, 432, 63, 
	63, 64, 844, 135, 844, 111, 111, 111, 
	135, 135, 135, 186, 433, 434, 111, 433, 
	434, 63, 63, 64, 845, 846, 135, 845, 
	846, 111, 111, 111, 135, 135, 135, 186, 
	435, 111, 435, 63, 63, 64, 847, 135, 
	847, 111, 111, 111, 135, 135, 135, 186, 
	436, 111, 436, 63, 63, 64, 848, 135, 
	848, 111, 111, 111, 135, 135, 135, 186, 
	437, 438, 111, 437, 438, 63, 63, 64, 
	849, 850, 135, 849, 850, 111, 111, 111, 
	135, 135, 135, 186, 439, 111, 439, 63, 
	63, 64, 851, 135, 851, 111, 111, 111, 
	135, 135, 135, 186, 441, 442, 443, 444, 
	445, 111, 441, 442, 443, 444, 445, 63, 
	63, 64, 852, 853, 854, 855, 856, 135, 
	852, 853, 854, 855, 856, 111, 111, 111, 
	135, 135, 135, 440, 446, 111, 446, 63, 
	63, 64, 857, 135, 857, 111, 111, 111, 
	135, 135, 135, 186, 447, 111, 447, 63, 
	63, 64, 858, 135, 858, 111, 111, 111, 
	135, 135, 135, 186, 448, 111, 448, 63, 
	63, 64, 859, 135, 859, 111, 111, 111, 
	135, 135, 135, 186, 449, 111, 449, 63, 
	63, 64, 860, 135, 860, 111, 111, 111, 
	135, 135, 135, 186, 450, 111, 450, 63, 
	63, 64, 861, 135, 861, 111, 111, 111, 
	135, 135, 135, 186, 451, 111, 451, 63, 
	63, 64, 862, 135, 862, 111, 111, 111, 
	135, 135, 135, 186, 453, 454, 455, 456, 
	457, 458, 459, 460, 111, 63, 63, 863, 
	864, 865, 866, 867, 868, 869, 870, 64, 
	135, 111, 111, 111, 135, 135, 135, 452, 
	461, 111, 461, 63, 63, 64, 871, 135, 
	871, 111, 111, 111, 135, 135, 135, 186, 
	462, 111, 462, 63, 63, 64, 872, 135, 
	872, 111, 111, 111, 135, 135, 135, 186, 
	463, 111, 463, 63, 63, 64, 873, 135, 
	873, 111, 111, 111, 135, 135, 135, 186, 
	464, 111, 464, 63, 63, 64, 874, 135, 
	874, 111, 111, 111, 135, 135, 135, 186, 
	465, 111, 465, 63, 63, 64, 875, 135, 
	875, 111, 111, 111, 135, 135, 135, 186, 
	466, 467, 468, 469, 470, 111, 466, 467, 
	468, 469, 470, 63, 63, 64, 876, 877, 
	878, 879, 880, 135, 876, 877, 878, 879, 
	880, 111, 111, 111, 135, 135, 135, 186, 
	471, 472, 111, 471, 472, 63, 63, 64, 
	881, 882, 135, 881, 882, 111, 111, 111, 
	135, 135, 135, 186, 473, 111, 473, 63, 
	63, 64, 883, 135, 883, 111, 111, 111, 
	135, 135, 135, 186, 474, 111, 474, 63, 
	63, 64, 884, 135, 884, 111, 111, 111, 
	135, 135, 135, 186, 475, 111, 475, 63, 
	63, 64, 885, 135, 885, 111, 111, 111, 
	135, 135, 135, 186, 476, 111, 476, 63, 
	63, 64, 886, 135, 886, 111, 111, 111, 
	135, 135, 135, 186, 477, 111, 477, 63, 
	63, 64, 887, 135, 887, 111, 111, 111, 
	135, 135, 135, 186, 478, 479, 480, 111, 
	478, 479, 480, 63, 63, 64, 888, 889, 
	890, 135, 888, 889, 890, 111, 111, 111, 
	135, 135, 135, 186, 482, 111, 482, 63, 
	63, 64, 891, 135, 891, 111, 111, 111, 
	135, 135, 135, 481, 483, 484, 111, 483, 
	484, 63, 63, 64, 892, 893, 135, 892, 
	893, 111, 111, 111, 135, 135, 135, 186, 
	485, 486, 111, 485, 486, 63, 63, 64, 
	894, 895, 135, 894, 895, 111, 111, 111, 
	135, 135, 135, 186, 488, 111, 488, 63, 
	63, 64, 896, 135, 896, 111, 111, 111, 
	135, 135, 135, 487, 489, 490, 111, 489, 
	490, 63, 63, 64, 897, 898, 135, 897, 
	898, 111, 111, 111, 135, 135, 135, 186, 
	492, 111, 492, 63, 63, 64, 899, 135, 
	899, 111, 111, 111, 135, 135, 135, 491, 
	493, 111, 493, 63, 63, 64, 900, 135, 
	900, 111, 111, 111, 135, 135, 135, 186, 
	495, 496, 497, 111, 496, 497, 63, 63, 
	901, 64, 902, 903, 135, 902, 903, 111, 
	111, 111, 135, 135, 135, 494, 499, 111, 
	499, 63, 63, 64, 904, 135, 904, 111, 
	111, 111, 135, 135, 135, 498, 500, 111, 
	500, 63, 63, 64, 905, 135, 905, 111, 
	111, 111, 135, 135, 135, 186, 502, 503, 
	504, 505, 506, 111, 502, 503, 504, 505, 
	506, 63, 63, 64, 906, 907, 908, 909, 
	910, 135, 906, 907, 908, 909, 910, 111, 
	111, 111, 135, 135, 135, 501, 507, 111, 
	507, 63, 63, 64, 911, 135, 911, 111, 
	111, 111, 135, 135, 135, 186, 508, 111, 
	508, 63, 63, 64, 912, 135, 912, 111, 
	111, 111, 135, 135, 135, 186, 509, 111, 
	509, 63, 63, 64, 913, 135, 913, 111, 
	111, 111, 135, 135, 135, 186, 510, 111, 
	510, 63, 63, 64, 914, 135, 914, 111, 
	111, 111, 135, 135, 135, 186, 511, 111, 
	511, 63, 63, 64, 915, 135, 915, 111, 
	111, 111, 135, 135, 135, 186, 512, 111, 
	512, 63, 63, 64, 916, 135, 916, 111, 
	111, 111, 135, 135, 135, 186, 513, 514, 
	111, 513, 514, 63, 63, 64, 917, 918, 
	135, 917, 918, 111, 111, 111, 135, 135, 
	135, 186, 515, 111, 515, 63, 63, 64, 
	919, 135, 919, 111, 111, 111, 135, 135, 
	135, 186, 516, 111, 516, 63, 63, 64, 
	920, 135, 920, 111, 111, 111, 135, 135, 
	135, 186, 518, 111, 518, 63, 63, 64, 
	921, 135, 921, 111, 111, 111, 135, 135, 
	135, 517, 519, 520, 111, 519, 520, 63, 
	63, 64, 922, 923, 135, 922, 923, 111, 
	111, 111, 135, 135, 135, 186, 521, 111, 
	521, 63, 63, 64, 924, 135, 924, 111, 
	111, 111, 135, 135, 135, 186, 522, 111, 
	522, 63, 63, 64, 925, 135, 925, 111, 
	111, 111, 135, 135, 135, 186, 523, 111, 
	523, 63, 63, 64, 926, 135, 926, 111, 
	111, 111, 135, 135, 135, 186, 524, 111, 
	524, 63, 63, 64, 927, 135, 927, 111, 
	111, 111, 135, 135, 135, 186, 526, 527, 
	528, 529, 530, 111, 526, 527, 528, 529, 
	530, 63, 63, 64, 928, 929, 930, 931, 
	932, 135, 928, 929, 930, 931, 932, 111, 
	111, 111, 135, 135, 135, 525, 531, 111, 
	531, 63, 63, 64, 933, 135, 933, 111, 
	111, 111, 135, 135, 135, 186, 532, 111, 
	532, 63, 63, 64, 934, 135, 934, 111, 
	111, 111, 135, 135, 135, 186, 533, 111, 
	533, 63, 63, 64, 935, 135, 935, 111, 
	111, 111, 135, 135, 135, 186, 534, 111, 
	534, 63, 63, 64, 936, 135, 936, 111, 
	111, 111, 135, 135, 135, 186, 535, 536, 
	111, 535, 536, 63, 63, 64, 937, 938, 
	135, 937, 938, 111, 111, 111, 135, 135, 
	135, 186, 538, 539, 111, 538, 539, 63, 
	63, 64, 939, 940, 135, 939, 940, 111, 
	111, 111, 135, 135, 135, 537, 541, 542, 
	543, 111, 541, 542, 543, 63, 63, 64, 
	941, 942, 943, 135, 941, 942, 943, 111, 
	111, 111, 135, 135, 135, 540, 545, 111, 
	63, 63, 64, 135, 111, 111, 111, 135, 
	135, 135, 544, 547, 111, 547, 63, 63, 
	64, 944, 135, 944, 111, 111, 111, 135, 
	135, 135, 546, 549, 111, 63, 63, 64, 
	135, 111, 111, 111, 135, 135, 135, 548, 
	551, 552, 553, 111, 551, 552, 553, 63, 
	63, 64, 945, 946, 947, 135, 945, 946, 
	947, 111, 111, 111, 135, 135, 135, 550, 
	555, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 554, 557, 111, 557, 
	63, 63, 64, 948, 135, 948, 111, 111, 
	111, 135, 135, 135, 556, 559, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 558, 560, 111, 560, 63, 63, 64, 
	949, 135, 949, 111, 111, 111, 135, 135, 
	135, 186, 561, 562, 563, 564, 565, 566, 
	567, 568, 569, 111, 561, 562, 563, 564, 
	565, 566, 567, 568, 569, 63, 63, 64, 
	950, 951, 952, 953, 954, 955, 956, 957, 
	958, 135, 950, 951, 952, 953, 954, 955, 
	956, 957, 958, 111, 111, 111, 135, 135, 
	135, 186, 570, 111, 570, 63, 63, 64, 
	959, 135, 959, 111, 111, 111, 135, 135, 
	135, 186, 571, 111, 571, 63, 63, 64, 
	960, 135, 960, 111, 111, 111, 135, 135, 
	135, 186, 573, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 572, 574, 
	575, 111, 574, 575, 63, 63, 64, 961, 
	962, 135, 961, 962, 111, 111, 111, 135, 
	135, 135, 186, 576, 111, 576, 63, 63, 
	64, 963, 135, 963, 111, 111, 111, 135, 
	135, 135, 186, 577, 111, 577, 63, 63, 
	64, 964, 135, 964, 111, 111, 111, 135, 
	135, 135, 186, 578, 111, 578, 63, 63, 
	64, 965, 135, 965, 111, 111, 111, 135, 
	135, 135, 186, 579, 111, 579, 63, 63, 
	64, 966, 135, 966, 111, 111, 111, 135, 
	135, 135, 186, 581, 582, 111, 581, 582, 
	63, 63, 64, 967, 968, 135, 967, 968, 
	111, 111, 111, 135, 135, 135, 580, 583, 
	111, 583, 63, 63, 64, 969, 135, 969, 
	111, 111, 111, 135, 135, 135, 186, 584, 
	111, 584, 63, 63, 64, 970, 135, 970, 
	111, 111, 111, 135, 135, 135, 186, 585, 
	111, 585, 63, 63, 64, 971, 135, 971, 
	111, 111, 111, 135, 135, 135, 186, 586, 
	587, 588, 589, 111, 586, 587, 588, 589, 
	63, 63, 64, 972, 973, 974, 975, 135, 
	972, 973, 974, 975, 111, 111, 111, 135, 
	135, 135, 186, 590, 591, 111, 590, 591, 
	63, 63, 64, 976, 977, 135, 976, 977, 
	111, 111, 111, 135, 135, 135, 186, 593, 
	594, 111, 593, 594, 63, 63, 64, 978, 
	979, 135, 978, 979, 111, 111, 111, 135, 
	135, 135, 592, 595, 111, 595, 63, 63, 
	64, 980, 135, 980, 111, 111, 111, 135, 
	135, 135, 186, 596, 111, 596, 63, 63, 
	64, 981, 135, 981, 111, 111, 111, 135, 
	135, 135, 186, 597, 111, 597, 63, 63, 
	64, 982, 135, 982, 111, 111, 111, 135, 
	135, 135, 186, 598, 111, 598, 63, 63, 
	64, 983, 135, 983, 111, 111, 111, 135, 
	135, 135, 186, 600, 111, 600, 63, 63, 
	64, 984, 135, 984, 111, 111, 111, 135, 
	135, 135, 599, 601, 111, 601, 63, 63, 
	64, 985, 135, 985, 111, 111, 111, 135, 
	135, 135, 186, 602, 111, 602, 63, 63, 
	64, 986, 135, 986, 111, 111, 111, 135, 
	135, 135, 186, 603, 111, 603, 63, 63, 
	64, 987, 135, 987, 111, 111, 111, 135, 
	135, 135, 186, 604, 111, 604, 63, 63, 
	64, 988, 135, 988, 111, 111, 111, 135, 
	135, 135, 186, 605, 111, 605, 63, 63, 
	64, 989, 135, 989, 111, 111, 111, 135, 
	135, 135, 186, 606, 111, 606, 63, 63, 
	64, 990, 135, 990, 111, 111, 111, 135, 
	135, 135, 186, 607, 111, 607, 63, 63, 
	64, 991, 135, 991, 111, 111, 111, 135, 
	135, 135, 186, 608, 609, 111, 608, 609, 
	63, 63, 64, 992, 993, 135, 992, 993, 
	111, 111, 111, 135, 135, 135, 186, 610, 
	111, 610, 63, 63, 64, 994, 135, 994, 
	111, 111, 111, 135, 135, 135, 186, 611, 
	111, 611, 63, 63, 64, 995, 135, 995, 
	111, 111, 111, 135, 135, 135, 186, 612, 
	111, 612, 63, 63, 64, 996, 135, 996, 
	111, 111, 111, 135, 135, 135, 186, 614, 
	111, 614, 63, 63, 64, 997, 135, 997, 
	111, 111, 111, 135, 135, 135, 613, 615, 
	111, 615, 63, 63, 64, 998, 135, 998, 
	111, 111, 111, 135, 135, 135, 186, 616, 
	617, 111, 616, 617, 63, 63, 64, 999, 
	1000, 135, 999, 1000, 111, 111, 111, 135, 
	135, 135, 186, 618, 619, 111, 618, 619, 
	63, 63, 64, 1001, 1002, 135, 1001, 1002, 
	111, 111, 111, 135, 135, 135, 186, 620, 
	111, 620, 63, 63, 64, 1003, 135, 1003, 
	111, 111, 111, 135, 135, 135, 186, 621, 
	111, 621, 63, 63, 64, 1004, 135, 1004, 
	111, 111, 111, 135, 135, 135, 186, 622, 
	111, 622, 63, 63, 64, 1005, 135, 1005, 
	111, 111, 111, 135, 135, 135, 186, 623, 
	111, 623, 63, 63, 64, 1006, 135, 1006, 
	111, 111, 111, 135, 135, 135, 186, 624, 
	111, 624, 63, 63, 64, 1007, 135, 1007, 
	111, 111, 111, 135, 135, 135, 186, 625, 
	111, 625, 63, 63, 64, 1008, 135, 1008, 
	111, 111, 111, 135, 135, 135, 186, 627, 
	628, 629, 630, 631, 111, 627, 628, 629, 
	630, 631, 63, 63, 64, 1009, 1010, 1011, 
	1012, 1013, 135, 1009, 1010, 1011, 1012, 1013, 
	111, 111, 111, 135, 135, 135, 626, 632, 
	111, 632, 63, 63, 64, 1014, 135, 1014, 
	111, 111, 111, 135, 135, 135, 186, 633, 
	111, 633, 63, 63, 64, 1015, 135, 1015, 
	111, 111, 111, 135, 135, 135, 186, 634, 
	111, 634, 63, 63, 64, 1016, 135, 1016, 
	111, 111, 111, 135, 135, 135, 186, 635, 
	111, 635, 63, 63, 64, 1017, 135, 1017, 
	111, 111, 111, 135, 135, 135, 186, 636, 
	111, 636, 63, 63, 64, 1018, 135, 1018, 
	111, 111, 111, 135, 135, 135, 186, 637, 
	111, 637, 63, 63, 64, 1019, 135, 1019, 
	111, 111, 111, 135, 135, 135, 186, 638, 
	111, 638, 63, 63, 64, 1020, 135, 1020, 
	111, 111, 111, 135, 135, 135, 186, 639, 
	111, 639, 63, 63, 64, 1021, 135, 1021, 
	111, 111, 111, 135, 135, 135, 186, 0
};
static const short _lexer_trans_targs[] = {
	38, 2, 38, 38, 3, 4, 6, 7, 
	9, 11, 14, 5, 38, 38, 8, 38, 
	10, 38, 12, 13, 38, 38, 15, 38, 
	16, 38, 38, 51, 38, 19, 22, 24, 
	27, 20, 21, 38, 23, 38, 25, 26, 
	38, 28, 29, 38, 31, 33, 32, 38, 
	34, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 36, 315, 37, 
	38, 38, 38, 39, 38, 38, 40, 41, 
	43, 38, 44, 38, 45, 38, 38, 38, 
	38, 0, 46, 47, 48, 38, 52, 53, 
	54, 55, 38, 41, 38, 38, 38, 38, 
	38, 56, 38, 38, 38, 57, 70, 78, 
	96, 119, 130, 136, 141, 145, 173, 58, 
	174, 200, 213, 220, 231, 247, 263, 291, 
	297, 58, 305, 58, 314, 316, 329, 337, 
	355, 378, 389, 395, 400, 404, 432, 317, 
	433, 459, 472, 479, 490, 506, 522, 550, 
	556, 317, 564, 317, 38, 38, 40, 1, 
	42, 38, 38, 38, 38, 38, 38, 38, 
	50, 17, 49, 38, 50, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 59, 60, 61, 62, 
	66, 67, 38, 58, 58, 58, 38, 38, 
	63, 65, 64, 58, 58, 58, 68, 69, 
	58, 38, 38, 71, 72, 76, 38, 38, 
	73, 58, 74, 75, 58, 77, 58, 38, 
	38, 79, 86, 88, 91, 92, 80, 81, 
	38, 82, 83, 84, 58, 85, 58, 87, 
	38, 38, 38, 89, 90, 58, 38, 58, 
	38, 58, 18, 93, 94, 95, 58, 38, 
	38, 97, 98, 58, 114, 116, 118, 58, 
	38, 38, 58, 99, 109, 110, 58, 58, 
	100, 104, 58, 58, 58, 106, 58, 101, 
	102, 103, 58, 105, 58, 107, 108, 58, 
	58, 111, 112, 113, 58, 115, 58, 117, 
	30, 35, 38, 38, 120, 121, 123, 126, 
	38, 58, 122, 58, 124, 125, 58, 38, 
	127, 58, 128, 129, 58, 38, 38, 131, 
	135, 132, 133, 38, 134, 58, 58, 137, 
	138, 139, 140, 58, 38, 38, 142, 144, 
	143, 58, 38, 38, 38, 146, 148, 154, 
	58, 155, 165, 166, 171, 172, 147, 58, 
	38, 149, 151, 150, 58, 152, 153, 58, 
	58, 38, 58, 156, 160, 161, 162, 38, 
	157, 158, 159, 58, 38, 58, 38, 58, 
	163, 164, 58, 58, 58, 38, 167, 169, 
	168, 58, 170, 58, 38, 58, 58, 38, 
	58, 58, 58, 58, 38, 38, 175, 190, 
	58, 192, 58, 38, 176, 179, 186, 189, 
	38, 177, 178, 58, 38, 58, 58, 38, 
	180, 185, 58, 38, 181, 58, 182, 183, 
	184, 58, 58, 38, 187, 188, 58, 58, 
	58, 191, 58, 193, 195, 197, 194, 58, 
	58, 196, 58, 58, 198, 199, 58, 58, 
	38, 201, 205, 206, 208, 212, 202, 203, 
	204, 58, 58, 207, 38, 58, 58, 58, 
	58, 58, 58, 58, 58, 209, 210, 211, 
	58, 58, 58, 214, 219, 58, 58, 58, 
	215, 216, 217, 218, 58, 58, 221, 222, 
	227, 38, 58, 223, 225, 224, 58, 38, 
	58, 226, 58, 38, 58, 228, 38, 58, 
	58, 229, 38, 230, 58, 38, 58, 232, 
	235, 241, 242, 233, 234, 58, 236, 237, 
	238, 239, 240, 58, 58, 38, 58, 243, 
	246, 244, 245, 58, 58, 38, 248, 252, 
	254, 258, 262, 249, 250, 251, 58, 58, 
	253, 38, 58, 58, 38, 255, 256, 58, 
	38, 38, 38, 257, 38, 38, 38, 259, 
	260, 58, 38, 38, 38, 261, 38, 38, 
	58, 264, 265, 267, 276, 58, 277, 278, 
	281, 286, 58, 266, 38, 38, 268, 272, 
	269, 270, 271, 58, 38, 273, 274, 58, 
	275, 58, 58, 58, 58, 58, 58, 58, 
	38, 58, 279, 280, 58, 282, 283, 38, 
	284, 285, 58, 287, 288, 289, 290, 58, 
	292, 294, 293, 58, 295, 38, 296, 58, 
	298, 299, 58, 58, 300, 301, 302, 303, 
	304, 58, 38, 306, 308, 310, 311, 312, 
	307, 58, 309, 58, 58, 58, 313, 58, 
	38, 38, 318, 319, 320, 321, 325, 326, 
	317, 317, 317, 322, 324, 323, 317, 317, 
	317, 327, 328, 317, 330, 331, 335, 332, 
	317, 333, 334, 317, 336, 317, 338, 345, 
	347, 350, 351, 339, 340, 341, 342, 343, 
	317, 344, 317, 346, 348, 349, 317, 317, 
	317, 352, 353, 354, 317, 356, 357, 317, 
	373, 375, 377, 317, 317, 358, 368, 369, 
	317, 317, 359, 363, 317, 317, 317, 365, 
	317, 360, 361, 362, 317, 364, 317, 366, 
	367, 317, 317, 370, 371, 372, 317, 374, 
	317, 376, 379, 380, 382, 385, 317, 381, 
	317, 383, 384, 317, 386, 317, 387, 388, 
	317, 390, 394, 391, 392, 393, 317, 317, 
	396, 397, 398, 399, 317, 401, 403, 402, 
	317, 405, 407, 413, 317, 414, 424, 425, 
	430, 431, 406, 317, 408, 410, 409, 317, 
	411, 412, 317, 317, 317, 415, 419, 420, 
	421, 416, 417, 418, 317, 317, 317, 422, 
	423, 317, 317, 317, 426, 428, 427, 317, 
	429, 317, 317, 317, 317, 317, 317, 317, 
	434, 449, 317, 451, 317, 435, 438, 445, 
	448, 436, 437, 317, 317, 317, 439, 444, 
	317, 440, 317, 441, 442, 443, 317, 317, 
	446, 447, 317, 317, 317, 450, 317, 452, 
	454, 456, 453, 317, 317, 455, 317, 317, 
	457, 458, 317, 317, 460, 464, 465, 467, 
	471, 461, 462, 463, 317, 317, 466, 317, 
	317, 317, 317, 317, 317, 317, 317, 468, 
	469, 470, 317, 317, 317, 473, 478, 317, 
	317, 317, 474, 475, 476, 477, 317, 317, 
	480, 481, 486, 317, 482, 484, 483, 317, 
	317, 485, 317, 317, 487, 317, 317, 488, 
	489, 317, 317, 491, 494, 500, 501, 492, 
	493, 317, 495, 496, 497, 498, 499, 317, 
	317, 317, 502, 505, 503, 504, 317, 317, 
	507, 511, 513, 517, 521, 508, 509, 510, 
	317, 317, 512, 317, 317, 514, 515, 317, 
	516, 518, 519, 317, 520, 317, 523, 524, 
	526, 535, 317, 536, 537, 540, 545, 317, 
	525, 527, 531, 528, 529, 530, 317, 532, 
	533, 317, 534, 317, 317, 317, 317, 317, 
	317, 317, 317, 538, 539, 317, 541, 542, 
	543, 544, 317, 546, 547, 548, 549, 317, 
	551, 553, 552, 317, 554, 555, 317, 557, 
	558, 317, 317, 559, 560, 561, 562, 563, 
	317, 565, 567, 569, 570, 571, 566, 317, 
	568, 317, 317, 317, 572, 317
};
static const short _lexer_trans_actions[] = {
	315, 0, 147, 307, 0, 0, 0, 0, 
	0, 0, 0, 0, 83, 95, 0, 85, 
	0, 91, 0, 0, 87, 89, 0, 93, 
	0, 145, 313, 0, 311, 0, 0, 0, 
	0, 0, 0, 119, 0, 123, 0, 0, 
	121, 0, 0, 117, 0, 0, 0, 139, 
	0, 125, 127, 129, 131, 133, 135, 137, 
	97, 101, 103, 99, 309, 0, 0, 0, 
	143, 141, 7, 0, 151, 9, 953, 320, 
	0, 149, 5, 13, 0, 15, 17, 19, 
	23, 0, 941, 941, 941, 25, 0, 0, 
	0, 0, 41, 953, 43, 153, 45, 47, 
	51, 0, 55, 57, 21, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 938, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 356, 0, 326, 5, 386, 359, 332, 
	362, 365, 389, 938, 368, 392, 938, 938, 
	377, 344, 938, 938, 341, 398, 938, 938, 
	938, 356, 404, 326, 155, 33, 944, 0, 
	0, 305, 157, 11, 159, 161, 49, 299, 
	947, 0, 947, 303, 950, 301, 293, 165, 
	27, 29, 31, 167, 35, 169, 39, 37, 
	171, 53, 191, 71, 0, 0, 0, 0, 
	0, 0, 295, 437, 545, 548, 211, 81, 
	0, 0, 0, 443, 863, 551, 0, 0, 
	317, 181, 59, 0, 0, 0, 201, 75, 
	0, 554, 0, 0, 446, 0, 866, 173, 
	61, 0, 0, 0, 5, 0, 0, 0, 
	219, 0, 0, 0, 926, 0, 929, 0, 
	221, 105, 223, 0, 0, 578, 225, 569, 
	227, 575, 0, 0, 0, 0, 449, 183, 
	63, 0, 0, 587, 0, 0, 5, 581, 
	203, 77, 584, 0, 0, 0, 452, 455, 
	0, 0, 464, 467, 470, 0, 476, 0, 
	0, 0, 458, 0, 461, 0, 0, 473, 
	440, 0, 0, 0, 479, 0, 590, 5, 
	0, 0, 185, 65, 0, 0, 0, 0, 
	229, 401, 0, 482, 0, 0, 485, 231, 
	0, 599, 0, 0, 488, 193, 73, 0, 
	0, 0, 0, 281, 0, 785, 932, 0, 
	0, 0, 0, 491, 187, 67, 0, 0, 
	0, 602, 205, 79, 195, 0, 0, 0, 
	605, 0, 0, 0, 0, 0, 0, 869, 
	217, 0, 0, 0, 497, 0, 0, 500, 
	395, 233, 833, 0, 0, 0, 0, 235, 
	0, 0, 0, 503, 237, 617, 239, 623, 
	0, 0, 935, 872, 875, 213, 0, 0, 
	0, 878, 0, 881, 207, 371, 380, 209, 
	374, 383, 626, 629, 189, 69, 0, 0, 
	350, 0, 347, 241, 0, 0, 0, 0, 
	243, 0, 0, 767, 245, 770, 884, 247, 
	0, 0, 761, 249, 0, 764, 0, 0, 
	0, 773, 887, 291, 0, 0, 776, 779, 
	506, 0, 509, 0, 0, 0, 0, 893, 
	899, 0, 896, 902, 0, 0, 515, 512, 
	179, 0, 0, 0, 0, 0, 0, 0, 
	0, 788, 836, 0, 283, 809, 812, 815, 
	818, 821, 824, 827, 830, 0, 0, 0, 
	518, 905, 329, 0, 0, 353, 323, 647, 
	0, 0, 0, 0, 791, 650, 0, 0, 
	0, 251, 521, 0, 0, 0, 656, 285, 
	842, 0, 659, 287, 848, 0, 253, 851, 
	665, 0, 255, 0, 758, 177, 338, 0, 
	0, 0, 0, 0, 0, 524, 0, 0, 
	0, 0, 0, 797, 794, 175, 671, 0, 
	0, 0, 0, 527, 674, 197, 0, 0, 
	0, 0, 0, 0, 0, 0, 908, 677, 
	0, 257, 683, 686, 259, 0, 0, 701, 
	261, 107, 263, 0, 265, 109, 267, 0, 
	0, 716, 269, 111, 271, 0, 273, 113, 
	719, 0, 0, 0, 0, 425, 0, 0, 
	0, 0, 722, 0, 275, 115, 0, 0, 
	0, 0, 0, 530, 277, 0, 0, 800, 
	0, 911, 731, 737, 734, 854, 740, 743, 
	215, 746, 0, 0, 914, 0, 0, 279, 
	0, 0, 752, 0, 0, 0, 0, 917, 
	0, 0, 0, 803, 0, 289, 0, 860, 
	0, 0, 920, 923, 0, 0, 0, 0, 
	0, 533, 199, 0, 0, 0, 0, 0, 
	0, 536, 0, 539, 749, 434, 0, 542, 
	163, 297, 938, 938, 422, 938, 938, 938, 
	437, 545, 548, 938, 938, 938, 443, 863, 
	551, 938, 938, 317, 407, 938, 938, 938, 
	554, 938, 938, 446, 938, 866, 938, 938, 
	563, 938, 938, 938, 557, 938, 938, 938, 
	926, 938, 929, 560, 566, 572, 578, 569, 
	575, 938, 938, 938, 449, 938, 410, 587, 
	938, 938, 938, 581, 584, 938, 938, 938, 
	452, 455, 938, 938, 464, 467, 470, 938, 
	476, 938, 938, 938, 458, 938, 461, 938, 
	938, 473, 440, 938, 938, 938, 479, 938, 
	590, 938, 593, 938, 938, 596, 401, 938, 
	482, 938, 938, 485, 938, 599, 938, 938, 
	488, 938, 938, 938, 782, 938, 785, 932, 
	938, 938, 938, 938, 491, 938, 413, 938, 
	602, 938, 494, 938, 605, 608, 938, 428, 
	416, 419, 938, 869, 938, 938, 938, 497, 
	938, 938, 500, 395, 833, 611, 614, 620, 
	938, 938, 938, 938, 503, 617, 623, 938, 
	938, 935, 872, 875, 938, 938, 938, 878, 
	938, 881, 371, 380, 374, 383, 626, 629, 
	632, 938, 350, 938, 347, 635, 641, 890, 
	938, 638, 938, 767, 770, 884, 644, 938, 
	761, 938, 764, 938, 938, 938, 773, 887, 
	938, 938, 776, 779, 506, 938, 509, 938, 
	938, 938, 938, 893, 899, 938, 896, 902, 
	938, 938, 515, 512, 938, 938, 938, 938, 
	938, 938, 938, 938, 788, 836, 806, 809, 
	812, 815, 818, 821, 824, 827, 830, 938, 
	938, 938, 518, 905, 329, 938, 938, 353, 
	323, 647, 938, 938, 938, 938, 791, 650, 
	653, 938, 938, 521, 938, 938, 839, 656, 
	842, 845, 659, 848, 662, 851, 665, 668, 
	938, 758, 338, 938, 938, 335, 938, 938, 
	938, 524, 938, 938, 938, 938, 938, 797, 
	794, 671, 938, 938, 938, 938, 527, 674, 
	938, 938, 689, 704, 938, 938, 938, 938, 
	908, 677, 680, 683, 686, 692, 695, 701, 
	698, 707, 710, 716, 713, 719, 938, 938, 
	938, 938, 425, 938, 431, 938, 938, 722, 
	725, 938, 728, 938, 938, 938, 530, 938, 
	938, 800, 938, 911, 731, 737, 734, 854, 
	740, 743, 746, 938, 938, 914, 938, 755, 
	938, 938, 752, 938, 938, 938, 938, 917, 
	938, 938, 938, 803, 857, 938, 860, 938, 
	938, 920, 923, 938, 938, 938, 938, 938, 
	533, 938, 938, 938, 938, 938, 938, 536, 
	938, 539, 749, 434, 938, 542
};
static const short _lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_eof_trans[] = {
	0, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 27, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 61, 1, 0, 149, 
	1, 1, 154, 155, 157, 158, 160, 160, 
	160, 164, 1, 166, 167, 168, 172, 174, 
	177, 179, 1, 187, 187, 191, 187, 187, 
	187, 187, 187, 187, 187, 187, 202, 207, 
	187, 187, 187, 187, 187, 187, 216, 187, 
	187, 225, 187, 187, 187, 187, 187, 233, 
	235, 239, 241, 187, 187, 187, 187, 187, 
	248, 187, 257, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 291, 
	297, 187, 187, 187, 187, 187, 304, 187, 
	187, 187, 310, 187, 187, 316, 187, 187, 
	187, 187, 187, 187, 187, 325, 187, 187, 
	331, 333, 187, 187, 345, 187, 187, 187, 
	187, 187, 187, 354, 360, 187, 187, 187, 
	365, 367, 187, 187, 187, 187, 374, 187, 
	187, 187, 187, 381, 384, 187, 389, 396, 
	401, 405, 187, 408, 412, 187, 187, 187, 
	187, 187, 420, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	441, 187, 187, 187, 187, 187, 187, 453, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 482, 187, 187, 
	488, 187, 492, 187, 495, 499, 187, 502, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 518, 187, 187, 187, 187, 187, 526, 
	187, 187, 187, 187, 187, 538, 541, 545, 
	547, 549, 551, 555, 557, 559, 187, 187, 
	187, 187, 573, 187, 187, 187, 187, 187, 
	581, 187, 187, 187, 187, 187, 593, 187, 
	187, 187, 187, 600, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 614, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 627, 187, 187, 187, 187, 187, 187, 
	187, 187, 641, 642, 179, 1, 187, 187, 
	191, 187, 187, 187, 187, 187, 187, 187, 
	187, 202, 207, 187, 187, 187, 187, 187, 
	187, 216, 187, 187, 225, 187, 187, 187, 
	187, 187, 233, 235, 239, 241, 187, 187, 
	187, 187, 187, 248, 187, 257, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 291, 297, 187, 187, 187, 187, 
	187, 304, 187, 187, 187, 310, 187, 187, 
	316, 187, 187, 187, 187, 187, 187, 187, 
	325, 187, 187, 331, 333, 187, 187, 345, 
	187, 187, 187, 187, 187, 187, 354, 360, 
	187, 187, 187, 365, 367, 187, 187, 187, 
	187, 374, 187, 187, 187, 187, 381, 384, 
	187, 389, 396, 401, 405, 187, 408, 412, 
	187, 187, 187, 187, 187, 420, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 441, 187, 187, 187, 187, 
	187, 187, 453, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	482, 187, 187, 488, 187, 492, 187, 495, 
	499, 187, 502, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 518, 187, 187, 187, 
	187, 187, 526, 187, 187, 187, 187, 187, 
	538, 541, 545, 547, 549, 551, 555, 557, 
	559, 187, 187, 187, 187, 573, 187, 187, 
	187, 187, 187, 581, 187, 187, 187, 187, 
	187, 593, 187, 187, 187, 187, 600, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 614, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 627, 187, 187, 187, 
	187, 187, 187, 187, 187
};
static const int lexer_start = 38;
static const int lexer_error = 0;
static const int lexer_en_main = 38;
static void set_scan_buf( const char *text, bool _at_bol )
{
 Str_set( input_buf, text );
 p = Str_data(input_buf);
 at_bol = _at_bol;
 pe = Str_data(input_buf) + Str_len(input_buf);
 eof_ = pe;
	{
	cs = lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}
}
static tokid_t _scan_get( void )
{
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;
	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _lexer_actions + _lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
	{ts = p;}
	break;
		}
	}
	_widec = (*p);
	_klen = _lexer_cond_lengths[cs];
	_keys = _lexer_cond_keys + (_lexer_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _lexer_cond_spaces[_lexer_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
 at_bol  ) _widec += 256;
		break;
	}
				}
				break;
			}
		}
	}
	_keys = _lexer_trans_keys + _lexer_key_offsets[cs];
	_trans = _lexer_index_offsets[cs];
	_klen = _lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}
	_klen = _lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}
_match:
	_trans = _lexer_indicies[_trans];
_eof_trans:
	cs = _lexer_trans_targs[_trans];
	if ( _lexer_trans_actions[_trans] == 0 )
		goto _again;
	_acts = _lexer_actions + _lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
	{te = p+1;}
	break;
	case 3:
	{act = 1;}
	break;
	case 4:
	{act = 5;}
	break;
	case 5:
	{act = 37;}
	break;
	case 6:
	{act = 38;}
	break;
	case 7:
	{act = 39;}
	break;
	case 8:
	{act = 40;}
	break;
	case 9:
	{act = 41;}
	break;
	case 10:
	{act = 42;}
	break;
	case 11:
	{act = 43;}
	break;
	case 12:
	{act = 44;}
	break;
	case 13:
	{act = 45;}
	break;
	case 14:
	{act = 46;}
	break;
	case 15:
	{act = 47;}
	break;
	case 16:
	{act = 48;}
	break;
	case 17:
	{act = 49;}
	break;
	case 18:
	{act = 50;}
	break;
	case 19:
	{act = 51;}
	break;
	case 20:
	{act = 52;}
	break;
	case 21:
	{act = 53;}
	break;
	case 22:
	{act = 54;}
	break;
	case 23:
	{act = 55;}
	break;
	case 24:
	{act = 56;}
	break;
	case 25:
	{act = 57;}
	break;
	case 26:
	{act = 58;}
	break;
	case 27:
	{act = 59;}
	break;
	case 28:
	{act = 60;}
	break;
	case 29:
	{act = 61;}
	break;
	case 30:
	{act = 62;}
	break;
	case 31:
	{act = 63;}
	break;
	case 32:
	{act = 64;}
	break;
	case 33:
	{act = 65;}
	break;
	case 34:
	{act = 66;}
	break;
	case 35:
	{act = 67;}
	break;
	case 36:
	{act = 68;}
	break;
	case 37:
	{act = 69;}
	break;
	case 38:
	{act = 70;}
	break;
	case 39:
	{act = 71;}
	break;
	case 40:
	{act = 72;}
	break;
	case 41:
	{act = 73;}
	break;
	case 42:
	{act = 74;}
	break;
	case 43:
	{act = 94;}
	break;
	case 44:
	{act = 95;}
	break;
	case 45:
	{act = 96;}
	break;
	case 46:
	{act = 97;}
	break;
	case 47:
	{act = 98;}
	break;
	case 48:
	{act = 99;}
	break;
	case 49:
	{act = 100;}
	break;
	case 50:
	{act = 101;}
	break;
	case 51:
	{act = 102;}
	break;
	case 52:
	{act = 103;}
	break;
	case 53:
	{act = 104;}
	break;
	case 54:
	{act = 105;}
	break;
	case 55:
	{act = 106;}
	break;
	case 56:
	{act = 107;}
	break;
	case 57:
	{act = 108;}
	break;
	case 58:
	{act = 109;}
	break;
	case 59:
	{act = 110;}
	break;
	case 60:
	{act = 111;}
	break;
	case 61:
	{act = 112;}
	break;
	case 62:
	{act = 113;}
	break;
	case 63:
	{act = 114;}
	break;
	case 64:
	{act = 115;}
	break;
	case 65:
	{act = 116;}
	break;
	case 66:
	{act = 117;}
	break;
	case 67:
	{act = 118;}
	break;
	case 68:
	{act = 119;}
	break;
	case 69:
	{act = 120;}
	break;
	case 70:
	{act = 121;}
	break;
	case 71:
	{act = 122;}
	break;
	case 72:
	{act = 123;}
	break;
	case 73:
	{act = 124;}
	break;
	case 74:
	{act = 125;}
	break;
	case 75:
	{act = 126;}
	break;
	case 76:
	{act = 127;}
	break;
	case 77:
	{act = 128;}
	break;
	case 78:
	{act = 129;}
	break;
	case 79:
	{act = 134;}
	break;
	case 80:
	{act = 135;}
	break;
	case 81:
	{act = 136;}
	break;
	case 82:
	{act = 137;}
	break;
	case 83:
	{act = 138;}
	break;
	case 84:
	{act = 139;}
	break;
	case 85:
	{act = 141;}
	break;
	case 86:
	{act = 142;}
	break;
	case 87:
	{act = 143;}
	break;
	case 88:
	{act = 144;}
	break;
	case 89:
	{act = 145;}
	break;
	case 90:
	{act = 146;}
	break;
	case 91:
	{act = 147;}
	break;
	case 92:
	{act = 148;}
	break;
	case 93:
	{act = 149;}
	break;
	case 94:
	{act = 150;}
	break;
	case 95:
	{act = 151;}
	break;
	case 96:
	{act = 152;}
	break;
	case 97:
	{act = 153;}
	break;
	case 98:
	{act = 154;}
	break;
	case 99:
	{act = 155;}
	break;
	case 100:
	{act = 156;}
	break;
	case 101:
	{act = 157;}
	break;
	case 102:
	{act = 158;}
	break;
	case 103:
	{act = 159;}
	break;
	case 104:
	{act = 160;}
	break;
	case 105:
	{act = 161;}
	break;
	case 106:
	{act = 162;}
	break;
	case 107:
	{act = 163;}
	break;
	case 108:
	{act = 164;}
	break;
	case 109:
	{act = 165;}
	break;
	case 110:
	{act = 166;}
	break;
	case 111:
	{act = 167;}
	break;
	case 112:
	{act = 168;}
	break;
	case 113:
	{act = 169;}
	break;
	case 114:
	{act = 170;}
	break;
	case 115:
	{act = 171;}
	break;
	case 116:
	{act = 172;}
	break;
	case 117:
	{act = 173;}
	break;
	case 118:
	{act = 174;}
	break;
	case 119:
	{act = 175;}
	break;
	case 120:
	{act = 176;}
	break;
	case 121:
	{act = 177;}
	break;
	case 122:
	{act = 178;}
	break;
	case 123:
	{act = 179;}
	break;
	case 124:
	{act = 180;}
	break;
	case 125:
	{act = 181;}
	break;
	case 126:
	{act = 182;}
	break;
	case 127:
	{act = 183;}
	break;
	case 128:
	{act = 184;}
	break;
	case 129:
	{act = 186;}
	break;
	case 130:
	{act = 187;}
	break;
	case 131:
	{act = 189;}
	break;
	case 132:
	{act = 190;}
	break;
	case 133:
	{act = 191;}
	break;
	case 134:
	{act = 193;}
	break;
	case 135:
	{act = 194;}
	break;
	case 136:
	{act = 196;}
	break;
	case 137:
	{act = 197;}
	break;
	case 138:
	{act = 198;}
	break;
	case 139:
	{act = 199;}
	break;
	case 140:
	{act = 201;}
	break;
	case 141:
	{act = 202;}
	break;
	case 142:
	{act = 203;}
	break;
	case 143:
	{act = 204;}
	break;
	case 144:
	{act = 205;}
	break;
	case 145:
	{act = 206;}
	break;
	case 146:
	{act = 207;}
	break;
	case 147:
	{act = 208;}
	break;
	case 148:
	{act = 209;}
	break;
	case 149:
	{act = 210;}
	break;
	case 150:
	{act = 211;}
	break;
	case 151:
	{act = 212;}
	break;
	case 152:
	{act = 213;}
	break;
	case 153:
	{act = 214;}
	break;
	case 154:
	{act = 215;}
	break;
	case 155:
	{act = 216;}
	break;
	case 156:
	{act = 217;}
	break;
	case 157:
	{act = 218;}
	break;
	case 158:
	{act = 219;}
	break;
	case 159:
	{act = 220;}
	break;
	case 160:
	{act = 221;}
	break;
	case 161:
	{act = 222;}
	break;
	case 162:
	{act = 223;}
	break;
	case 163:
	{act = 224;}
	break;
	case 164:
	{act = 225;}
	break;
	case 165:
	{act = 226;}
	break;
	case 166:
	{act = 227;}
	break;
	case 167:
	{act = 228;}
	break;
	case 168:
	{act = 229;}
	break;
	case 169:
	{act = 230;}
	break;
	case 170:
	{act = 231;}
	break;
	case 171:
	{act = 232;}
	break;
	case 172:
	{act = 233;}
	break;
	case 173:
	{act = 234;}
	break;
	case 174:
	{act = 235;}
	break;
	case 175:
	{act = 248;}
	break;
	case 176:
	{act = 249;}
	break;
	case 177:
	{act = 250;}
	break;
	case 178:
	{act = 251;}
	break;
	case 179:
	{act = 252;}
	break;
	case 180:
	{act = 253;}
	break;
	case 181:
	{act = 254;}
	break;
	case 182:
	{act = 255;}
	break;
	case 183:
	{act = 256;}
	break;
	case 184:
	{act = 257;}
	break;
	case 185:
	{act = 258;}
	break;
	case 186:
	{act = 259;}
	break;
	case 187:
	{act = 260;}
	break;
	case 188:
	{act = 261;}
	break;
	case 189:
	{act = 262;}
	break;
	case 190:
	{act = 263;}
	break;
	case 191:
	{act = 264;}
	break;
	case 192:
	{act = 265;}
	break;
	case 193:
	{act = 266;}
	break;
	case 194:
	{act = 267;}
	break;
	case 195:
	{act = 268;}
	break;
	case 196:
	{act = 269;}
	break;
	case 197:
	{act = 270;}
	break;
	case 198:
	{act = 271;}
	break;
	case 199:
	{act = 272;}
	break;
	case 200:
	{act = 273;}
	break;
	case 201:
	{act = 274;}
	break;
	case 202:
	{act = 275;}
	break;
	case 203:
	{act = 276;}
	break;
	case 204:
	{act = 277;}
	break;
	case 205:
	{act = 278;}
	break;
	case 206:
	{act = 279;}
	break;
	case 207:
	{act = 280;}
	break;
	case 208:
	{act = 281;}
	break;
	case 209:
	{act = 282;}
	break;
	case 210:
	{act = 285;}
	break;
	case 211:
	{act = 287;}
	break;
	case 212:
	{act = 289;}
	break;
	case 213:
	{act = 291;}
	break;
	case 214:
	{act = 293;}
	break;
	case 215:
	{act = 297;}
	break;
	case 216:
	{te = p+1;{
	sym.tok = TK_NEWLINE;
	;
	{p++; goto _out; }
}}
	break;
	case 217:
	{te = p+1;{
	sym.tok = TK_CONST_EXPR;
	;
	{p++; goto _out; }
}}
	break;
	case 218:
	{te = p+1;{
	sym.tok = TK_LOG_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 219:
	{te = p+1;{
	sym.tok = TK_RPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 220:
	{te = p+1;{
	sym.tok = TK_PLUS;
	;
	{p++; goto _out; }
}}
	break;
	case 221:
	{te = p+1;{
	sym.tok = TK_COMMA;
	;
	{p++; goto _out; }
}}
	break;
	case 222:
	{te = p+1;{
	sym.tok = TK_MINUS;
	;
	{p++; goto _out; }
}}
	break;
	case 223:
	{te = p+1;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 224:
	{te = p+1;{
	sym.tok = TK_DIVIDE;
	;
	{p++; goto _out; }
}}
	break;
	case 225:
	{te = p+1;{
	sym.tok = TK_COLON;
	;
	{p++; goto _out; }
}}
	break;
	case 226:
	{te = p+1;{
	sym.tok = TK_LEFT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 227:
	{te = p+1;{
	sym.tok = TK_LESS_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 228:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 229:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 230:
	{te = p+1;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 231:
	{te = p+1;{
	sym.tok = TK_RIGHT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 232:
	{te = p+1;{
	sym.tok = TK_GREATER_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 233:
	{te = p+1;{
	sym.tok = TK_QUESTION;
	;
	{p++; goto _out; }
}}
	break;
	case 234:
	{te = p+1;{
	sym.tok = TK_LSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 235:
	{te = p+1;{
	sym.tok = TK_RSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 236:
	{te = p+1;{
	sym.tok = TK_BIN_XOR;
	;
	{p++; goto _out; }
}}
	break;
	case 237:
	{te = p+1;{
	sym.tok = TK_POWER;
	;
	{p++; goto _out; }
}}
	break;
	case 238:
	{te = p+1;{
	sym.tok = TK_LCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 239:
	{te = p+1;{
	sym.tok = TK_LOG_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 240:
	{te = p+1;{
	sym.tok = TK_RCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 241:
	{te = p+1;{
	sym.tok = TK_BIN_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 242:
	{te = p+1;{
	sym.tok = TK_B1;
	;
	{p++; goto _out; }
}}
	break;
	case 243:
	{te = p+1;{
	sym.tok = TK_C1;
	;
	{p++; goto _out; }
}}
	break;
	case 244:
	{te = p+1;{
	sym.tok = TK_D1;
	;
	{p++; goto _out; }
}}
	break;
	case 245:
	{te = p+1;{
	sym.tok = TK_E1;
	;
	{p++; goto _out; }
}}
	break;
	case 246:
	{te = p+1;{
	sym.tok = TK_H1;
	;
	{p++; goto _out; }
}}
	break;
	case 247:
	{te = p+1;{
	sym.tok = TK_L1;
	;
	{p++; goto _out; }
}}
	break;
	case 248:
	{te = p+1;{
	sym.tok = TK_A1;
	;
	{p++; goto _out; }
}}
	break;
	case 249:
	{te = p+1;{
	sym.tok = TK_F1;
	;
	{p++; goto _out; }
}}
	break;
	case 250:
	{te = p+1;{
	sym.tok = TK_BC1;
	;
	{p++; goto _out; }
}}
	break;
	case 251:
	{te = p+1;{
	sym.tok = TK_DE1;
	;
	{p++; goto _out; }
}}
	break;
	case 252:
	{te = p+1;{
	sym.tok = TK_HL1;
	;
	{p++; goto _out; }
}}
	break;
	case 253:
	{te = p+1;{
	sym.tok = TK_AF1;
	;
	{p++; goto _out; }
}}
	break;
	case 254:
	{te = p+1;{
	sym.tok = TK_IND_BC;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 255:
	{te = p+1;{
	sym.tok = TK_IND_DE;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 256:
	{te = p+1;{
	sym.tok = TK_IND_IX;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 257:
	{te = p+1;{
	sym.tok = TK_IND_IY;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 258:
	{te = p+1;{
	sym.tok = TK_IND_HL;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 259:
	{te = p+1;{
	sym.tok = TK_IND_SP;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 260:
	{te = p+1;{
	sym.tok = TK_IND_C;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 261:
	{te = p+1;{
	sym.tok = TK_DS_B;
	;
	{p++; goto _out; }
}}
	break;
	case 262:
	{te = p+1;{
	sym.tok = TK_DS_W;
	;
	{p++; goto _out; }
}}
	break;
	case 263:
	{te = p+1;{
	sym.tok = TK_DS_P;
	;
	{p++; goto _out; }
}}
	break;
	case 264:
	{te = p+1;{
	sym.tok = TK_DS_Q;
	;
	{p++; goto _out; }
}}
	break;
	case 265:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CCF1;
		sym.tok_opcode = TK_CCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 266:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLA1;
		sym.tok_opcode = TK_RLA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA1;
	}
	{p++; goto _out; }
}}
	break;
	case 267:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLCA1;
		sym.tok_opcode = TK_RLCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 268:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRA1;
		sym.tok_opcode = TK_RRA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA1;
	}
	{p++; goto _out; }
}}
	break;
	case 269:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRCA1;
		sym.tok_opcode = TK_RRCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 270:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_SCF1;
		sym.tok_opcode = TK_SCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 271:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_WAIT;
		sym.tok_opcode = TK_CU_WAIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_WAIT;
	}
	{p++; goto _out; }
}}
	break;
	case 272:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_MOVE;
		sym.tok_opcode = TK_CU_MOVE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_MOVE;
	}
	{p++; goto _out; }
}}
	break;
	case 273:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_STOP;
		sym.tok_opcode = TK_CU_STOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_STOP;
	}
	{p++; goto _out; }
}}
	break;
	case 274:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_NOP;
		sym.tok_opcode = TK_CU_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_NOP;
	}
	{p++; goto _out; }
}}
	break;
	case 275:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR0;
		sym.tok_opcode = TK_DMA_WR0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR0;
	}
	{p++; goto _out; }
}}
	break;
	case 276:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR1;
		sym.tok_opcode = TK_DMA_WR1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR1;
	}
	{p++; goto _out; }
}}
	break;
	case 277:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR2;
		sym.tok_opcode = TK_DMA_WR2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR2;
	}
	{p++; goto _out; }
}}
	break;
	case 278:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR3;
		sym.tok_opcode = TK_DMA_WR3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR3;
	}
	{p++; goto _out; }
}}
	break;
	case 279:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR4;
		sym.tok_opcode = TK_DMA_WR4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR4;
	}
	{p++; goto _out; }
}}
	break;
	case 280:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR5;
		sym.tok_opcode = TK_DMA_WR5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR5;
	}
	{p++; goto _out; }
}}
	break;
	case 281:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR6;
		sym.tok_opcode = TK_DMA_WR6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR6;
	}
	{p++; goto _out; }
}}
	break;
	case 282:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_CMD;
		sym.tok_opcode = TK_DMA_CMD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_CMD;
	}
	{p++; goto _out; }
}}
	break;
	case 283:
	{te = p+1;}
	break;
	case 284:
	{te = p+1;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 285:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 286:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 3, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 287:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = 0;
  if ( get_sym_string() )
  {
   STR_DEFINE(string, STR_SIZE);
   Str_set_bytes(string, ts, te-ts);
   Str_len(string) = cstr_compress_escapes(Str_data(string));
   if (Str_len(string) == 1)
    sym.number = Str_data(string)[0];
   else
    error_invalid_squoted_string();
   STR_DELETE(string);
  }
  else
  {
   error_invalid_squoted_string();
  }
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 288:
	{te = p+1;{
  sym.tok = TK_STRING;
  if ( ! get_sym_string() )
   error_unclosed_string();
  {p++; goto _out; }
 }}
	break;
	case 289:
	{te = p+1;{
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 290:
	{te = p;p--;{
	sym.tok = TK_LOG_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 291:
	{te = p;p--;{
	sym.tok = TK_BIN_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 292:
	{te = p;p--;{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 293:
	{te = p;p--;{
	sym.tok = TK_MULTIPLY;
	;
	{p++; goto _out; }
}}
	break;
	case 294:
	{te = p;p--;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 295:
	{te = p;p--;{
	sym.tok = TK_LESS;
	;
	{p++; goto _out; }
}}
	break;
	case 296:
	{te = p;p--;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 297:
	{te = p;p--;{
	sym.tok = TK_GREATER;
	;
	{p++; goto _out; }
}}
	break;
	case 298:
	{te = p;p--;{
	sym.tok = TK_BIN_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 299:
	{te = p;p--;{
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}}
	break;
	case 300:
	{te = p;p--;{
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}}
	break;
	case 301:
	{te = p;p--;{
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}}
	break;
	case 302:
	{te = p;p--;{
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}}
	break;
	case 303:
	{te = p;p--;{
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}}
	break;
	case 304:
	{te = p;p--;{
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}}
	break;
	case 305:
	{te = p;p--;{
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}}
	break;
	case 306:
	{te = p;p--;{
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}}
	break;
	case 307:
	{te = p;p--;{
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}}
	break;
	case 308:
	{te = p;p--;{
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}}
	break;
	case 309:
	{te = p;p--;{
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}}
	break;
	case 310:
	{te = p;p--;{
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}}
	break;
	case 311:
	{te = p;p--;{
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}}
	break;
	case 312:
	{te = p;p--;{
	if (opts.cpu & CPU_Z80_ZXN) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}}
	break;
	case 313:
	{te = p;p--;{
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}}
	break;
	case 314:
	{te = p;p--;{
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}}
	break;
	case 315:
	{te = p;p--;{
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}}
	break;
	case 316:
	{te = p;p--;{
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}}
	break;
	case 317:
	{te = p;p--;{
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}}
	break;
	case 318:
	{te = p;p--;{
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}}
	break;
	case 319:
	{te = p;p--;{
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}}
	break;
	case 320:
	{te = p;p--;{
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}}
	break;
	case 321:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}}
	break;
	case 322:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}}
	break;
	case 323:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}}
	break;
	case 324:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}}
	break;
	case 325:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}}
	break;
	case 326:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}}
	break;
	case 327:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}}
	break;
	case 328:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}}
	break;
	case 329:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}}
	break;
	case 330:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}}
	break;
	case 331:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}}
	break;
	case 332:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}}
	break;
	case 333:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}}
	break;
	case 334:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}}
	break;
	case 335:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}}
	break;
	case 336:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}}
	break;
	case 337:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}}
	break;
	case 338:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}}
	break;
	case 339:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}}
	break;
	case 340:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}}
	break;
	case 341:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}}
	break;
	case 342:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}}
	break;
	case 343:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}}
	break;
	case 344:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}}
	break;
	case 345:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}}
	break;
	case 346:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}}
	break;
	case 347:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}}
	break;
	case 348:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}}
	break;
	case 349:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}}
	break;
	case 350:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}}
	break;
	case 351:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}}
	break;
	case 352:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}}
	break;
	case 353:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}}
	break;
	case 354:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}}
	break;
	case 355:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}}
	break;
	case 356:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}}
	break;
	case 357:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}}
	break;
	case 358:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}}
	break;
	case 359:
	{te = p;p--;}
	break;
	case 360:
	{te = p;p--;{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 361:
	{te = p;p--;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 362:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 363:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 364:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 365:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 366:
	{{p = ((te))-1;}{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 367:
	{{p = ((te))-1;}{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 368:
	{{p = ((te))-1;}{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 369:
	{{p = ((te))-1;}{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 370:
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 5:
	{{p = ((te))-1;}
	sym.tok = TK_MOD;
	;
	{p++; goto _out; }
}
	break;
	case 37:
	{{p = ((te))-1;}
	sym.tok = TK_NZ;
	;
	{p++; goto _out; }
}
	break;
	case 38:
	{{p = ((te))-1;}
	sym.tok = TK_Z;
	;
	{p++; goto _out; }
}
	break;
	case 39:
	{{p = ((te))-1;}
	sym.tok = TK_NC;
	;
	{p++; goto _out; }
}
	break;
	case 40:
	{{p = ((te))-1;}
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}
	break;
	case 41:
	{{p = ((te))-1;}
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}
	break;
	case 42:
	{{p = ((te))-1;}
	sym.tok = TK_PE;
	;
	{p++; goto _out; }
}
	break;
	case 43:
	{{p = ((te))-1;}
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}
	break;
	case 44:
	{{p = ((te))-1;}
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}
	break;
	case 45:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LZ;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 46:
	{{p = ((te))-1;}
	if ((opts.cpu & CPU_R2K) || (opts.cpu & CPU_R3K)) {
		sym.tok = TK_LO;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 47:
	{{p = ((te))-1;}
	sym.tok = TK_NV;
	;
	{p++; goto _out; }
}
	break;
	case 48:
	{{p = ((te))-1;}
	sym.tok = TK_V;
	;
	{p++; goto _out; }
}
	break;
	case 49:
	{{p = ((te))-1;}
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}
	break;
	case 50:
	{{p = ((te))-1;}
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}
	break;
	case 51:
	{{p = ((te))-1;}
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}
	break;
	case 52:
	{{p = ((te))-1;}
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}
	break;
	case 53:
	{{p = ((te))-1;}
	sym.tok = TK_IXH;
	;
	{p++; goto _out; }
}
	break;
	case 54:
	{{p = ((te))-1;}
	sym.tok = TK_IYH;
	;
	{p++; goto _out; }
}
	break;
	case 55:
	{{p = ((te))-1;}
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}
	break;
	case 56:
	{{p = ((te))-1;}
	sym.tok = TK_IXL;
	;
	{p++; goto _out; }
}
	break;
	case 57:
	{{p = ((te))-1;}
	sym.tok = TK_IYL;
	;
	{p++; goto _out; }
}
	break;
	case 58:
	{{p = ((te))-1;}
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}
	break;
	case 59:
	{{p = ((te))-1;}
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}
	break;
	case 60:
	{{p = ((te))-1;}
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}
	break;
	case 61:
	{{p = ((te))-1;}
	sym.tok = TK_IIR;
	;
	{p++; goto _out; }
}
	break;
	case 62:
	{{p = ((te))-1;}
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}
	break;
	case 63:
	{{p = ((te))-1;}
	sym.tok = TK_EIR;
	;
	{p++; goto _out; }
}
	break;
	case 64:
	{{p = ((te))-1;}
	if (opts.cpu & CPU_Z80_ZXN) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 65:
	{{p = ((te))-1;}
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}
	break;
	case 66:
	{{p = ((te))-1;}
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}
	break;
	case 67:
	{{p = ((te))-1;}
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}
	break;
	case 68:
	{{p = ((te))-1;}
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}
	break;
	case 69:
	{{p = ((te))-1;}
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}
	break;
	case 70:
	{{p = ((te))-1;}
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}
	break;
	case 71:
	{{p = ((te))-1;}
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}
	break;
	case 72:
	{{p = ((te))-1;}
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}
	break;
	case 73:
	{{p = ((te))-1;}
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}
	break;
	case 74:
	{{p = ((te))-1;}
	sym.tok = TK_XPC;
	;
	{p++; goto _out; }
}
	break;
	case 94:
	{{p = ((te))-1;}
	sym.tok = TK_A32;
	;
	{p++; goto _out; }
}
	break;
	case 95:
	{{p = ((te))-1;}
	sym.tok = TK_DEHL;
	;
	{p++; goto _out; }
}
	break;
	case 96:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALIGN;
		sym.tok_opcode = TK_ALIGN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALIGN;
	}
	{p++; goto _out; }
}
	break;
	case 97:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BINARY;
		sym.tok_opcode = TK_BINARY;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BINARY;
	}
	{p++; goto _out; }
}
	break;
	case 98:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_LINE;
		sym.tok_opcode = TK_C_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 99:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFB;
		sym.tok_opcode = TK_DEFB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFB;
	}
	{p++; goto _out; }
}
	break;
	case 100:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFC;
		sym.tok_opcode = TK_DEFC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFC;
	}
	{p++; goto _out; }
}
	break;
	case 101:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFGROUP;
		sym.tok_opcode = TK_DEFGROUP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFGROUP;
	}
	{p++; goto _out; }
}
	break;
	case 102:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFINE;
		sym.tok_opcode = TK_DEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 103:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFM;
		sym.tok_opcode = TK_DEFM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFM;
	}
	{p++; goto _out; }
}
	break;
	case 104:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFQ;
		sym.tok_opcode = TK_DEFQ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFQ;
	}
	{p++; goto _out; }
}
	break;
	case 105:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFS;
		sym.tok_opcode = TK_DEFS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFS;
	}
	{p++; goto _out; }
}
	break;
	case 106:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFVARS;
		sym.tok_opcode = TK_DEFVARS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFVARS;
	}
	{p++; goto _out; }
}
	break;
	case 107:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFW;
		sym.tok_opcode = TK_DEFW;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFW;
	}
	{p++; goto _out; }
}
	break;
	case 108:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEPHASE;
		sym.tok_opcode = TK_DEPHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEPHASE;
	}
	{p++; goto _out; }
}
	break;
	case 109:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELSE;
		sym.tok_opcode = TK_ELSE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELSE;
	}
	{p++; goto _out; }
}
	break;
	case 110:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ENDIF;
		sym.tok_opcode = TK_ENDIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ENDIF;
	}
	{p++; goto _out; }
}
	break;
	case 111:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXTERN;
		sym.tok_opcode = TK_EXTERN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXTERN;
	}
	{p++; goto _out; }
}
	break;
	case 112:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_GLOBAL;
		sym.tok_opcode = TK_GLOBAL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_GLOBAL;
	}
	{p++; goto _out; }
}
	break;
	case 113:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}
	break;
	case 114:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFDEF;
		sym.tok_opcode = TK_IFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 115:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFNDEF;
		sym.tok_opcode = TK_IFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 116:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INCLUDE;
		sym.tok_opcode = TK_INCLUDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INCLUDE;
	}
	{p++; goto _out; }
}
	break;
	case 117:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LIB;
		sym.tok_opcode = TK_LIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LIB;
	}
	{p++; goto _out; }
}
	break;
	case 118:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LINE;
		sym.tok_opcode = TK_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 119:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTOFF;
		sym.tok_opcode = TK_LSTOFF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTOFF;
	}
	{p++; goto _out; }
}
	break;
	case 120:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTON;
		sym.tok_opcode = TK_LSTON;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTON;
	}
	{p++; goto _out; }
}
	break;
	case 121:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MODULE;
		sym.tok_opcode = TK_MODULE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MODULE;
	}
	{p++; goto _out; }
}
	break;
	case 122:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORG;
		sym.tok_opcode = TK_ORG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORG;
	}
	{p++; goto _out; }
}
	break;
	case 123:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PHASE;
		sym.tok_opcode = TK_PHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PHASE;
	}
	{p++; goto _out; }
}
	break;
	case 124:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUBLIC;
		sym.tok_opcode = TK_PUBLIC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUBLIC;
	}
	{p++; goto _out; }
}
	break;
	case 125:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SECTION;
		sym.tok_opcode = TK_SECTION;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SECTION;
	}
	{p++; goto _out; }
}
	break;
	case 126:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UNDEFINE;
		sym.tok_opcode = TK_UNDEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UNDEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 127:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XDEF;
		sym.tok_opcode = TK_XDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XDEF;
	}
	{p++; goto _out; }
}
	break;
	case 128:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XLIB;
		sym.tok_opcode = TK_XLIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XLIB;
	}
	{p++; goto _out; }
}
	break;
	case 129:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XREF;
		sym.tok_opcode = TK_XREF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XREF;
	}
	{p++; goto _out; }
}
	break;
	case 134:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADC;
		sym.tok_opcode = TK_ADC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADC;
	}
	{p++; goto _out; }
}
	break;
	case 135:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADD;
		sym.tok_opcode = TK_ADD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADD;
	}
	{p++; goto _out; }
}
	break;
	case 136:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_AND;
		sym.tok_opcode = TK_AND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_AND;
	}
	{p++; goto _out; }
}
	break;
	case 137:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BIT;
		sym.tok_opcode = TK_BIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BIT;
	}
	{p++; goto _out; }
}
	break;
	case 138:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}
	break;
	case 139:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}
	break;
	case 141:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}
	break;
	case 142:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}
	break;
	case 143:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPDR;
		sym.tok_opcode = TK_CPDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPDR;
	}
	{p++; goto _out; }
}
	break;
	case 144:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}
	break;
	case 145:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPIR;
		sym.tok_opcode = TK_CPIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPIR;
	}
	{p++; goto _out; }
}
	break;
	case 146:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPL;
		sym.tok_opcode = TK_CPL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPL;
	}
	{p++; goto _out; }
}
	break;
	case 147:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAA;
		sym.tok_opcode = TK_DAA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAA;
	}
	{p++; goto _out; }
}
	break;
	case 148:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEC;
		sym.tok_opcode = TK_DEC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEC;
	}
	{p++; goto _out; }
}
	break;
	case 149:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DI;
		sym.tok_opcode = TK_DI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DI;
	}
	{p++; goto _out; }
}
	break;
	case 150:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DJNZ;
		sym.tok_opcode = TK_DJNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DJNZ;
	}
	{p++; goto _out; }
}
	break;
	case 151:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}
	break;
	case 152:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}
	break;
	case 153:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXX;
		sym.tok_opcode = TK_EXX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXX;
	}
	{p++; goto _out; }
}
	break;
	case 154:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HALT;
		sym.tok_opcode = TK_HALT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HALT;
	}
	{p++; goto _out; }
}
	break;
	case 155:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IM;
		sym.tok_opcode = TK_IM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IM;
	}
	{p++; goto _out; }
}
	break;
	case 156:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}
	break;
	case 157:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}
	break;
	case 158:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}
	break;
	case 159:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INDR;
		sym.tok_opcode = TK_INDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INDR;
	}
	{p++; goto _out; }
}
	break;
	case 160:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}
	break;
	case 161:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INIR;
		sym.tok_opcode = TK_INIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INIR;
	}
	{p++; goto _out; }
}
	break;
	case 162:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}
	break;
	case 163:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JR;
		sym.tok_opcode = TK_JR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JR;
	}
	{p++; goto _out; }
}
	break;
	case 164:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}
	break;
	case 165:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}
	break;
	case 166:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}
	break;
	case 167:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}
	break;
	case 168:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}
	break;
	case 169:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEG;
		sym.tok_opcode = TK_NEG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEG;
	}
	{p++; goto _out; }
}
	break;
	case 170:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NOP;
		sym.tok_opcode = TK_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NOP;
	}
	{p++; goto _out; }
}
	break;
	case 171:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}
	break;
	case 172:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDR;
		sym.tok_opcode = TK_OTDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDR;
	}
	{p++; goto _out; }
}
	break;
	case 173:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIR;
		sym.tok_opcode = TK_OTIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIR;
	}
	{p++; goto _out; }
}
	break;
	case 174:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}
	break;
	case 175:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTD;
		sym.tok_opcode = TK_OUTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTD;
	}
	{p++; goto _out; }
}
	break;
	case 176:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}
	break;
	case 177:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}
	break;
	case 178:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUSH;
		sym.tok_opcode = TK_PUSH;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUSH;
	}
	{p++; goto _out; }
}
	break;
	case 179:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RES;
		sym.tok_opcode = TK_RES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RES;
	}
	{p++; goto _out; }
}
	break;
	case 180:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}
	break;
	case 181:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETI;
		sym.tok_opcode = TK_RETI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETI;
	}
	{p++; goto _out; }
}
	break;
	case 182:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETN;
		sym.tok_opcode = TK_RETN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETN;
	}
	{p++; goto _out; }
}
	break;
	case 183:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}
	break;
	case 184:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}
	break;
	case 186:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}
	break;
	case 187:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}
	break;
	case 189:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLD;
		sym.tok_opcode = TK_RLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLD;
	}
	{p++; goto _out; }
}
	break;
	case 190:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}
	break;
	case 191:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}
	break;
	case 193:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}
	break;
	case 194:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}
	break;
	case 196:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRD;
		sym.tok_opcode = TK_RRD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRD;
	}
	{p++; goto _out; }
}
	break;
	case 197:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RST;
		sym.tok_opcode = TK_RST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RST;
	}
	{p++; goto _out; }
}
	break;
	case 198:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBC;
		sym.tok_opcode = TK_SBC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBC;
	}
	{p++; goto _out; }
}
	break;
	case 199:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}
	break;
	case 201:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}
	break;
	case 202:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLA;
		sym.tok_opcode = TK_SLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLA;
	}
	{p++; goto _out; }
}
	break;
	case 203:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLL;
		sym.tok_opcode = TK_SLL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLL;
	}
	{p++; goto _out; }
}
	break;
	case 204:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLI;
		sym.tok_opcode = TK_SLI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLI;
	}
	{p++; goto _out; }
}
	break;
	case 205:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRA;
		sym.tok_opcode = TK_SRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRA;
	}
	{p++; goto _out; }
}
	break;
	case 206:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRL;
		sym.tok_opcode = TK_SRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRL;
	}
	{p++; goto _out; }
}
	break;
	case 207:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUB;
		sym.tok_opcode = TK_SUB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUB;
	}
	{p++; goto _out; }
}
	break;
	case 208:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XOR;
		sym.tok_opcode = TK_XOR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XOR;
	}
	{p++; goto _out; }
}
	break;
	case 209:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAPNIB;
		sym.tok_opcode = TK_SWAPNIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAPNIB;
	}
	{p++; goto _out; }
}
	break;
	case 210:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}
	break;
	case 211:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTINB;
		sym.tok_opcode = TK_OUTINB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTINB;
	}
	{p++; goto _out; }
}
	break;
	case 212:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIX;
		sym.tok_opcode = TK_LDIX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIX;
	}
	{p++; goto _out; }
}
	break;
	case 213:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRX;
		sym.tok_opcode = TK_LDIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRX;
	}
	{p++; goto _out; }
}
	break;
	case 214:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDX;
		sym.tok_opcode = TK_LDDX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDX;
	}
	{p++; goto _out; }
}
	break;
	case 215:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDRX;
		sym.tok_opcode = TK_LDDRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDRX;
	}
	{p++; goto _out; }
}
	break;
	case 216:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRSCALE;
		sym.tok_opcode = TK_LDIRSCALE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRSCALE;
	}
	{p++; goto _out; }
}
	break;
	case 217:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDPIRX;
		sym.tok_opcode = TK_LDPIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDPIRX;
	}
	{p++; goto _out; }
}
	break;
	case 218:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDWS;
		sym.tok_opcode = TK_LDWS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDWS;
	}
	{p++; goto _out; }
}
	break;
	case 219:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}
	break;
	case 220:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILLDE;
		sym.tok_opcode = TK_FILLDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILLDE;
	}
	{p++; goto _out; }
}
	break;
	case 221:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MIRROR;
		sym.tok_opcode = TK_MIRROR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MIRROR;
	}
	{p++; goto _out; }
}
	break;
	case 222:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEXTREG;
		sym.tok_opcode = TK_NEXTREG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEXTREG;
	}
	{p++; goto _out; }
}
	break;
	case 223:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELDN;
		sym.tok_opcode = TK_PIXELDN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELDN;
	}
	{p++; goto _out; }
}
	break;
	case 224:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELAD;
		sym.tok_opcode = TK_PIXELAD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELAD;
	}
	{p++; goto _out; }
}
	break;
	case 225:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETAE;
		sym.tok_opcode = TK_SETAE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETAE;
	}
	{p++; goto _out; }
}
	break;
	case 226:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TEST;
		sym.tok_opcode = TK_TEST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TEST;
	}
	{p++; goto _out; }
}
	break;
	case 227:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}
	break;
	case 228:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU0;
		sym.tok_opcode = TK_MMU0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU0;
	}
	{p++; goto _out; }
}
	break;
	case 229:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU1;
		sym.tok_opcode = TK_MMU1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU1;
	}
	{p++; goto _out; }
}
	break;
	case 230:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU2;
		sym.tok_opcode = TK_MMU2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU2;
	}
	{p++; goto _out; }
}
	break;
	case 231:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU3;
		sym.tok_opcode = TK_MMU3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU3;
	}
	{p++; goto _out; }
}
	break;
	case 232:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU4;
		sym.tok_opcode = TK_MMU4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU4;
	}
	{p++; goto _out; }
}
	break;
	case 233:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU5;
		sym.tok_opcode = TK_MMU5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU5;
	}
	{p++; goto _out; }
}
	break;
	case 234:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU6;
		sym.tok_opcode = TK_MMU6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU6;
	}
	{p++; goto _out; }
}
	break;
	case 235:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU7;
		sym.tok_opcode = TK_MMU7;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU7;
	}
	{p++; goto _out; }
}
	break;
	case 248:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN0;
		sym.tok_opcode = TK_IN0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN0;
	}
	{p++; goto _out; }
}
	break;
	case 249:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MLT;
		sym.tok_opcode = TK_MLT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MLT;
	}
	{p++; goto _out; }
}
	break;
	case 250:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}
	break;
	case 251:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDMR;
		sym.tok_opcode = TK_OTDMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDMR;
	}
	{p++; goto _out; }
}
	break;
	case 252:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}
	break;
	case 253:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIMR;
		sym.tok_opcode = TK_OTIMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIMR;
	}
	{p++; goto _out; }
}
	break;
	case 254:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT0;
		sym.tok_opcode = TK_OUT0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT0;
	}
	{p++; goto _out; }
}
	break;
	case 255:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLP;
		sym.tok_opcode = TK_SLP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLP;
	}
	{p++; goto _out; }
}
	break;
	case 256:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}
	break;
	case 257:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TSTIO;
		sym.tok_opcode = TK_TSTIO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TSTIO;
	}
	{p++; goto _out; }
}
	break;
	case 258:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALTD;
		sym.tok_opcode = TK_ALTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALTD;
	}
	{p++; goto _out; }
}
	break;
	case 259:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BOOL;
		sym.tok_opcode = TK_BOOL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BOOL;
	}
	{p++; goto _out; }
}
	break;
	case 260:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IDET;
		sym.tok_opcode = TK_IDET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IDET;
	}
	{p++; goto _out; }
}
	break;
	case 261:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOE;
		sym.tok_opcode = TK_IOE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOE;
	}
	{p++; goto _out; }
}
	break;
	case 262:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOI;
		sym.tok_opcode = TK_IOI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOI;
	}
	{p++; goto _out; }
}
	break;
	case 263:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPRES;
		sym.tok_opcode = TK_IPRES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPRES;
	}
	{p++; goto _out; }
}
	break;
	case 264:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPSET;
		sym.tok_opcode = TK_IPSET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPSET;
	}
	{p++; goto _out; }
}
	break;
	case 265:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDSR;
		sym.tok_opcode = TK_LDDSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDSR;
	}
	{p++; goto _out; }
}
	break;
	case 266:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDISR;
		sym.tok_opcode = TK_LDISR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDISR;
	}
	{p++; goto _out; }
}
	break;
	case 267:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}
	break;
	case 268:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDR;
		sym.tok_opcode = TK_LSDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDR;
	}
	{p++; goto _out; }
}
	break;
	case 269:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIR;
		sym.tok_opcode = TK_LSIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIR;
	}
	{p++; goto _out; }
}
	break;
	case 270:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDDR;
		sym.tok_opcode = TK_LSDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDDR;
	}
	{p++; goto _out; }
}
	break;
	case 271:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIDR;
		sym.tok_opcode = TK_LSIDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIDR;
	}
	{p++; goto _out; }
}
	break;
	case 272:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MUL;
		sym.tok_opcode = TK_MUL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MUL;
	}
	{p++; goto _out; }
}
	break;
	case 273:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RDMODE;
		sym.tok_opcode = TK_RDMODE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RDMODE;
	}
	{p++; goto _out; }
}
	break;
	case 274:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETUSR;
		sym.tok_opcode = TK_SETUSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETUSR;
	}
	{p++; goto _out; }
}
	break;
	case 275:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SURES;
		sym.tok_opcode = TK_SURES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SURES;
	}
	{p++; goto _out; }
}
	break;
	case 276:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SYSCALL;
		sym.tok_opcode = TK_SYSCALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SYSCALL;
	}
	{p++; goto _out; }
}
	break;
	case 277:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMA;
		sym.tok_opcode = TK_UMA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMA;
	}
	{p++; goto _out; }
}
	break;
	case 278:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMS;
		sym.tok_opcode = TK_UMS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMS;
	}
	{p++; goto _out; }
}
	break;
	case 279:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_OZ;
		sym.tok_opcode = TK_CALL_OZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_OZ;
	}
	{p++; goto _out; }
}
	break;
	case 280:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_PKG;
		sym.tok_opcode = TK_CALL_PKG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_PKG;
	}
	{p++; goto _out; }
}
	break;
	case 281:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FPP;
		sym.tok_opcode = TK_FPP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FPP;
	}
	{p++; goto _out; }
}
	break;
	case 282:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INVOKE;
		sym.tok_opcode = TK_INVOKE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INVOKE;
	}
	{p++; goto _out; }
}
	break;
	case 285:
	{{p = ((te))-1;}
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }
	break;
	case 287:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 289:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 291:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 293:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 297:
	{{p = ((te))-1;}
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	}
	}
	break;
		}
	}
_again:
	_acts = _lexer_actions + _lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
	{ts = 0;}
	break;
		}
	}
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == ( eof_) )
	{
	if ( _lexer_eof_trans[cs] > 0 ) {
		_trans = _lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}
	_out: {}
	}
 return sym.tok;
}
