/* Generated by re2c 1.3 */
//-----------------------------------------------------------------------------
// z80asm preprocessor
// Copyright (C) Paulo Custodio, 2011-2021
// License: GPL3 https://www.gnu.org/licenses/gpl-3.0.html
//-----------------------------------------------------------------------------

#include "cmdline.h"
#include "common.h"
#include "error.h"
#include "option.h"
#include "preproc.h"
#include <cstring>
#include <iostream>
#include <memory>
#include <sstream>
#include <string>
using namespace std;



void usage() {
    cout
            << "z80asm preprocessor (c) Paulo Custodio 2011-2021" << endl
            << endl
            << "Usage: " << PROG << " [options] files..." << endl
            << endl
            << "  options:" << endl
            << "  -Dvar[=value] define variable, default value is 1" << endl
            << "  -Idir         apppend directory to include path" << endl
            << "  -ucase        convert identifiers to upper case" << endl
            << "  -float=type   use type when converting floats" << endl
            << "                type: ieee32, ieee64, zx81, zx" << endl
            << "  -v            verbose" << endl;
}

void parse_env_args(const string& envvar) {
    const char* env_args = getenv(envvar.c_str());
    if (env_args) {
        // -v option was not read yet
        if (strstr(env_args, "-v"))
            cout << "Processing environment variable: "
                 << envvar << "=" << env_args << endl;
        istringstream ss{ env_args };
        string arg;
        while (ss >> arg)
            parse_cmdline_arg(arg);		// may throw
    }
}

void parse_cmdline_arg(const string& arg) {
    const char* YYCURSOR = arg.c_str(), * YYMARKER, * p1, * p2, * p3, * p4;
    const char* yyt1{ nullptr }, * yyt2{ nullptr };
    
		{
			char yych;
			yych = *YYCURSOR;
			switch (yych) {
			case 0x00:	goto yy2;
			case '-':	goto yy6;
			default:
				yyt1 = YYCURSOR;
				goto yy4;
			}
yy2:
			++YYCURSOR;
			{ return; }
yy4:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy8;
			goto yy4;
yy6:
			yych = *(YYMARKER = ++YYCURSOR);
			switch (yych) {
			case 'D':	goto yy10;
			case 'I':	goto yy12;
			case 'f':	goto yy13;
			case 'u':	goto yy14;
			case 'v':	goto yy15;
			default:	goto yy7;
			}
yy7:
			{ goto error; }
yy8:
			++YYCURSOR;
			p1 = yyt1;
			p2 = YYCURSOR - 1;
			{ preproc_file(string(p1,p2)); return; }
yy10:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'A':
			case 'B':
			case 'C':
			case 'D':
			case 'E':
			case 'F':
			case 'G':
			case 'H':
			case 'I':
			case 'J':
			case 'K':
			case 'L':
			case 'M':
			case 'N':
			case 'O':
			case 'P':
			case 'Q':
			case 'R':
			case 'S':
			case 'T':
			case 'U':
			case 'V':
			case 'W':
			case 'X':
			case 'Y':
			case 'Z':
			case '_':
			case 'a':
			case 'b':
			case 'c':
			case 'd':
			case 'e':
			case 'f':
			case 'g':
			case 'h':
			case 'i':
			case 'j':
			case 'k':
			case 'l':
			case 'm':
			case 'n':
			case 'o':
			case 'p':
			case 'q':
			case 'r':
			case 's':
			case 't':
			case 'u':
			case 'v':
			case 'w':
			case 'x':
			case 'y':
			case 'z':
				yyt1 = YYCURSOR;
				goto yy16;
			default:	goto yy11;
			}
yy11:
			YYCURSOR = YYMARKER;
			goto yy7;
yy12:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy11;
			yyt1 = YYCURSOR;
			goto yy18;
yy13:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'l':	goto yy20;
			default:	goto yy11;
			}
yy14:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'c':	goto yy21;
			default:	goto yy11;
			}
yy15:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy22;
			goto yy11;
yy16:
			yych = *++YYCURSOR;
			switch (yych) {
			case 0x00:	goto yy24;
			case '.':
			case '0':
			case '1':
			case '2':
			case '3':
			case '4':
			case '5':
			case '6':
			case '7':
			case '8':
			case '9':
			case 'A':
			case 'B':
			case 'C':
			case 'D':
			case 'E':
			case 'F':
			case 'G':
			case 'H':
			case 'I':
			case 'J':
			case 'K':
			case 'L':
			case 'M':
			case 'N':
			case 'O':
			case 'P':
			case 'Q':
			case 'R':
			case 'S':
			case 'T':
			case 'U':
			case 'V':
			case 'W':
			case 'X':
			case 'Y':
			case 'Z':
			case '_':
			case 'a':
			case 'b':
			case 'c':
			case 'd':
			case 'e':
			case 'f':
			case 'g':
			case 'h':
			case 'i':
			case 'j':
			case 'k':
			case 'l':
			case 'm':
			case 'n':
			case 'o':
			case 'p':
			case 'q':
			case 'r':
			case 's':
			case 't':
			case 'u':
			case 'v':
			case 'w':
			case 'x':
			case 'y':
			case 'z':	goto yy16;
			case '=':	goto yy26;
			default:	goto yy11;
			}
yy18:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy27;
			goto yy18;
yy20:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'o':	goto yy29;
			default:	goto yy11;
			}
yy21:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'a':	goto yy30;
			default:	goto yy11;
			}
yy22:
			++YYCURSOR;
			{ g_options.verbose = true; return; }
yy24:
			++YYCURSOR;
			p1 = yyt1;
			p2 = YYCURSOR - 1;
			{
    				g_options.macros.add(
    					make_shared<Macro>(string(p1,p2), "1"));
    				return;
    			}
yy26:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy11;
			yyt2 = YYCURSOR;
			goto yy31;
yy27:
			++YYCURSOR;
			p1 = yyt1;
			p2 = YYCURSOR - 1;
			{
    				g_options.include_path.push_back(string(p1,p2));
    				return;
    			}
yy29:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'a':	goto yy33;
			default:	goto yy11;
			}
yy30:
			yych = *++YYCURSOR;
			switch (yych) {
			case 's':	goto yy34;
			default:	goto yy11;
			}
yy31:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy35;
			goto yy31;
yy33:
			yych = *++YYCURSOR;
			switch (yych) {
			case 't':	goto yy37;
			default:	goto yy11;
			}
yy34:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'e':	goto yy38;
			default:	goto yy11;
			}
yy35:
			++YYCURSOR;
			p1 = yyt1;
			p3 = yyt2;
			p2 = yyt2 - 1;
			p4 = YYCURSOR - 1;
			{
    				g_options.macros.add(
    					make_shared<Macro>(string(p1,p2), string(p3,p4)));
    				return;
    			}
yy37:
			yych = *++YYCURSOR;
			switch (yych) {
			case '=':	goto yy39;
			default:	goto yy11;
			}
yy38:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy40;
			goto yy11;
yy39:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'i':	goto yy42;
			case 'z':	goto yy43;
			default:	goto yy11;
			}
yy40:
			++YYCURSOR;
			{ g_options.ucase = true; return; }
yy42:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'e':	goto yy44;
			default:	goto yy11;
			}
yy43:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'x':	goto yy45;
			default:	goto yy11;
			}
yy44:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'e':	goto yy46;
			default:	goto yy11;
			}
yy45:
			yych = *++YYCURSOR;
			switch (yych) {
			case 0x00:	goto yy47;
			case '8':	goto yy49;
			default:	goto yy11;
			}
yy46:
			yych = *++YYCURSOR;
			switch (yych) {
			case 'e':	goto yy50;
			default:	goto yy11;
			}
yy47:
			++YYCURSOR;
			{ g_options.float_type = FloatType::ZX; return; }
yy49:
			yych = *++YYCURSOR;
			switch (yych) {
			case '1':	goto yy51;
			default:	goto yy11;
			}
yy50:
			yych = *++YYCURSOR;
			switch (yych) {
			case '3':	goto yy52;
			case '6':	goto yy53;
			default:	goto yy11;
			}
yy51:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy54;
			goto yy11;
yy52:
			yych = *++YYCURSOR;
			switch (yych) {
			case '2':	goto yy56;
			default:	goto yy11;
			}
yy53:
			yych = *++YYCURSOR;
			switch (yych) {
			case '4':	goto yy57;
			default:	goto yy11;
			}
yy54:
			++YYCURSOR;
			{ g_options.float_type = FloatType::ZX81; return; }
yy56:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy58;
			goto yy11;
yy57:
			yych = *++YYCURSOR;
			if (yych <= 0x00) goto yy60;
			goto yy11;
yy58:
			++YYCURSOR;
			{ g_options.float_type = FloatType::IEEE_Single; return; }
yy60:
			++YYCURSOR;
			{ g_options.float_type = FloatType::IEEE_Double; return; }
		}


error:
    throw Error(ECode::InvalidOption, arg);
}
