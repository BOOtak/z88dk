1     0000              MODULE lshift_c
2     0000              LINE -1, "lshift.c"
-1    0000              
0     0000              
1     0000              ;* * * * *  Small-C/Plus z88dk * * * * *
2     0000              ;  Version: 11355-cb221cd3e-20180328
3     0000              ;
4     0000              ;	Reconstructed for z80 Module Assembler
5     0000              ;
6     0000              ;	Module compile time: Thu Mar 29 19:58:51 2018
7     0000              
8     0000              
9     0000              
10    0000              	MODULE	lshift
11    0000              
12    0000              
13    0000              	INCLUDE "z80_crt0.hdr"
1     0000              ;
2     0000              ;	Header file which contains all required variables from the
3     0000              ;	startup that need to be exposed to individual C files
4     0000              ;
5     0000              ;	Stick in this file any routines which are needed or implicitly
6     0000              ;	implied by sccz80.
7     0000              ;
8     0000              ;       This file is included by every module
9     0000              ;       To handle multi module programs which use floating point
10    0000              ;       routines in different modules, we have got rid of
11    0000              ;       the conditional assembly around the float routines
12    0000              ;
13    0000              ;	$Id: z80_crt0.hdr,v 1.12 2015-11-24 06:47:17 stefano Exp $
14    0000              
15    0000              	EXTERN    base_graphics	; Address of graphics screen
16    0000              
17    0000              	EXTERN	_cpfar2near	; Far->near conversion (z88)
18    0000              	EXTERN	packintrout	; Process interrupt (z88 apps)
19    0000              
20    0000              	EXTERN    l_dcal		; jp(hl)
21    0000              	EXTERN    cleanup		; cleanup before program exit
22    0000              
23    0000              
24    0000              	EXTERN     l_jphl        ; another jp(hl)
25    0000              	EXTERN     l_jpix        ; jp(ix)
26    0000              	EXTERN     l_jpiy        ; jp(iy)
27    0000              
28    0000              	EXTERN     l_ldi
29    0000              	EXTERN     l_ldi_128
30    0000              	EXTERN     l_ldi_256
31    0000              
32    0000              	EXTERN     l_outi
33    0000              	EXTERN     l_outi_128
34    0000              	EXTERN     l_outi_256
35    0000              
36    0000              
37    0000              ;------------------------------------
38    0000              ; Scopes for integer library routines
39    0000              ;------------------------------------
40    0000              
41    0000              	EXTERN    l_getptr		;Get 3 byte pointer
42    0000              	EXTERN    l_putptr		;Put 3 byte pointer
43    0000              	EXTERN    l_gchar		;Get signed char
44    0000              	EXTERN    l_gcharsp	;Get signed char  (peephole opt)
45    0000              	EXTERN    l_gcharspsp	;Get signed char and push  (peephole opt)
46    0000              	EXTERN    l_g2charspsp	;Get 2 signed char and push  (peephole opt)
47    0000              	EXTERN    l_sxt		;Sign extend char
48    0000              	EXTERN    l_gint		;Get int
49    0000              	EXTERN    l_gintsp		;Get int (peephole opt)
50    0000              	EXTERN    l_gintspchar	;Get int,char (peephole opt)
51    0000              	EXTERN    l_gintspsp	;Get int and push (peephole opt)
52    0000              	EXTERN    l_g2intspsp	;Get 2 int and push (peephole opt)
53    0000              	EXTERN    l_gint7de	;Get int, multiply by 7 and add from SP by de
54    0000              	EXTERN    l_gint_eq	;Get int and test == 0
55    0000              	EXTERN    l_ghtonsint	;Get reverse order int
56    0000              	EXTERN    l_pint		;Put int
57    0000              	EXTERN    l_pint_eq	;Put int and test == 0
58    0000              	EXTERN    l_pint_pop	;Put int and pop place address
59    0000              	EXTERN    l_pint_ex	;Put int hl to addr de return addr in hl
60    0000              	EXTERN    l_or		;Int logical or
61    0000              	EXTERN    l_xor		;Int logical xor
62    0000              	EXTERN    l_and		;Int logical and
63    0000              	EXTERN    l_eq		;Int equality
64    0000              	EXTERN    l_ne		;Int inequality
65    0000              	EXTERN    l_gt		;Int signed >
66    0000              	EXTERN    l_le		;Int signed <=
67    0000              	EXTERN    l_ge		;Int signed >=
68    0000              	EXTERN    l_lt		;Int signed <
69    0000              	EXTERN    l_uge		;Int unsigned >=
70    0000              	EXTERN    l_ult		;Int unsigned <
71    0000              	EXTERN    l_ugt		;Int unsigned >
72    0000              	EXTERN    l_ule		;Int unsigned <=
73    0000              	EXTERN    l_cmp		;Int signed compare
74    0000              	EXTERN    l_ucmp		;Int unsigned compare
75    0000              	EXTERN    l_asr		;Int signed >>
76    0000              	EXTERN    l_asr_hl_by_e		;Int signed >>
77    0000              	EXTERN    l_asr_u		;Int unsigned >>
78    0000              	EXTERN    l_asr_u_hl_by_e		;Int unsigned >>
79    0000              	EXTERN    l_asl		;Int <<
80    0000              	EXTERN    l_sub		;Int subtract
81    0000              	EXTERN    l_neg		;Int negate
82    0000              	EXTERN    l_com		;Int ~
83    0000              	EXTERN    l_lneg		;Int logical negate
84    0000              	EXTERN    l_bool		;Int boolean tetst
85    0000              	EXTERN    l_cm_de		;
86    0000              	EXTERN    l_cm_bc
87    0000              	EXTERN    l_deneg
88    0000              	EXTERN    l_bcneg
89    0000              	EXTERN    l_case		;Integer case
90    0000              	EXTERN    l_mult		;Integer *
91    0000              	EXTERN    l_div		;Integer signed /
92    0000              	EXTERN    l_div_u		;Integer unsigned /
93    0000              
94    0000              ;------------------
95    0000              ;Long functions now
96    0000              ;------------------
97    0000              
98    0000              	EXTERN     lpush2		;Push a long under the stack
99    0000              	EXTERN     l_int2long_s	;Int->long signed conversion
100   0000              	EXTERN     l_int2long_s_float	;Int->long->float signed conversion (optimizer: use -O3)
101   0000              	EXTERN     l_long2int_s	;Long->int signed conversion
102   0000              	EXTERN     l_glong		;Get long
103   0000              	EXTERN     l_glonghlp		;Get pointer, then get long
104   0000              	EXTERN     l_glong2sp	;Get long and copy on stack (peephole opt)
105   0000              	EXTERN     l_glong2sp_hlp
106   0000              	EXTERN     l_long_add
107   0000              	EXTERN     l_long_and
108   0000              	EXTERN     l_long_asl
109   0000              	EXTERN     l_long_asr
110   0000              	EXTERN     l_long_aslo	;Long << shift in c
111   0000              	EXTERN     l_long_asro	;Long >> shift in c (signed)
112   0000              	EXTERN     l_long_bool
113   0000              	EXTERN     l_long_cmp
114   0000              	EXTERN     l_long_com
115   0000              	EXTERN     l_long_eq
116   0000              	EXTERN     l_long_ge
117   0000              	EXTERN     l_long_gt
118   0000              	EXTERN     l_long_le
119   0000              	EXTERN     l_long_lneg
120   0000              	EXTERN     l_long_lt
121   0000              	EXTERN     l_long_ne
122   0000              	EXTERN     l_long_neg
123   0000              	EXTERN     l_long_or
124   0000              	EXTERN     l_long_sub
125   0000              	EXTERN     l_long_ucmp
126   0000              	EXTERN     l_long_uge
127   0000              	EXTERN     l_long_ugt
128   0000              	EXTERN     l_long_ule
129   0000              	EXTERN     l_long_ult
130   0000              	EXTERN     l_long_xor
131   0000              	EXTERN     l_plong
132   0000              	EXTERN     l_inclong	;Increment long
133   0000              	EXTERN     l_declong	;Decrement long
134   0000              	EXTERN     l_long_div
135   0000              	EXTERN     l_long_div_u
136   0000              	EXTERN     l_long_mult
137   0000              	EXTERN     l_long_asr_u	;Long unsigned >>
138   0000              	EXTERN     l_long_asr_uo	;Long unsigned >> shift in c
139   0000              	EXTERN     l_long_case
140   0000              
141   0000              ;--------------------------------------------------------------
142   0000              ; Floating point support routines, mostly in library
143   0000              ;--------------------------------------------------------------
144   0000              
145   0000              	EXTERN	dadd
146   0000              	EXTERN	ddiv
147   0000              	EXTERN	dsub
148   0000              	EXTERN	dmul
149   0000              
150   0000              	EXTERN	dge
151   0000              	EXTERN	dgt
152   0000              	EXTERN	dleq
153   0000              	EXTERN	dlt
154   0000              	EXTERN	deq
155   0000              	EXTERN	dne
156   0000              
157   0000              	EXTERN	minusfa		;FA=-FA
158   0000              
159   0000              	EXTERN	dswap		;Exchange FA with top of stack
160   0000              	EXTERN   	float		;Convert int to float
161   0000              	EXTERN   	ufloat		;unsigned int to float
162   0000              	EXTERN   	ifix		;Convert float to int
163   0000              
164   0000              	EXTERN	dstore		;FA->(de)
165   0000              	EXTERN	dload		;FA<-(hl)
166   0000              	EXTERN	dldpsh		;(hl)->(stack)
167   0000              	EXTERN	dpush		;FA->(stack)
168   0000              	EXTERN	dpush2		;FA->(stack under)
169   0000              	EXTERN	dpush3		;FA->(stack under,long)
170   0000              
171   0000              	EXTERN	fa		;may not be needed in this file
172   0000              	EXTERN	extra		;dittot
173   0000              	EXTERN  	__atof2		;string->fa convsersion
174   0000              
175   0000              
176   0000              ;--------------------------------------------------
177   0000              ; Routines for picking up variables from far memory
178   0000              ;--------------------------------------------------
179   0000              
180   0000              	EXTERN	lp_gchar
181   0000              	EXTERN	lp_gdoub
182   0000              	EXTERN	lp_gint
183   0000              	EXTERN	lp_glong
184   0000              	EXTERN	lp_gptr
185   0000              	EXTERN	lp_pchar
186   0000              	EXTERN	lp_pdoub
187   0000              	EXTERN	lp_pint
188   0000              	EXTERN	lp_plong
189   0000              	EXTERN	lp_pptr
190   0000              
191   0000              	EXTERN  l_farcall	; Long call
192   0000              
193   0000              
194   0000              ;-------------------
195   0000              ; Routines for SDCC
196   0000              ;-------------------
197   0000              
198   0000              	EXTERN     __divsint_rrx_s
199   0000              	EXTERN     __divsint_rrx_hds
200   0000              	EXTERN     __divuint_rrx_s
201   0000              	EXTERN     __divuint_rrx_hds
202   0000              	EXTERN     __divsuchar_rrx_s
203   0000              	EXTERN     __divuschar_rrx_s
204   0000              	EXTERN     __divuchar_rrx_s
205   0000              	EXTERN     __divuchar_rrx_hds
206   0000              	EXTERN     __moduchar_rrx_s
207   0000              	EXTERN     __moduchar_rrx_hds
208   0000              	EXTERN     __moduschar_rrx_s
209   0000              	EXTERN     __modsuchar_rrx_s
210   0000                  EXTERN     __modschar_rrx_s
211   0000              	EXTERN     __modschar_rrx_hds
212   0000              	EXTERN     __modsint_rrx_s
213   0000              	EXTERN     __modsint_rrx_hds
214   0000              	EXTERN     __moduint_rrx_s
215   0000              	EXTERN     __moduint_rrx_hds
216   0000              	EXTERN     __get_remainder
217   0000              	EXTERN     __divunsigned
218   0000                  EXTERN     __div_signexte
219   0000              	EXTERN     __divu16
220   0000              	EXTERN     __div16
221   0000              	EXTERN     __div8
222   0000              	EXTERN     __muluchar_rrx_s
223   0000              	EXTERN     __muluchar_rrx_hds
224   0000              	EXTERN     __mulsuchar_rrx_s
225   0000              	EXTERN     __muluschar_rrx_s
226   0000              	EXTERN     __mulschar_rrx_s
227   0000              	EXTERN     __mulschar_rrx_hds
228   0000              	EXTERN     __mulint_rrx_s
229   0000              	EXTERN     __mulint_rrx_hds
230   0000              	EXTERN     __mul16
231   0000              	EXTERN    	__rrulong_rrx_s
232   0000              	EXTERN    	__rrslong_rrx_s
233   0000              	EXTERN    	__rlslong_rrx_s
234   0000              	EXTERN    	__rlulong_rrx_s
235   0000              
236   0000              	EXTERN		l_push_di
237   0000              	EXTERN		l_pop_ei
238   0000              
14    0000              
15    0000              
16    0000              	SECTION	code_compiler
17    0000              
18    0000              ; Function test_lshift16_var flags 0x00000200 __smallc
19    0000              ; void test_lshift16_var()
20    0000              ._test_lshift16_var
21    0000  21 01 00    	ld	hl,1	;const
22    0003  E5          	push	hl
23    0004  2B          	dec	hl
24    0005  E5          	push	hl
25    0006  21 02 00    	ld	hl,2	;const
26    0009  CD 00 00    	call	l_gintspsp	;
27    000C  C1          	pop	bc
28    000D  E1          	pop	hl
29    000E  E5          	push	hl
30    000F  C5          	push	bc
31    0010  D1          	pop	de
32    0011  CD 00 00    	call	l_asl
33    0014  11 01 00    	ld	de,1
34    0017  A7          	and	a
35    0018  ED 52       	sbc	hl,de
36    001A  21 01 00    	ld	hl,1	;const
37    001D  28 01       	jr	z,ASMPC+3
38    001F  2B          	dec	hl
39    0020  E5          	push	hl
40    0021  21 00 00    	ld	hl,i_1+0
41    0024  E5          	push	hl
42    0025  21 0B 00    	ld	hl,11	;const
43    0028  E5          	push	hl
44    0029  21 09 00    	ld	hl,i_1+9
45    002C  E5          	push	hl
46    002D  CD 00 00    	call	_Assert_real
47    0030  C1          	pop	bc
48    0031  C1          	pop	bc
49    0032  C1          	pop	bc
50    0033  C1          	pop	bc
51    0034  E1          	pop	hl
52    0035  23          	inc	hl
53    0036  E5          	push	hl
54    0037  21 02 00    	ld	hl,2	;const
55    003A  CD 00 00    	call	l_gintspsp	;
56    003D  C1          	pop	bc
57    003E  E1          	pop	hl
58    003F  E5          	push	hl
59    0040  C5          	push	bc
60    0041  D1          	pop	de
61    0042  CD 00 00    	call	l_asl
62    0045  11 02 00    	ld	de,2
63    0048  A7          	and	a
64    0049  ED 52       	sbc	hl,de
65    004B  21 01 00    	ld	hl,1	;const
66    004E  28 01       	jr	z,ASMPC+3
67    0050  2B          	dec	hl
68    0051  E5          	push	hl
69    0052  21 00 00    	ld	hl,i_1+0
70    0055  E5          	push	hl
71    0056  21 0D 00    	ld	hl,13	;const
72    0059  E5          	push	hl
73    005A  21 0D 00    	ld	hl,i_1+13
74    005D  E5          	push	hl
75    005E  CD 00 00    	call	_Assert_real
76    0061  C1          	pop	bc
77    0062  C1          	pop	bc
78    0063  C1          	pop	bc
79    0064  C1          	pop	bc
80    0065  E1          	pop	hl
81    0066  23          	inc	hl
82    0067  E5          	push	hl
83    0068  21 02 00    	ld	hl,2	;const
84    006B  CD 00 00    	call	l_gintspsp	;
85    006E  C1          	pop	bc
86    006F  E1          	pop	hl
87    0070  E5          	push	hl
88    0071  C5          	push	bc
89    0072  D1          	pop	de
90    0073  CD 00 00    	call	l_asl
91    0076  11 04 00    	ld	de,4
92    0079  A7          	and	a
93    007A  ED 52       	sbc	hl,de
94    007C  21 01 00    	ld	hl,1	;const
95    007F  28 01       	jr	z,ASMPC+3
96    0081  2B          	dec	hl
97    0082  E5          	push	hl
98    0083  21 00 00    	ld	hl,i_1+0
99    0086  E5          	push	hl
100   0087  21 0F 00    	ld	hl,15	;const
101   008A  E5          	push	hl
102   008B  21 11 00    	ld	hl,i_1+17
103   008E  E5          	push	hl
104   008F  CD 00 00    	call	_Assert_real
105   0092  C1          	pop	bc
106   0093  C1          	pop	bc
107   0094  C1          	pop	bc
108   0095  C1          	pop	bc
109   0096  E1          	pop	hl
110   0097  23          	inc	hl
111   0098  E5          	push	hl
112   0099  21 02 00    	ld	hl,2	;const
113   009C  CD 00 00    	call	l_gintspsp	;
114   009F  C1          	pop	bc
115   00A0  E1          	pop	hl
116   00A1  E5          	push	hl
117   00A2  C5          	push	bc
118   00A3  D1          	pop	de
119   00A4  CD 00 00    	call	l_asl
120   00A7  11 08 00    	ld	de,8
121   00AA  A7          	and	a
122   00AB  ED 52       	sbc	hl,de
123   00AD  21 01 00    	ld	hl,1	;const
124   00B0  28 01       	jr	z,ASMPC+3
125   00B2  2B          	dec	hl
126   00B3  E5          	push	hl
127   00B4  21 00 00    	ld	hl,i_1+0
128   00B7  E5          	push	hl
129   00B8  21 11 00    	ld	hl,17	;const
130   00BB  E5          	push	hl
131   00BC  21 15 00    	ld	hl,i_1+21
132   00BF  E5          	push	hl
133   00C0  CD 00 00    	call	_Assert_real
134   00C3  C1          	pop	bc
135   00C4  C1          	pop	bc
136   00C5  C1          	pop	bc
137   00C6  C1          	pop	bc
138   00C7  E1          	pop	hl
139   00C8  23          	inc	hl
140   00C9  E5          	push	hl
141   00CA  21 02 00    	ld	hl,2	;const
142   00CD  CD 00 00    	call	l_gintspsp	;
143   00D0  C1          	pop	bc
144   00D1  E1          	pop	hl
145   00D2  E5          	push	hl
146   00D3  C5          	push	bc
147   00D4  D1          	pop	de
148   00D5  CD 00 00    	call	l_asl
149   00D8  11 10 00    	ld	de,16
150   00DB  A7          	and	a
151   00DC  ED 52       	sbc	hl,de
152   00DE  21 01 00    	ld	hl,1	;const
153   00E1  28 01       	jr	z,ASMPC+3
154   00E3  2B          	dec	hl
155   00E4  E5          	push	hl
156   00E5  21 00 00    	ld	hl,i_1+0
157   00E8  E5          	push	hl
158   00E9  21 13 00    	ld	hl,19	;const
159   00EC  E5          	push	hl
160   00ED  21 19 00    	ld	hl,i_1+25
161   00F0  E5          	push	hl
162   00F1  CD 00 00    	call	_Assert_real
163   00F4  C1          	pop	bc
164   00F5  C1          	pop	bc
165   00F6  C1          	pop	bc
166   00F7  C1          	pop	bc
167   00F8  E1          	pop	hl
168   00F9  23          	inc	hl
169   00FA  E5          	push	hl
170   00FB  21 02 00    	ld	hl,2	;const
171   00FE  CD 00 00    	call	l_gintspsp	;
172   0101  C1          	pop	bc
173   0102  E1          	pop	hl
174   0103  E5          	push	hl
175   0104  C5          	push	bc
176   0105  D1          	pop	de
177   0106  CD 00 00    	call	l_asl
178   0109  11 20 00    	ld	de,32
179   010C  A7          	and	a
180   010D  ED 52       	sbc	hl,de
181   010F  21 01 00    	ld	hl,1	;const
182   0112  28 01       	jr	z,ASMPC+3
183   0114  2B          	dec	hl
184   0115  E5          	push	hl
185   0116  21 00 00    	ld	hl,i_1+0
186   0119  E5          	push	hl
187   011A  21 15 00    	ld	hl,21	;const
188   011D  E5          	push	hl
189   011E  21 1D 00    	ld	hl,i_1+29
190   0121  E5          	push	hl
191   0122  CD 00 00    	call	_Assert_real
192   0125  C1          	pop	bc
193   0126  C1          	pop	bc
194   0127  C1          	pop	bc
195   0128  C1          	pop	bc
196   0129  E1          	pop	hl
197   012A  23          	inc	hl
198   012B  E5          	push	hl
199   012C  21 02 00    	ld	hl,2	;const
200   012F  CD 00 00    	call	l_gintspsp	;
201   0132  C1          	pop	bc
202   0133  E1          	pop	hl
203   0134  E5          	push	hl
204   0135  C5          	push	bc
205   0136  D1          	pop	de
206   0137  CD 00 00    	call	l_asl
207   013A  11 40 00    	ld	de,64
208   013D  A7          	and	a
209   013E  ED 52       	sbc	hl,de
210   0140  21 01 00    	ld	hl,1	;const
211   0143  28 01       	jr	z,ASMPC+3
212   0145  2B          	dec	hl
213   0146  E5          	push	hl
214   0147  21 00 00    	ld	hl,i_1+0
215   014A  E5          	push	hl
216   014B  21 17 00    	ld	hl,23	;const
217   014E  E5          	push	hl
218   014F  21 21 00    	ld	hl,i_1+33
219   0152  E5          	push	hl
220   0153  CD 00 00    	call	_Assert_real
221   0156  C1          	pop	bc
222   0157  C1          	pop	bc
223   0158  C1          	pop	bc
224   0159  C1          	pop	bc
225   015A  E1          	pop	hl
226   015B  23          	inc	hl
227   015C  E5          	push	hl
228   015D  21 02 00    	ld	hl,2	;const
229   0160  CD 00 00    	call	l_gintspsp	;
230   0163  C1          	pop	bc
231   0164  E1          	pop	hl
232   0165  E5          	push	hl
233   0166  C5          	push	bc
234   0167  D1          	pop	de
235   0168  CD 00 00    	call	l_asl
236   016B  11 80 00    	ld	de,128
237   016E  A7          	and	a
238   016F  ED 52       	sbc	hl,de
239   0171  21 01 00    	ld	hl,1	;const
240   0174  28 01       	jr	z,ASMPC+3
241   0176  2B          	dec	hl
242   0177  E5          	push	hl
243   0178  21 00 00    	ld	hl,i_1+0
244   017B  E5          	push	hl
245   017C  21 19 00    	ld	hl,25	;const
246   017F  E5          	push	hl
247   0180  21 25 00    	ld	hl,i_1+37
248   0183  E5          	push	hl
249   0184  CD 00 00    	call	_Assert_real
250   0187  C1          	pop	bc
251   0188  C1          	pop	bc
252   0189  C1          	pop	bc
253   018A  C1          	pop	bc
254   018B  E1          	pop	hl
255   018C  23          	inc	hl
256   018D  E5          	push	hl
257   018E  21 02 00    	ld	hl,2	;const
258   0191  CD 00 00    	call	l_gintspsp	;
259   0194  C1          	pop	bc
260   0195  E1          	pop	hl
261   0196  E5          	push	hl
262   0197  C5          	push	bc
263   0198  D1          	pop	de
264   0199  CD 00 00    	call	l_asl
265   019C  11 00 01    	ld	de,256
266   019F  A7          	and	a
267   01A0  ED 52       	sbc	hl,de
268   01A2  21 01 00    	ld	hl,1	;const
269   01A5  28 01       	jr	z,ASMPC+3
270   01A7  2B          	dec	hl
271   01A8  E5          	push	hl
272   01A9  21 00 00    	ld	hl,i_1+0
273   01AC  E5          	push	hl
274   01AD  21 1B 00    	ld	hl,27	;const
275   01B0  E5          	push	hl
276   01B1  21 29 00    	ld	hl,i_1+41
277   01B4  E5          	push	hl
278   01B5  CD 00 00    	call	_Assert_real
279   01B8  C1          	pop	bc
280   01B9  C1          	pop	bc
281   01BA  C1          	pop	bc
282   01BB  C1          	pop	bc
283   01BC  E1          	pop	hl
284   01BD  23          	inc	hl
285   01BE  E5          	push	hl
286   01BF  21 02 00    	ld	hl,2	;const
287   01C2  CD 00 00    	call	l_gintspsp	;
288   01C5  C1          	pop	bc
289   01C6  E1          	pop	hl
290   01C7  E5          	push	hl
291   01C8  C5          	push	bc
292   01C9  D1          	pop	de
293   01CA  CD 00 00    	call	l_asl
294   01CD  11 00 02    	ld	de,512
295   01D0  A7          	and	a
296   01D1  ED 52       	sbc	hl,de
297   01D3  21 01 00    	ld	hl,1	;const
298   01D6  28 01       	jr	z,ASMPC+3
299   01D8  2B          	dec	hl
300   01D9  E5          	push	hl
301   01DA  21 00 00    	ld	hl,i_1+0
302   01DD  E5          	push	hl
303   01DE  21 1D 00    	ld	hl,29	;const
304   01E1  E5          	push	hl
305   01E2  21 2D 00    	ld	hl,i_1+45
306   01E5  E5          	push	hl
307   01E6  CD 00 00    	call	_Assert_real
308   01E9  C1          	pop	bc
309   01EA  C1          	pop	bc
310   01EB  C1          	pop	bc
311   01EC  C1          	pop	bc
312   01ED  E1          	pop	hl
313   01EE  23          	inc	hl
314   01EF  E5          	push	hl
315   01F0  21 02 00    	ld	hl,2	;const
316   01F3  CD 00 00    	call	l_gintspsp	;
317   01F6  C1          	pop	bc
318   01F7  E1          	pop	hl
319   01F8  E5          	push	hl
320   01F9  C5          	push	bc
321   01FA  D1          	pop	de
322   01FB  CD 00 00    	call	l_asl
323   01FE  11 00 04    	ld	de,1024
324   0201  A7          	and	a
325   0202  ED 52       	sbc	hl,de
326   0204  21 01 00    	ld	hl,1	;const
327   0207  28 01       	jr	z,ASMPC+3
328   0209  2B          	dec	hl
329   020A  E5          	push	hl
330   020B  21 00 00    	ld	hl,i_1+0
331   020E  E5          	push	hl
332   020F  21 1F 00    	ld	hl,31	;const
333   0212  E5          	push	hl
334   0213  21 31 00    	ld	hl,i_1+49
335   0216  E5          	push	hl
336   0217  CD 00 00    	call	_Assert_real
337   021A  C1          	pop	bc
338   021B  C1          	pop	bc
339   021C  C1          	pop	bc
340   021D  C1          	pop	bc
341   021E  E1          	pop	hl
342   021F  23          	inc	hl
343   0220  E5          	push	hl
344   0221  21 02 00    	ld	hl,2	;const
345   0224  CD 00 00    	call	l_gintspsp	;
346   0227  C1          	pop	bc
347   0228  E1          	pop	hl
348   0229  E5          	push	hl
349   022A  C5          	push	bc
350   022B  D1          	pop	de
351   022C  CD 00 00    	call	l_asl
352   022F  11 00 08    	ld	de,2048
353   0232  A7          	and	a
354   0233  ED 52       	sbc	hl,de
355   0235  21 01 00    	ld	hl,1	;const
356   0238  28 01       	jr	z,ASMPC+3
357   023A  2B          	dec	hl
358   023B  E5          	push	hl
359   023C  21 00 00    	ld	hl,i_1+0
360   023F  E5          	push	hl
361   0240  21 21 00    	ld	hl,33	;const
362   0243  E5          	push	hl
363   0244  21 36 00    	ld	hl,i_1+54
364   0247  E5          	push	hl
365   0248  CD 00 00    	call	_Assert_real
366   024B  C1          	pop	bc
367   024C  C1          	pop	bc
368   024D  C1          	pop	bc
369   024E  C1          	pop	bc
370   024F  E1          	pop	hl
371   0250  23          	inc	hl
372   0251  E5          	push	hl
373   0252  21 02 00    	ld	hl,2	;const
374   0255  CD 00 00    	call	l_gintspsp	;
375   0258  C1          	pop	bc
376   0259  E1          	pop	hl
377   025A  E5          	push	hl
378   025B  C5          	push	bc
379   025C  D1          	pop	de
380   025D  CD 00 00    	call	l_asl
381   0260  11 00 10    	ld	de,4096
382   0263  A7          	and	a
383   0264  ED 52       	sbc	hl,de
384   0266  21 01 00    	ld	hl,1	;const
385   0269  28 01       	jr	z,ASMPC+3
386   026B  2B          	dec	hl
387   026C  E5          	push	hl
388   026D  21 00 00    	ld	hl,i_1+0
389   0270  E5          	push	hl
390   0271  21 23 00    	ld	hl,35	;const
391   0274  E5          	push	hl
392   0275  21 3B 00    	ld	hl,i_1+59
393   0278  E5          	push	hl
394   0279  CD 00 00    	call	_Assert_real
395   027C  C1          	pop	bc
396   027D  C1          	pop	bc
397   027E  C1          	pop	bc
398   027F  C1          	pop	bc
399   0280  E1          	pop	hl
400   0281  23          	inc	hl
401   0282  E5          	push	hl
402   0283  21 02 00    	ld	hl,2	;const
403   0286  CD 00 00    	call	l_gintspsp	;
404   0289  C1          	pop	bc
405   028A  E1          	pop	hl
406   028B  E5          	push	hl
407   028C  C5          	push	bc
408   028D  D1          	pop	de
409   028E  CD 00 00    	call	l_asl
410   0291  11 00 20    	ld	de,8192
411   0294  A7          	and	a
412   0295  ED 52       	sbc	hl,de
413   0297  21 01 00    	ld	hl,1	;const
414   029A  28 01       	jr	z,ASMPC+3
415   029C  2B          	dec	hl
416   029D  E5          	push	hl
417   029E  21 00 00    	ld	hl,i_1+0
418   02A1  E5          	push	hl
419   02A2  21 25 00    	ld	hl,37	;const
420   02A5  E5          	push	hl
421   02A6  21 40 00    	ld	hl,i_1+64
422   02A9  E5          	push	hl
423   02AA  CD 00 00    	call	_Assert_real
424   02AD  C1          	pop	bc
425   02AE  C1          	pop	bc
426   02AF  C1          	pop	bc
427   02B0  C1          	pop	bc
428   02B1  E1          	pop	hl
429   02B2  23          	inc	hl
430   02B3  E5          	push	hl
431   02B4  21 02 00    	ld	hl,2	;const
432   02B7  CD 00 00    	call	l_gintspsp	;
433   02BA  C1          	pop	bc
434   02BB  E1          	pop	hl
435   02BC  E5          	push	hl
436   02BD  C5          	push	bc
437   02BE  D1          	pop	de
438   02BF  CD 00 00    	call	l_asl
439   02C2  11 00 40    	ld	de,16384
440   02C5  A7          	and	a
441   02C6  ED 52       	sbc	hl,de
442   02C8  21 01 00    	ld	hl,1	;const
443   02CB  28 01       	jr	z,ASMPC+3
444   02CD  2B          	dec	hl
445   02CE  E5          	push	hl
446   02CF  21 00 00    	ld	hl,i_1+0
447   02D2  E5          	push	hl
448   02D3  21 27 00    	ld	hl,39	;const
449   02D6  E5          	push	hl
450   02D7  21 45 00    	ld	hl,i_1+69
451   02DA  E5          	push	hl
452   02DB  CD 00 00    	call	_Assert_real
453   02DE  C1          	pop	bc
454   02DF  C1          	pop	bc
455   02E0  C1          	pop	bc
456   02E1  C1          	pop	bc
457   02E2  E1          	pop	hl
458   02E3  23          	inc	hl
459   02E4  E5          	push	hl
460   02E5  21 02 00    	ld	hl,2	;const
461   02E8  CD 00 00    	call	l_gintspsp	;
462   02EB  C1          	pop	bc
463   02EC  E1          	pop	hl
464   02ED  E5          	push	hl
465   02EE  C5          	push	bc
466   02EF  D1          	pop	de
467   02F0  CD 00 00    	call	l_asl
468   02F3  11 00 80    	ld	de,32768
469   02F6  A7          	and	a
470   02F7  ED 52       	sbc	hl,de
471   02F9  21 01 00    	ld	hl,1	;const
472   02FC  28 01       	jr	z,ASMPC+3
473   02FE  2B          	dec	hl
474   02FF  E5          	push	hl
475   0300  21 00 00    	ld	hl,i_1+0
476   0303  E5          	push	hl
477   0304  21 29 00    	ld	hl,41	;const
478   0307  E5          	push	hl
479   0308  21 4A 00    	ld	hl,i_1+74
480   030B  E5          	push	hl
481   030C  CD 00 00    	call	_Assert_real
482   030F  C1          	pop	bc
483   0310  C1          	pop	bc
484   0311  C1          	pop	bc
485   0312  C1          	pop	bc
486   0313  E1          	pop	hl
487   0314  23          	inc	hl
488   0315  23          	inc	hl
489   0316  E5          	push	hl
490   0317  C1          	pop	bc
491   0318  C1          	pop	bc
492   0319  C9          	ret
493   031A              
494   031A              
495   031A              
496   031A              ; Function test_lshift32_var flags 0x00000200 __smallc
497   031A              ; void test_lshift32_var()
498   031A              ._test_lshift32_var
499   031A  21 01 00    	ld	hl,1	;const
500   031D  11 00 00    	ld	de,0
501   0320  D5          	push	de
502   0321  E5          	push	hl
503   0322  21 00 00    	ld	hl,0	;const
504   0325  E5          	push	hl
505   0326  21 02 00    	ld	hl,2	;const
506   0329  39          	add	hl,sp
507   032A  CD 00 00    	call	l_glong2sp
508   032D  21 04 00    	ld	hl,4	;const
509   0330  39          	add	hl,sp
510   0331  CD 00 00    	call	l_gint	;
511   0334  CD 00 00    	call	l_int2long_s
512   0337  CD 00 00    	call	l_long_asl
513   033A  D5          	push	de
514   033B  E5          	push	hl
515   033C  21 01 00    	ld	hl,1	;const
516   033F  11 00 00    	ld	de,0
517   0342  CD 00 00    	call	l_long_eq
518   0345  E5          	push	hl
519   0346  21 00 00    	ld	hl,i_1+0
520   0349  E5          	push	hl
521   034A  21 36 00    	ld	hl,54	;const
522   034D  E5          	push	hl
523   034E  21 09 00    	ld	hl,i_1+9
524   0351  E5          	push	hl
525   0352  CD 00 00    	call	_Assert_real
526   0355  C1          	pop	bc
527   0356  C1          	pop	bc
528   0357  C1          	pop	bc
529   0358  C1          	pop	bc
530   0359  E1          	pop	hl
531   035A  23          	inc	hl
532   035B  E5          	push	hl
533   035C  21 02 00    	ld	hl,2	;const
534   035F  39          	add	hl,sp
535   0360  CD 00 00    	call	l_glong2sp
536   0363  21 04 00    	ld	hl,4	;const
537   0366  39          	add	hl,sp
538   0367  CD 00 00    	call	l_gint	;
539   036A  CD 00 00    	call	l_int2long_s
540   036D  CD 00 00    	call	l_long_asl
541   0370  D5          	push	de
542   0371  E5          	push	hl
543   0372  21 02 00    	ld	hl,2	;const
544   0375  11 00 00    	ld	de,0
545   0378  CD 00 00    	call	l_long_eq
546   037B  E5          	push	hl
547   037C  21 00 00    	ld	hl,i_1+0
548   037F  E5          	push	hl
549   0380  21 38 00    	ld	hl,56	;const
550   0383  E5          	push	hl
551   0384  21 0D 00    	ld	hl,i_1+13
552   0387  E5          	push	hl
553   0388  CD 00 00    	call	_Assert_real
554   038B  C1          	pop	bc
555   038C  C1          	pop	bc
556   038D  C1          	pop	bc
557   038E  C1          	pop	bc
558   038F  E1          	pop	hl
559   0390  23          	inc	hl
560   0391  E5          	push	hl
561   0392  21 02 00    	ld	hl,2	;const
562   0395  39          	add	hl,sp
563   0396  CD 00 00    	call	l_glong2sp
564   0399  21 04 00    	ld	hl,4	;const
565   039C  39          	add	hl,sp
566   039D  CD 00 00    	call	l_gint	;
567   03A0  CD 00 00    	call	l_int2long_s
568   03A3  CD 00 00    	call	l_long_asl
569   03A6  D5          	push	de
570   03A7  E5          	push	hl
571   03A8  21 04 00    	ld	hl,4	;const
572   03AB  11 00 00    	ld	de,0
573   03AE  CD 00 00    	call	l_long_eq
574   03B1  E5          	push	hl
575   03B2  21 00 00    	ld	hl,i_1+0
576   03B5  E5          	push	hl
577   03B6  21 3A 00    	ld	hl,58	;const
578   03B9  E5          	push	hl
579   03BA  21 11 00    	ld	hl,i_1+17
580   03BD  E5          	push	hl
581   03BE  CD 00 00    	call	_Assert_real
582   03C1  C1          	pop	bc
583   03C2  C1          	pop	bc
584   03C3  C1          	pop	bc
585   03C4  C1          	pop	bc
586   03C5  E1          	pop	hl
587   03C6  23          	inc	hl
588   03C7  E5          	push	hl
589   03C8  21 02 00    	ld	hl,2	;const
590   03CB  39          	add	hl,sp
591   03CC  CD 00 00    	call	l_glong2sp
592   03CF  21 04 00    	ld	hl,4	;const
593   03D2  39          	add	hl,sp
594   03D3  CD 00 00    	call	l_gint	;
595   03D6  CD 00 00    	call	l_int2long_s
596   03D9  CD 00 00    	call	l_long_asl
597   03DC  D5          	push	de
598   03DD  E5          	push	hl
599   03DE  21 08 00    	ld	hl,8	;const
600   03E1  11 00 00    	ld	de,0
601   03E4  CD 00 00    	call	l_long_eq
602   03E7  E5          	push	hl
603   03E8  21 00 00    	ld	hl,i_1+0
604   03EB  E5          	push	hl
605   03EC  21 3C 00    	ld	hl,60	;const
606   03EF  E5          	push	hl
607   03F0  21 15 00    	ld	hl,i_1+21
608   03F3  E5          	push	hl
609   03F4  CD 00 00    	call	_Assert_real
610   03F7  C1          	pop	bc
611   03F8  C1          	pop	bc
612   03F9  C1          	pop	bc
613   03FA  C1          	pop	bc
614   03FB  E1          	pop	hl
615   03FC  23          	inc	hl
616   03FD  E5          	push	hl
617   03FE  21 02 00    	ld	hl,2	;const
618   0401  39          	add	hl,sp
619   0402  CD 00 00    	call	l_glong2sp
620   0405  21 04 00    	ld	hl,4	;const
621   0408  39          	add	hl,sp
622   0409  CD 00 00    	call	l_gint	;
623   040C  CD 00 00    	call	l_int2long_s
624   040F  CD 00 00    	call	l_long_asl
625   0412  D5          	push	de
626   0413  E5          	push	hl
627   0414  21 10 00    	ld	hl,16	;const
628   0417  11 00 00    	ld	de,0
629   041A  CD 00 00    	call	l_long_eq
630   041D  E5          	push	hl
631   041E  21 00 00    	ld	hl,i_1+0
632   0421  E5          	push	hl
633   0422  21 3E 00    	ld	hl,62	;const
634   0425  E5          	push	hl
635   0426  21 19 00    	ld	hl,i_1+25
636   0429  E5          	push	hl
637   042A  CD 00 00    	call	_Assert_real
638   042D  C1          	pop	bc
639   042E  C1          	pop	bc
640   042F  C1          	pop	bc
641   0430  C1          	pop	bc
642   0431  E1          	pop	hl
643   0432  23          	inc	hl
644   0433  E5          	push	hl
645   0434  21 02 00    	ld	hl,2	;const
646   0437  39          	add	hl,sp
647   0438  CD 00 00    	call	l_glong2sp
648   043B  21 04 00    	ld	hl,4	;const
649   043E  39          	add	hl,sp
650   043F  CD 00 00    	call	l_gint	;
651   0442  CD 00 00    	call	l_int2long_s
652   0445  CD 00 00    	call	l_long_asl
653   0448  D5          	push	de
654   0449  E5          	push	hl
655   044A  21 20 00    	ld	hl,32	;const
656   044D  11 00 00    	ld	de,0
657   0450  CD 00 00    	call	l_long_eq
658   0453  E5          	push	hl
659   0454  21 00 00    	ld	hl,i_1+0
660   0457  E5          	push	hl
661   0458  21 40 00    	ld	hl,64	;const
662   045B  E5          	push	hl
663   045C  21 1D 00    	ld	hl,i_1+29
664   045F  E5          	push	hl
665   0460  CD 00 00    	call	_Assert_real
666   0463  C1          	pop	bc
667   0464  C1          	pop	bc
668   0465  C1          	pop	bc
669   0466  C1          	pop	bc
670   0467  E1          	pop	hl
671   0468  23          	inc	hl
672   0469  E5          	push	hl
673   046A  21 02 00    	ld	hl,2	;const
674   046D  39          	add	hl,sp
675   046E  CD 00 00    	call	l_glong2sp
676   0471  21 04 00    	ld	hl,4	;const
677   0474  39          	add	hl,sp
678   0475  CD 00 00    	call	l_gint	;
679   0478  CD 00 00    	call	l_int2long_s
680   047B  CD 00 00    	call	l_long_asl
681   047E  D5          	push	de
682   047F  E5          	push	hl
683   0480  21 40 00    	ld	hl,64	;const
684   0483  11 00 00    	ld	de,0
685   0486  CD 00 00    	call	l_long_eq
686   0489  E5          	push	hl
687   048A  21 00 00    	ld	hl,i_1+0
688   048D  E5          	push	hl
689   048E  21 42 00    	ld	hl,66	;const
690   0491  E5          	push	hl
691   0492  21 21 00    	ld	hl,i_1+33
692   0495  E5          	push	hl
693   0496  CD 00 00    	call	_Assert_real
694   0499  C1          	pop	bc
695   049A  C1          	pop	bc
696   049B  C1          	pop	bc
697   049C  C1          	pop	bc
698   049D  E1          	pop	hl
699   049E  23          	inc	hl
700   049F  E5          	push	hl
701   04A0  21 02 00    	ld	hl,2	;const
702   04A3  39          	add	hl,sp
703   04A4  CD 00 00    	call	l_glong2sp
704   04A7  21 04 00    	ld	hl,4	;const
705   04AA  39          	add	hl,sp
706   04AB  CD 00 00    	call	l_gint	;
707   04AE  CD 00 00    	call	l_int2long_s
708   04B1  CD 00 00    	call	l_long_asl
709   04B4  D5          	push	de
710   04B5  E5          	push	hl
711   04B6  21 80 00    	ld	hl,128	;const
712   04B9  11 00 00    	ld	de,0
713   04BC  CD 00 00    	call	l_long_eq
714   04BF  E5          	push	hl
715   04C0  21 00 00    	ld	hl,i_1+0
716   04C3  E5          	push	hl
717   04C4  21 44 00    	ld	hl,68	;const
718   04C7  E5          	push	hl
719   04C8  21 25 00    	ld	hl,i_1+37
720   04CB  E5          	push	hl
721   04CC  CD 00 00    	call	_Assert_real
722   04CF  C1          	pop	bc
723   04D0  C1          	pop	bc
724   04D1  C1          	pop	bc
725   04D2  C1          	pop	bc
726   04D3  E1          	pop	hl
727   04D4  23          	inc	hl
728   04D5  E5          	push	hl
729   04D6  21 02 00    	ld	hl,2	;const
730   04D9  39          	add	hl,sp
731   04DA  CD 00 00    	call	l_glong2sp
732   04DD  21 04 00    	ld	hl,4	;const
733   04E0  39          	add	hl,sp
734   04E1  CD 00 00    	call	l_gint	;
735   04E4  CD 00 00    	call	l_int2long_s
736   04E7  CD 00 00    	call	l_long_asl
737   04EA  D5          	push	de
738   04EB  E5          	push	hl
739   04EC  21 00 01    	ld	hl,256	;const
740   04EF  11 00 00    	ld	de,0
741   04F2  CD 00 00    	call	l_long_eq
742   04F5  E5          	push	hl
743   04F6  21 00 00    	ld	hl,i_1+0
744   04F9  E5          	push	hl
745   04FA  21 46 00    	ld	hl,70	;const
746   04FD  E5          	push	hl
747   04FE  21 29 00    	ld	hl,i_1+41
748   0501  E5          	push	hl
749   0502  CD 00 00    	call	_Assert_real
750   0505  C1          	pop	bc
751   0506  C1          	pop	bc
752   0507  C1          	pop	bc
753   0508  C1          	pop	bc
754   0509  E1          	pop	hl
755   050A  23          	inc	hl
756   050B  E5          	push	hl
757   050C  21 02 00    	ld	hl,2	;const
758   050F  39          	add	hl,sp
759   0510  CD 00 00    	call	l_glong2sp
760   0513  21 04 00    	ld	hl,4	;const
761   0516  39          	add	hl,sp
762   0517  CD 00 00    	call	l_gint	;
763   051A  CD 00 00    	call	l_int2long_s
764   051D  CD 00 00    	call	l_long_asl
765   0520  D5          	push	de
766   0521  E5          	push	hl
767   0522  21 00 02    	ld	hl,512	;const
768   0525  11 00 00    	ld	de,0
769   0528  CD 00 00    	call	l_long_eq
770   052B  E5          	push	hl
771   052C  21 00 00    	ld	hl,i_1+0
772   052F  E5          	push	hl
773   0530  21 48 00    	ld	hl,72	;const
774   0533  E5          	push	hl
775   0534  21 2D 00    	ld	hl,i_1+45
776   0537  E5          	push	hl
777   0538  CD 00 00    	call	_Assert_real
778   053B  C1          	pop	bc
779   053C  C1          	pop	bc
780   053D  C1          	pop	bc
781   053E  C1          	pop	bc
782   053F  E1          	pop	hl
783   0540  23          	inc	hl
784   0541  E5          	push	hl
785   0542  21 02 00    	ld	hl,2	;const
786   0545  39          	add	hl,sp
787   0546  CD 00 00    	call	l_glong2sp
788   0549  21 04 00    	ld	hl,4	;const
789   054C  39          	add	hl,sp
790   054D  CD 00 00    	call	l_gint	;
791   0550  CD 00 00    	call	l_int2long_s
792   0553  CD 00 00    	call	l_long_asl
793   0556  D5          	push	de
794   0557  E5          	push	hl
795   0558  21 00 04    	ld	hl,1024	;const
796   055B  11 00 00    	ld	de,0
797   055E  CD 00 00    	call	l_long_eq
798   0561  E5          	push	hl
799   0562  21 00 00    	ld	hl,i_1+0
800   0565  E5          	push	hl
801   0566  21 4A 00    	ld	hl,74	;const
802   0569  E5          	push	hl
803   056A  21 31 00    	ld	hl,i_1+49
804   056D  E5          	push	hl
805   056E  CD 00 00    	call	_Assert_real
806   0571  C1          	pop	bc
807   0572  C1          	pop	bc
808   0573  C1          	pop	bc
809   0574  C1          	pop	bc
810   0575  E1          	pop	hl
811   0576  23          	inc	hl
812   0577  E5          	push	hl
813   0578  21 02 00    	ld	hl,2	;const
814   057B  39          	add	hl,sp
815   057C  CD 00 00    	call	l_glong2sp
816   057F  21 04 00    	ld	hl,4	;const
817   0582  39          	add	hl,sp
818   0583  CD 00 00    	call	l_gint	;
819   0586  CD 00 00    	call	l_int2long_s
820   0589  CD 00 00    	call	l_long_asl
821   058C  D5          	push	de
822   058D  E5          	push	hl
823   058E  21 00 08    	ld	hl,2048	;const
824   0591  11 00 00    	ld	de,0
825   0594  CD 00 00    	call	l_long_eq
826   0597  E5          	push	hl
827   0598  21 00 00    	ld	hl,i_1+0
828   059B  E5          	push	hl
829   059C  21 4C 00    	ld	hl,76	;const
830   059F  E5          	push	hl
831   05A0  21 36 00    	ld	hl,i_1+54
832   05A3  E5          	push	hl
833   05A4  CD 00 00    	call	_Assert_real
834   05A7  C1          	pop	bc
835   05A8  C1          	pop	bc
836   05A9  C1          	pop	bc
837   05AA  C1          	pop	bc
838   05AB  E1          	pop	hl
839   05AC  23          	inc	hl
840   05AD  E5          	push	hl
841   05AE  21 02 00    	ld	hl,2	;const
842   05B1  39          	add	hl,sp
843   05B2  CD 00 00    	call	l_glong2sp
844   05B5  21 04 00    	ld	hl,4	;const
845   05B8  39          	add	hl,sp
846   05B9  CD 00 00    	call	l_gint	;
847   05BC  CD 00 00    	call	l_int2long_s
848   05BF  CD 00 00    	call	l_long_asl
849   05C2  D5          	push	de
850   05C3  E5          	push	hl
851   05C4  21 00 10    	ld	hl,4096	;const
852   05C7  11 00 00    	ld	de,0
853   05CA  CD 00 00    	call	l_long_eq
854   05CD  E5          	push	hl
855   05CE  21 00 00    	ld	hl,i_1+0
856   05D1  E5          	push	hl
857   05D2  21 4E 00    	ld	hl,78	;const
858   05D5  E5          	push	hl
859   05D6  21 3B 00    	ld	hl,i_1+59
860   05D9  E5          	push	hl
861   05DA  CD 00 00    	call	_Assert_real
862   05DD  C1          	pop	bc
863   05DE  C1          	pop	bc
864   05DF  C1          	pop	bc
865   05E0  C1          	pop	bc
866   05E1  E1          	pop	hl
867   05E2  23          	inc	hl
868   05E3  E5          	push	hl
869   05E4  21 02 00    	ld	hl,2	;const
870   05E7  39          	add	hl,sp
871   05E8  CD 00 00    	call	l_glong2sp
872   05EB  21 04 00    	ld	hl,4	;const
873   05EE  39          	add	hl,sp
874   05EF  CD 00 00    	call	l_gint	;
875   05F2  CD 00 00    	call	l_int2long_s
876   05F5  CD 00 00    	call	l_long_asl
877   05F8  D5          	push	de
878   05F9  E5          	push	hl
879   05FA  21 00 20    	ld	hl,8192	;const
880   05FD  11 00 00    	ld	de,0
881   0600  CD 00 00    	call	l_long_eq
882   0603  E5          	push	hl
883   0604  21 00 00    	ld	hl,i_1+0
884   0607  E5          	push	hl
885   0608  21 50 00    	ld	hl,80	;const
886   060B  E5          	push	hl
887   060C  21 40 00    	ld	hl,i_1+64
888   060F  E5          	push	hl
889   0610  CD 00 00    	call	_Assert_real
890   0613  C1          	pop	bc
891   0614  C1          	pop	bc
892   0615  C1          	pop	bc
893   0616  C1          	pop	bc
894   0617  E1          	pop	hl
895   0618  23          	inc	hl
896   0619  E5          	push	hl
897   061A  21 02 00    	ld	hl,2	;const
898   061D  39          	add	hl,sp
899   061E  CD 00 00    	call	l_glong2sp
900   0621  21 04 00    	ld	hl,4	;const
901   0624  39          	add	hl,sp
902   0625  CD 00 00    	call	l_gint	;
903   0628  CD 00 00    	call	l_int2long_s
904   062B  CD 00 00    	call	l_long_asl
905   062E  D5          	push	de
906   062F  E5          	push	hl
907   0630  21 00 40    	ld	hl,16384	;const
908   0633  11 00 00    	ld	de,0
909   0636  CD 00 00    	call	l_long_eq
910   0639  E5          	push	hl
911   063A  21 00 00    	ld	hl,i_1+0
912   063D  E5          	push	hl
913   063E  21 52 00    	ld	hl,82	;const
914   0641  E5          	push	hl
915   0642  21 45 00    	ld	hl,i_1+69
916   0645  E5          	push	hl
917   0646  CD 00 00    	call	_Assert_real
918   0649  C1          	pop	bc
919   064A  C1          	pop	bc
920   064B  C1          	pop	bc
921   064C  C1          	pop	bc
922   064D  E1          	pop	hl
923   064E  23          	inc	hl
924   064F  E5          	push	hl
925   0650  21 02 00    	ld	hl,2	;const
926   0653  39          	add	hl,sp
927   0654  CD 00 00    	call	l_glong2sp
928   0657  21 04 00    	ld	hl,4	;const
929   065A  39          	add	hl,sp
930   065B  CD 00 00    	call	l_gint	;
931   065E  CD 00 00    	call	l_int2long_s
932   0661  CD 00 00    	call	l_long_asl
933   0664  D5          	push	de
934   0665  E5          	push	hl
935   0666  21 00 80    	ld	hl,32768	;const
936   0669  11 00 00    	ld	de,0
937   066C  CD 00 00    	call	l_long_eq
938   066F  E5          	push	hl
939   0670  21 00 00    	ld	hl,i_1+0
940   0673  E5          	push	hl
941   0674  21 54 00    	ld	hl,84	;const
942   0677  E5          	push	hl
943   0678  21 4A 00    	ld	hl,i_1+74
944   067B  E5          	push	hl
945   067C  CD 00 00    	call	_Assert_real
946   067F  C1          	pop	bc
947   0680  C1          	pop	bc
948   0681  C1          	pop	bc
949   0682  C1          	pop	bc
950   0683  E1          	pop	hl
951   0684  23          	inc	hl
952   0685  E5          	push	hl
953   0686  21 02 00    	ld	hl,2	;const
954   0689  39          	add	hl,sp
955   068A  CD 00 00    	call	l_glong2sp
956   068D  21 04 00    	ld	hl,4	;const
957   0690  39          	add	hl,sp
958   0691  CD 00 00    	call	l_gint	;
959   0694  CD 00 00    	call	l_int2long_s
960   0697  CD 00 00    	call	l_long_asl
961   069A  D5          	push	de
962   069B  E5          	push	hl
963   069C  21 00 00    	ld	hl,0	;const
964   069F  11 01 00    	ld	de,1
965   06A2  CD 00 00    	call	l_long_eq
966   06A5  E5          	push	hl
967   06A6  21 00 00    	ld	hl,i_1+0
968   06A9  E5          	push	hl
969   06AA  21 56 00    	ld	hl,86	;const
970   06AD  E5          	push	hl
971   06AE  21 4F 00    	ld	hl,i_1+79
972   06B1  E5          	push	hl
973   06B2  CD 00 00    	call	_Assert_real
974   06B5  C1          	pop	bc
975   06B6  C1          	pop	bc
976   06B7  C1          	pop	bc
977   06B8  C1          	pop	bc
978   06B9  E1          	pop	hl
979   06BA  23          	inc	hl
980   06BB  E5          	push	hl
981   06BC  21 02 00    	ld	hl,2	;const
982   06BF  39          	add	hl,sp
983   06C0  CD 00 00    	call	l_glong2sp
984   06C3  21 04 00    	ld	hl,4	;const
985   06C6  39          	add	hl,sp
986   06C7  CD 00 00    	call	l_gint	;
987   06CA  CD 00 00    	call	l_int2long_s
988   06CD  CD 00 00    	call	l_long_asl
989   06D0  D5          	push	de
990   06D1  E5          	push	hl
991   06D2  21 00 00    	ld	hl,0	;const
992   06D5  11 02 00    	ld	de,2
993   06D8  CD 00 00    	call	l_long_eq
994   06DB  E5          	push	hl
995   06DC  21 00 00    	ld	hl,i_1+0
996   06DF  E5          	push	hl
997   06E0  21 58 00    	ld	hl,88	;const
998   06E3  E5          	push	hl
999   06E4  21 54 00    	ld	hl,i_1+84
1000  06E7  E5          	push	hl
1001  06E8  CD 00 00    	call	_Assert_real
1002  06EB  C1          	pop	bc
1003  06EC  C1          	pop	bc
1004  06ED  C1          	pop	bc
1005  06EE  C1          	pop	bc
1006  06EF  E1          	pop	hl
1007  06F0  23          	inc	hl
1008  06F1  E5          	push	hl
1009  06F2  21 02 00    	ld	hl,2	;const
1010  06F5  39          	add	hl,sp
1011  06F6  CD 00 00    	call	l_glong2sp
1012  06F9  21 04 00    	ld	hl,4	;const
1013  06FC  39          	add	hl,sp
1014  06FD  CD 00 00    	call	l_gint	;
1015  0700  CD 00 00    	call	l_int2long_s
1016  0703  CD 00 00    	call	l_long_asl
1017  0706  D5          	push	de
1018  0707  E5          	push	hl
1019  0708  21 00 00    	ld	hl,0	;const
1020  070B  11 04 00    	ld	de,4
1021  070E  CD 00 00    	call	l_long_eq
1022  0711  E5          	push	hl
1023  0712  21 00 00    	ld	hl,i_1+0
1024  0715  E5          	push	hl
1025  0716  21 5A 00    	ld	hl,90	;const
1026  0719  E5          	push	hl
1027  071A  21 59 00    	ld	hl,i_1+89
1028  071D  E5          	push	hl
1029  071E  CD 00 00    	call	_Assert_real
1030  0721  C1          	pop	bc
1031  0722  C1          	pop	bc
1032  0723  C1          	pop	bc
1033  0724  C1          	pop	bc
1034  0725  E1          	pop	hl
1035  0726  23          	inc	hl
1036  0727  E5          	push	hl
1037  0728  21 02 00    	ld	hl,2	;const
1038  072B  39          	add	hl,sp
1039  072C  CD 00 00    	call	l_glong2sp
1040  072F  21 04 00    	ld	hl,4	;const
1041  0732  39          	add	hl,sp
1042  0733  CD 00 00    	call	l_gint	;
1043  0736  CD 00 00    	call	l_int2long_s
1044  0739  CD 00 00    	call	l_long_asl
1045  073C  D5          	push	de
1046  073D  E5          	push	hl
1047  073E  21 00 00    	ld	hl,0	;const
1048  0741  11 08 00    	ld	de,8
1049  0744  CD 00 00    	call	l_long_eq
1050  0747  E5          	push	hl
1051  0748  21 00 00    	ld	hl,i_1+0
1052  074B  E5          	push	hl
1053  074C  21 5C 00    	ld	hl,92	;const
1054  074F  E5          	push	hl
1055  0750  21 5E 00    	ld	hl,i_1+94
1056  0753  E5          	push	hl
1057  0754  CD 00 00    	call	_Assert_real
1058  0757  C1          	pop	bc
1059  0758  C1          	pop	bc
1060  0759  C1          	pop	bc
1061  075A  C1          	pop	bc
1062  075B  E1          	pop	hl
1063  075C  23          	inc	hl
1064  075D  E5          	push	hl
1065  075E  21 02 00    	ld	hl,2	;const
1066  0761  39          	add	hl,sp
1067  0762  CD 00 00    	call	l_glong2sp
1068  0765  21 04 00    	ld	hl,4	;const
1069  0768  39          	add	hl,sp
1070  0769  CD 00 00    	call	l_gint	;
1071  076C  CD 00 00    	call	l_int2long_s
1072  076F  CD 00 00    	call	l_long_asl
1073  0772  D5          	push	de
1074  0773  E5          	push	hl
1075  0774  21 00 00    	ld	hl,0	;const
1076  0777  11 10 00    	ld	de,16
1077  077A  CD 00 00    	call	l_long_eq
1078  077D  E5          	push	hl
1079  077E  21 00 00    	ld	hl,i_1+0
1080  0781  E5          	push	hl
1081  0782  21 5E 00    	ld	hl,94	;const
1082  0785  E5          	push	hl
1083  0786  21 63 00    	ld	hl,i_1+99
1084  0789  E5          	push	hl
1085  078A  CD 00 00    	call	_Assert_real
1086  078D  C1          	pop	bc
1087  078E  C1          	pop	bc
1088  078F  C1          	pop	bc
1089  0790  C1          	pop	bc
1090  0791  E1          	pop	hl
1091  0792  23          	inc	hl
1092  0793  E5          	push	hl
1093  0794  21 02 00    	ld	hl,2	;const
1094  0797  39          	add	hl,sp
1095  0798  CD 00 00    	call	l_glong2sp
1096  079B  21 04 00    	ld	hl,4	;const
1097  079E  39          	add	hl,sp
1098  079F  CD 00 00    	call	l_gint	;
1099  07A2  CD 00 00    	call	l_int2long_s
1100  07A5  CD 00 00    	call	l_long_asl
1101  07A8  D5          	push	de
1102  07A9  E5          	push	hl
1103  07AA  21 00 00    	ld	hl,0	;const
1104  07AD  11 20 00    	ld	de,32
1105  07B0  CD 00 00    	call	l_long_eq
1106  07B3  E5          	push	hl
1107  07B4  21 00 00    	ld	hl,i_1+0
1108  07B7  E5          	push	hl
1109  07B8  21 60 00    	ld	hl,96	;const
1110  07BB  E5          	push	hl
1111  07BC  21 68 00    	ld	hl,i_1+104
1112  07BF  E5          	push	hl
1113  07C0  CD 00 00    	call	_Assert_real
1114  07C3  C1          	pop	bc
1115  07C4  C1          	pop	bc
1116  07C5  C1          	pop	bc
1117  07C6  C1          	pop	bc
1118  07C7  E1          	pop	hl
1119  07C8  23          	inc	hl
1120  07C9  E5          	push	hl
1121  07CA  21 02 00    	ld	hl,2	;const
1122  07CD  39          	add	hl,sp
1123  07CE  CD 00 00    	call	l_glong2sp
1124  07D1  21 04 00    	ld	hl,4	;const
1125  07D4  39          	add	hl,sp
1126  07D5  CD 00 00    	call	l_gint	;
1127  07D8  CD 00 00    	call	l_int2long_s
1128  07DB  CD 00 00    	call	l_long_asl
1129  07DE  D5          	push	de
1130  07DF  E5          	push	hl
1131  07E0  21 00 00    	ld	hl,0	;const
1132  07E3  11 40 00    	ld	de,64
1133  07E6  CD 00 00    	call	l_long_eq
1134  07E9  E5          	push	hl
1135  07EA  21 00 00    	ld	hl,i_1+0
1136  07ED  E5          	push	hl
1137  07EE  21 62 00    	ld	hl,98	;const
1138  07F1  E5          	push	hl
1139  07F2  21 6D 00    	ld	hl,i_1+109
1140  07F5  E5          	push	hl
1141  07F6  CD 00 00    	call	_Assert_real
1142  07F9  C1          	pop	bc
1143  07FA  C1          	pop	bc
1144  07FB  C1          	pop	bc
1145  07FC  C1          	pop	bc
1146  07FD  E1          	pop	hl
1147  07FE  23          	inc	hl
1148  07FF  E5          	push	hl
1149  0800  21 02 00    	ld	hl,2	;const
1150  0803  39          	add	hl,sp
1151  0804  CD 00 00    	call	l_glong2sp
1152  0807  21 04 00    	ld	hl,4	;const
1153  080A  39          	add	hl,sp
1154  080B  CD 00 00    	call	l_gint	;
1155  080E  CD 00 00    	call	l_int2long_s
1156  0811  CD 00 00    	call	l_long_asl
1157  0814  D5          	push	de
1158  0815  E5          	push	hl
1159  0816  21 00 00    	ld	hl,0	;const
1160  0819  11 80 00    	ld	de,128
1161  081C  CD 00 00    	call	l_long_eq
1162  081F  E5          	push	hl
1163  0820  21 00 00    	ld	hl,i_1+0
1164  0823  E5          	push	hl
1165  0824  21 64 00    	ld	hl,100	;const
1166  0827  E5          	push	hl
1167  0828  21 72 00    	ld	hl,i_1+114
1168  082B  E5          	push	hl
1169  082C  CD 00 00    	call	_Assert_real
1170  082F  C1          	pop	bc
1171  0830  C1          	pop	bc
1172  0831  C1          	pop	bc
1173  0832  C1          	pop	bc
1174  0833  E1          	pop	hl
1175  0834  23          	inc	hl
1176  0835  E5          	push	hl
1177  0836  21 02 00    	ld	hl,2	;const
1178  0839  39          	add	hl,sp
1179  083A  CD 00 00    	call	l_glong2sp
1180  083D  21 04 00    	ld	hl,4	;const
1181  0840  39          	add	hl,sp
1182  0841  CD 00 00    	call	l_gint	;
1183  0844  CD 00 00    	call	l_int2long_s
1184  0847  CD 00 00    	call	l_long_asl
1185  084A  D5          	push	de
1186  084B  E5          	push	hl
1187  084C  21 00 00    	ld	hl,0	;const
1188  084F  11 00 01    	ld	de,256
1189  0852  CD 00 00    	call	l_long_eq
1190  0855  E5          	push	hl
1191  0856  21 00 00    	ld	hl,i_1+0
1192  0859  E5          	push	hl
1193  085A  21 66 00    	ld	hl,102	;const
1194  085D  E5          	push	hl
1195  085E  21 77 00    	ld	hl,i_1+119
1196  0861  E5          	push	hl
1197  0862  CD 00 00    	call	_Assert_real
1198  0865  C1          	pop	bc
1199  0866  C1          	pop	bc
1200  0867  C1          	pop	bc
1201  0868  C1          	pop	bc
1202  0869  E1          	pop	hl
1203  086A  23          	inc	hl
1204  086B  E5          	push	hl
1205  086C  21 02 00    	ld	hl,2	;const
1206  086F  39          	add	hl,sp
1207  0870  CD 00 00    	call	l_glong2sp
1208  0873  21 04 00    	ld	hl,4	;const
1209  0876  39          	add	hl,sp
1210  0877  CD 00 00    	call	l_gint	;
1211  087A  CD 00 00    	call	l_int2long_s
1212  087D  CD 00 00    	call	l_long_asl
1213  0880  D5          	push	de
1214  0881  E5          	push	hl
1215  0882  21 00 00    	ld	hl,0	;const
1216  0885  11 00 02    	ld	de,512
1217  0888  CD 00 00    	call	l_long_eq
1218  088B  E5          	push	hl
1219  088C  21 00 00    	ld	hl,i_1+0
1220  088F  E5          	push	hl
1221  0890  21 68 00    	ld	hl,104	;const
1222  0893  E5          	push	hl
1223  0894  21 7C 00    	ld	hl,i_1+124
1224  0897  E5          	push	hl
1225  0898  CD 00 00    	call	_Assert_real
1226  089B  C1          	pop	bc
1227  089C  C1          	pop	bc
1228  089D  C1          	pop	bc
1229  089E  C1          	pop	bc
1230  089F  E1          	pop	hl
1231  08A0  23          	inc	hl
1232  08A1  E5          	push	hl
1233  08A2  21 02 00    	ld	hl,2	;const
1234  08A5  39          	add	hl,sp
1235  08A6  CD 00 00    	call	l_glong2sp
1236  08A9  21 04 00    	ld	hl,4	;const
1237  08AC  39          	add	hl,sp
1238  08AD  CD 00 00    	call	l_gint	;
1239  08B0  CD 00 00    	call	l_int2long_s
1240  08B3  CD 00 00    	call	l_long_asl
1241  08B6  D5          	push	de
1242  08B7  E5          	push	hl
1243  08B8  21 00 00    	ld	hl,0	;const
1244  08BB  11 00 04    	ld	de,1024
1245  08BE  CD 00 00    	call	l_long_eq
1246  08C1  E5          	push	hl
1247  08C2  21 00 00    	ld	hl,i_1+0
1248  08C5  E5          	push	hl
1249  08C6  21 6A 00    	ld	hl,106	;const
1250  08C9  E5          	push	hl
1251  08CA  21 81 00    	ld	hl,i_1+129
1252  08CD  E5          	push	hl
1253  08CE  CD 00 00    	call	_Assert_real
1254  08D1  C1          	pop	bc
1255  08D2  C1          	pop	bc
1256  08D3  C1          	pop	bc
1257  08D4  C1          	pop	bc
1258  08D5  E1          	pop	hl
1259  08D6  23          	inc	hl
1260  08D7  E5          	push	hl
1261  08D8  21 02 00    	ld	hl,2	;const
1262  08DB  39          	add	hl,sp
1263  08DC  CD 00 00    	call	l_glong2sp
1264  08DF  21 04 00    	ld	hl,4	;const
1265  08E2  39          	add	hl,sp
1266  08E3  CD 00 00    	call	l_gint	;
1267  08E6  CD 00 00    	call	l_int2long_s
1268  08E9  CD 00 00    	call	l_long_asl
1269  08EC  D5          	push	de
1270  08ED  E5          	push	hl
1271  08EE  21 00 00    	ld	hl,0	;const
1272  08F1  11 00 08    	ld	de,2048
1273  08F4  CD 00 00    	call	l_long_eq
1274  08F7  E5          	push	hl
1275  08F8  21 00 00    	ld	hl,i_1+0
1276  08FB  E5          	push	hl
1277  08FC  21 6C 00    	ld	hl,108	;const
1278  08FF  E5          	push	hl
1279  0900  21 86 00    	ld	hl,i_1+134
1280  0903  E5          	push	hl
1281  0904  CD 00 00    	call	_Assert_real
1282  0907  C1          	pop	bc
1283  0908  C1          	pop	bc
1284  0909  C1          	pop	bc
1285  090A  C1          	pop	bc
1286  090B  E1          	pop	hl
1287  090C  23          	inc	hl
1288  090D  E5          	push	hl
1289  090E  21 02 00    	ld	hl,2	;const
1290  0911  39          	add	hl,sp
1291  0912  CD 00 00    	call	l_glong2sp
1292  0915  21 04 00    	ld	hl,4	;const
1293  0918  39          	add	hl,sp
1294  0919  CD 00 00    	call	l_gint	;
1295  091C  CD 00 00    	call	l_int2long_s
1296  091F  CD 00 00    	call	l_long_asl
1297  0922  D5          	push	de
1298  0923  E5          	push	hl
1299  0924  21 00 00    	ld	hl,0	;const
1300  0927  11 00 10    	ld	de,4096
1301  092A  CD 00 00    	call	l_long_eq
1302  092D  E5          	push	hl
1303  092E  21 00 00    	ld	hl,i_1+0
1304  0931  E5          	push	hl
1305  0932  21 6E 00    	ld	hl,110	;const
1306  0935  E5          	push	hl
1307  0936  21 8B 00    	ld	hl,i_1+139
1308  0939  E5          	push	hl
1309  093A  CD 00 00    	call	_Assert_real
1310  093D  C1          	pop	bc
1311  093E  C1          	pop	bc
1312  093F  C1          	pop	bc
1313  0940  C1          	pop	bc
1314  0941  E1          	pop	hl
1315  0942  23          	inc	hl
1316  0943  E5          	push	hl
1317  0944  21 02 00    	ld	hl,2	;const
1318  0947  39          	add	hl,sp
1319  0948  CD 00 00    	call	l_glong2sp
1320  094B  21 04 00    	ld	hl,4	;const
1321  094E  39          	add	hl,sp
1322  094F  CD 00 00    	call	l_gint	;
1323  0952  CD 00 00    	call	l_int2long_s
1324  0955  CD 00 00    	call	l_long_asl
1325  0958  D5          	push	de
1326  0959  E5          	push	hl
1327  095A  21 00 00    	ld	hl,0	;const
1328  095D  11 00 20    	ld	de,8192
1329  0960  CD 00 00    	call	l_long_eq
1330  0963  E5          	push	hl
1331  0964  21 00 00    	ld	hl,i_1+0
1332  0967  E5          	push	hl
1333  0968  21 70 00    	ld	hl,112	;const
1334  096B  E5          	push	hl
1335  096C  21 90 00    	ld	hl,i_1+144
1336  096F  E5          	push	hl
1337  0970  CD 00 00    	call	_Assert_real
1338  0973  C1          	pop	bc
1339  0974  C1          	pop	bc
1340  0975  C1          	pop	bc
1341  0976  C1          	pop	bc
1342  0977  E1          	pop	hl
1343  0978  23          	inc	hl
1344  0979  E5          	push	hl
1345  097A  21 02 00    	ld	hl,2	;const
1346  097D  39          	add	hl,sp
1347  097E  CD 00 00    	call	l_glong2sp
1348  0981  21 04 00    	ld	hl,4	;const
1349  0984  39          	add	hl,sp
1350  0985  CD 00 00    	call	l_gint	;
1351  0988  CD 00 00    	call	l_int2long_s
1352  098B  CD 00 00    	call	l_long_asl
1353  098E  D5          	push	de
1354  098F  E5          	push	hl
1355  0990  21 00 00    	ld	hl,0	;const
1356  0993  11 00 40    	ld	de,16384
1357  0996  CD 00 00    	call	l_long_eq
1358  0999  E5          	push	hl
1359  099A  21 00 00    	ld	hl,i_1+0
1360  099D  E5          	push	hl
1361  099E  21 72 00    	ld	hl,114	;const
1362  09A1  E5          	push	hl
1363  09A2  21 95 00    	ld	hl,i_1+149
1364  09A5  E5          	push	hl
1365  09A6  CD 00 00    	call	_Assert_real
1366  09A9  C1          	pop	bc
1367  09AA  C1          	pop	bc
1368  09AB  C1          	pop	bc
1369  09AC  C1          	pop	bc
1370  09AD  E1          	pop	hl
1371  09AE  23          	inc	hl
1372  09AF  E5          	push	hl
1373  09B0  21 02 00    	ld	hl,2	;const
1374  09B3  39          	add	hl,sp
1375  09B4  CD 00 00    	call	l_glong2sp
1376  09B7  21 04 00    	ld	hl,4	;const
1377  09BA  39          	add	hl,sp
1378  09BB  CD 00 00    	call	l_gint	;
1379  09BE  CD 00 00    	call	l_int2long_s
1380  09C1  CD 00 00    	call	l_long_asl
1381  09C4  D5          	push	de
1382  09C5  E5          	push	hl
1383  09C6  21 00 00    	ld	hl,0	;const
1384  09C9  11 00 80    	ld	de,32768
1385  09CC  CD 00 00    	call	l_long_eq
1386  09CF  E5          	push	hl
1387  09D0  21 00 00    	ld	hl,i_1+0
1388  09D3  E5          	push	hl
1389  09D4  21 74 00    	ld	hl,116	;const
1390  09D7  E5          	push	hl
1391  09D8  21 9A 00    	ld	hl,i_1+154
1392  09DB  E5          	push	hl
1393  09DC  CD 00 00    	call	_Assert_real
1394  09DF  C1          	pop	bc
1395  09E0  C1          	pop	bc
1396  09E1  C1          	pop	bc
1397  09E2  C1          	pop	bc
1398  09E3  E1          	pop	hl
1399  09E4  23          	inc	hl
1400  09E5  23          	inc	hl
1401  09E6  E5          	push	hl
1402  09E7  C1          	pop	bc
1403  09E8  C1          	pop	bc
1404  09E9  C1          	pop	bc
1405  09EA  C9          	ret
1406  09EB              
1407  09EB              
1408  09EB              
1409  09EB              ; Function test_lshift16_const flags 0x00000200 __smallc
1410  09EB              ; void test_lshift16_const()
1411  09EB              ._test_lshift16_const
1412  09EB  21 01 00    	ld	hl,1	;const
1413  09EE  E5          	push	hl
1414  09EF  2B          	dec	hl
1415  09F0  39          	add	hl,sp
1416  09F1  CD 00 00    	call	l_gint	;
1417  09F4  11 01 00    	ld	de,1
1418  09F7  A7          	and	a
1419  09F8  ED 52       	sbc	hl,de
1420  09FA  21 01 00    	ld	hl,1	;const
1421  09FD  28 01       	jr	z,ASMPC+3
1422  09FF  2B          	dec	hl
1423  0A00  E5          	push	hl
1424  0A01  21 00 00    	ld	hl,i_1+0
1425  0A04  E5          	push	hl
1426  0A05  21 80 00    	ld	hl,128	;const
1427  0A08  E5          	push	hl
1428  0A09  21 09 00    	ld	hl,i_1+9
1429  0A0C  E5          	push	hl
1430  0A0D  CD 00 00    	call	_Assert_real
1431  0A10  C1          	pop	bc
1432  0A11  C1          	pop	bc
1433  0A12  C1          	pop	bc
1434  0A13  C1          	pop	bc
1435  0A14  E1          	pop	hl
1436  0A15  E5          	push	hl
1437  0A16  29          	add	hl,hl
1438  0A17  11 02 00    	ld	de,2
1439  0A1A  A7          	and	a
1440  0A1B  ED 52       	sbc	hl,de
1441  0A1D  21 01 00    	ld	hl,1	;const
1442  0A20  28 01       	jr	z,ASMPC+3
1443  0A22  2B          	dec	hl
1444  0A23  E5          	push	hl
1445  0A24  21 00 00    	ld	hl,i_1+0
1446  0A27  E5          	push	hl
1447  0A28  21 81 00    	ld	hl,129	;const
1448  0A2B  E5          	push	hl
1449  0A2C  21 0D 00    	ld	hl,i_1+13
1450  0A2F  E5          	push	hl
1451  0A30  CD 00 00    	call	_Assert_real
1452  0A33  C1          	pop	bc
1453  0A34  C1          	pop	bc
1454  0A35  C1          	pop	bc
1455  0A36  C1          	pop	bc
1456  0A37  E1          	pop	hl
1457  0A38  E5          	push	hl
1458  0A39  29          	add	hl,hl
1459  0A3A  29          	add	hl,hl
1460  0A3B  11 04 00    	ld	de,4
1461  0A3E  A7          	and	a
1462  0A3F  ED 52       	sbc	hl,de
1463  0A41  21 01 00    	ld	hl,1	;const
1464  0A44  28 01       	jr	z,ASMPC+3
1465  0A46  2B          	dec	hl
1466  0A47  E5          	push	hl
1467  0A48  21 00 00    	ld	hl,i_1+0
1468  0A4B  E5          	push	hl
1469  0A4C  21 82 00    	ld	hl,130	;const
1470  0A4F  E5          	push	hl
1471  0A50  21 11 00    	ld	hl,i_1+17
1472  0A53  E5          	push	hl
1473  0A54  CD 00 00    	call	_Assert_real
1474  0A57  C1          	pop	bc
1475  0A58  C1          	pop	bc
1476  0A59  C1          	pop	bc
1477  0A5A  C1          	pop	bc
1478  0A5B  E1          	pop	hl
1479  0A5C  E5          	push	hl
1480  0A5D  29          	add	hl,hl
1481  0A5E  29          	add	hl,hl
1482  0A5F  29          	add	hl,hl
1483  0A60  11 08 00    	ld	de,8
1484  0A63  A7          	and	a
1485  0A64  ED 52       	sbc	hl,de
1486  0A66  21 01 00    	ld	hl,1	;const
1487  0A69  28 01       	jr	z,ASMPC+3
1488  0A6B  2B          	dec	hl
1489  0A6C  E5          	push	hl
1490  0A6D  21 00 00    	ld	hl,i_1+0
1491  0A70  E5          	push	hl
1492  0A71  21 83 00    	ld	hl,131	;const
1493  0A74  E5          	push	hl
1494  0A75  21 15 00    	ld	hl,i_1+21
1495  0A78  E5          	push	hl
1496  0A79  CD 00 00    	call	_Assert_real
1497  0A7C  C1          	pop	bc
1498  0A7D  C1          	pop	bc
1499  0A7E  C1          	pop	bc
1500  0A7F  C1          	pop	bc
1501  0A80  E1          	pop	hl
1502  0A81  E5          	push	hl
1503  0A82  29          	add	hl,hl
1504  0A83  29          	add	hl,hl
1505  0A84  29          	add	hl,hl
1506  0A85  29          	add	hl,hl
1507  0A86  11 10 00    	ld	de,16
1508  0A89  A7          	and	a
1509  0A8A  ED 52       	sbc	hl,de
1510  0A8C  21 01 00    	ld	hl,1	;const
1511  0A8F  28 01       	jr	z,ASMPC+3
1512  0A91  2B          	dec	hl
1513  0A92  E5          	push	hl
1514  0A93  21 00 00    	ld	hl,i_1+0
1515  0A96  E5          	push	hl
1516  0A97  21 84 00    	ld	hl,132	;const
1517  0A9A  E5          	push	hl
1518  0A9B  21 19 00    	ld	hl,i_1+25
1519  0A9E  E5          	push	hl
1520  0A9F  CD 00 00    	call	_Assert_real
1521  0AA2  C1          	pop	bc
1522  0AA3  C1          	pop	bc
1523  0AA4  C1          	pop	bc
1524  0AA5  C1          	pop	bc
1525  0AA6  E1          	pop	hl
1526  0AA7  E5          	push	hl
1527  0AA8  29          	add	hl,hl
1528  0AA9  29          	add	hl,hl
1529  0AAA  29          	add	hl,hl
1530  0AAB  29          	add	hl,hl
1531  0AAC  29          	add	hl,hl
1532  0AAD  11 20 00    	ld	de,32
1533  0AB0  A7          	and	a
1534  0AB1  ED 52       	sbc	hl,de
1535  0AB3  21 01 00    	ld	hl,1	;const
1536  0AB6  28 01       	jr	z,ASMPC+3
1537  0AB8  2B          	dec	hl
1538  0AB9  E5          	push	hl
1539  0ABA  21 00 00    	ld	hl,i_1+0
1540  0ABD  E5          	push	hl
1541  0ABE  21 85 00    	ld	hl,133	;const
1542  0AC1  E5          	push	hl
1543  0AC2  21 1D 00    	ld	hl,i_1+29
1544  0AC5  E5          	push	hl
1545  0AC6  CD 00 00    	call	_Assert_real
1546  0AC9  C1          	pop	bc
1547  0ACA  C1          	pop	bc
1548  0ACB  C1          	pop	bc
1549  0ACC  C1          	pop	bc
1550  0ACD  E1          	pop	hl
1551  0ACE  E5          	push	hl
1552  0ACF  29          	add	hl,hl
1553  0AD0  29          	add	hl,hl
1554  0AD1  29          	add	hl,hl
1555  0AD2  29          	add	hl,hl
1556  0AD3  29          	add	hl,hl
1557  0AD4  29          	add	hl,hl
1558  0AD5  11 40 00    	ld	de,64
1559  0AD8  A7          	and	a
1560  0AD9  ED 52       	sbc	hl,de
1561  0ADB  21 01 00    	ld	hl,1	;const
1562  0ADE  28 01       	jr	z,ASMPC+3
1563  0AE0  2B          	dec	hl
1564  0AE1  E5          	push	hl
1565  0AE2  21 00 00    	ld	hl,i_1+0
1566  0AE5  E5          	push	hl
1567  0AE6  21 86 00    	ld	hl,134	;const
1568  0AE9  E5          	push	hl
1569  0AEA  21 21 00    	ld	hl,i_1+33
1570  0AED  E5          	push	hl
1571  0AEE  CD 00 00    	call	_Assert_real
1572  0AF1  C1          	pop	bc
1573  0AF2  C1          	pop	bc
1574  0AF3  C1          	pop	bc
1575  0AF4  C1          	pop	bc
1576  0AF5  E1          	pop	hl
1577  0AF6  E5          	push	hl
1578  0AF7  CB 1C       	rr	h
1579  0AF9  65          	ld	h,l
1580  0AFA  CB 1C       	rr	h
1581  0AFC  2E 00       	ld	l,0
1582  0AFE  CB 1D       	rr	l
1583  0B00  11 80 00    	ld	de,128
1584  0B03  A7          	and	a
1585  0B04  ED 52       	sbc	hl,de
1586  0B06  21 01 00    	ld	hl,1	;const
1587  0B09  28 01       	jr	z,ASMPC+3
1588  0B0B  2B          	dec	hl
1589  0B0C  E5          	push	hl
1590  0B0D  21 00 00    	ld	hl,i_1+0
1591  0B10  E5          	push	hl
1592  0B11  21 87 00    	ld	hl,135	;const
1593  0B14  E5          	push	hl
1594  0B15  21 25 00    	ld	hl,i_1+37
1595  0B18  E5          	push	hl
1596  0B19  CD 00 00    	call	_Assert_real
1597  0B1C  C1          	pop	bc
1598  0B1D  C1          	pop	bc
1599  0B1E  C1          	pop	bc
1600  0B1F  C1          	pop	bc
1601  0B20  E1          	pop	hl
1602  0B21  E5          	push	hl
1603  0B22  65          	ld	h,l
1604  0B23  2E 00       	ld	l,0
1605  0B25  11 00 01    	ld	de,256
1606  0B28  A7          	and	a
1607  0B29  ED 52       	sbc	hl,de
1608  0B2B  21 01 00    	ld	hl,1	;const
1609  0B2E  28 01       	jr	z,ASMPC+3
1610  0B30  2B          	dec	hl
1611  0B31  E5          	push	hl
1612  0B32  21 00 00    	ld	hl,i_1+0
1613  0B35  E5          	push	hl
1614  0B36  21 88 00    	ld	hl,136	;const
1615  0B39  E5          	push	hl
1616  0B3A  21 29 00    	ld	hl,i_1+41
1617  0B3D  E5          	push	hl
1618  0B3E  CD 00 00    	call	_Assert_real
1619  0B41  C1          	pop	bc
1620  0B42  C1          	pop	bc
1621  0B43  C1          	pop	bc
1622  0B44  C1          	pop	bc
1623  0B45  E1          	pop	hl
1624  0B46  E5          	push	hl
1625  0B47  CB 25       	sla	l
1626  0B49  65          	ld	h,l
1627  0B4A  2E 00       	ld	l,0
1628  0B4C  11 00 02    	ld	de,512
1629  0B4F  A7          	and	a
1630  0B50  ED 52       	sbc	hl,de
1631  0B52  21 01 00    	ld	hl,1	;const
1632  0B55  28 01       	jr	z,ASMPC+3
1633  0B57  2B          	dec	hl
1634  0B58  E5          	push	hl
1635  0B59  21 00 00    	ld	hl,i_1+0
1636  0B5C  E5          	push	hl
1637  0B5D  21 89 00    	ld	hl,137	;const
1638  0B60  E5          	push	hl
1639  0B61  21 2D 00    	ld	hl,i_1+45
1640  0B64  E5          	push	hl
1641  0B65  CD 00 00    	call	_Assert_real
1642  0B68  C1          	pop	bc
1643  0B69  C1          	pop	bc
1644  0B6A  C1          	pop	bc
1645  0B6B  C1          	pop	bc
1646  0B6C  E1          	pop	hl
1647  0B6D  E5          	push	hl
1648  0B6E  CB 25       	sla	l
1649  0B70  CB 25       	sla	l
1650  0B72  65          	ld	h,l
1651  0B73  2E 00       	ld	l,0
1652  0B75  11 00 04    	ld	de,1024
1653  0B78  A7          	and	a
1654  0B79  ED 52       	sbc	hl,de
1655  0B7B  21 01 00    	ld	hl,1	;const
1656  0B7E  28 01       	jr	z,ASMPC+3
1657  0B80  2B          	dec	hl
1658  0B81  E5          	push	hl
1659  0B82  21 00 00    	ld	hl,i_1+0
1660  0B85  E5          	push	hl
1661  0B86  21 8A 00    	ld	hl,138	;const
1662  0B89  E5          	push	hl
1663  0B8A  21 31 00    	ld	hl,i_1+49
1664  0B8D  E5          	push	hl
1665  0B8E  CD 00 00    	call	_Assert_real
1666  0B91  C1          	pop	bc
1667  0B92  C1          	pop	bc
1668  0B93  C1          	pop	bc
1669  0B94  C1          	pop	bc
1670  0B95  E1          	pop	hl
1671  0B96  E5          	push	hl
1672  0B97  11 0B 00    	ld	de,11
1673  0B9A  EB          	ex	de,hl
1674  0B9B  CD 00 00    	call	l_asl
1675  0B9E  11 00 08    	ld	de,2048
1676  0BA1  A7          	and	a
1677  0BA2  ED 52       	sbc	hl,de
1678  0BA4  21 01 00    	ld	hl,1	;const
1679  0BA7  28 01       	jr	z,ASMPC+3
1680  0BA9  2B          	dec	hl
1681  0BAA  E5          	push	hl
1682  0BAB  21 00 00    	ld	hl,i_1+0
1683  0BAE  E5          	push	hl
1684  0BAF  21 8B 00    	ld	hl,139	;const
1685  0BB2  E5          	push	hl
1686  0BB3  21 36 00    	ld	hl,i_1+54
1687  0BB6  E5          	push	hl
1688  0BB7  CD 00 00    	call	_Assert_real
1689  0BBA  C1          	pop	bc
1690  0BBB  C1          	pop	bc
1691  0BBC  C1          	pop	bc
1692  0BBD  C1          	pop	bc
1693  0BBE  E1          	pop	hl
1694  0BBF  E5          	push	hl
1695  0BC0  11 0C 00    	ld	de,12
1696  0BC3  EB          	ex	de,hl
1697  0BC4  CD 00 00    	call	l_asl
1698  0BC7  11 00 10    	ld	de,4096
1699  0BCA  A7          	and	a
1700  0BCB  ED 52       	sbc	hl,de
1701  0BCD  21 01 00    	ld	hl,1	;const
1702  0BD0  28 01       	jr	z,ASMPC+3
1703  0BD2  2B          	dec	hl
1704  0BD3  E5          	push	hl
1705  0BD4  21 00 00    	ld	hl,i_1+0
1706  0BD7  E5          	push	hl
1707  0BD8  21 8C 00    	ld	hl,140	;const
1708  0BDB  E5          	push	hl
1709  0BDC  21 3B 00    	ld	hl,i_1+59
1710  0BDF  E5          	push	hl
1711  0BE0  CD 00 00    	call	_Assert_real
1712  0BE3  C1          	pop	bc
1713  0BE4  C1          	pop	bc
1714  0BE5  C1          	pop	bc
1715  0BE6  C1          	pop	bc
1716  0BE7  E1          	pop	hl
1717  0BE8  E5          	push	hl
1718  0BE9  11 0D 00    	ld	de,13
1719  0BEC  EB          	ex	de,hl
1720  0BED  CD 00 00    	call	l_asl
1721  0BF0  11 00 20    	ld	de,8192
1722  0BF3  A7          	and	a
1723  0BF4  ED 52       	sbc	hl,de
1724  0BF6  21 01 00    	ld	hl,1	;const
1725  0BF9  28 01       	jr	z,ASMPC+3
1726  0BFB  2B          	dec	hl
1727  0BFC  E5          	push	hl
1728  0BFD  21 00 00    	ld	hl,i_1+0
1729  0C00  E5          	push	hl
1730  0C01  21 8D 00    	ld	hl,141	;const
1731  0C04  E5          	push	hl
1732  0C05  21 40 00    	ld	hl,i_1+64
1733  0C08  E5          	push	hl
1734  0C09  CD 00 00    	call	_Assert_real
1735  0C0C  C1          	pop	bc
1736  0C0D  C1          	pop	bc
1737  0C0E  C1          	pop	bc
1738  0C0F  C1          	pop	bc
1739  0C10  E1          	pop	hl
1740  0C11  E5          	push	hl
1741  0C12  11 0E 00    	ld	de,14
1742  0C15  EB          	ex	de,hl
1743  0C16  CD 00 00    	call	l_asl
1744  0C19  11 00 40    	ld	de,16384
1745  0C1C  A7          	and	a
1746  0C1D  ED 52       	sbc	hl,de
1747  0C1F  21 01 00    	ld	hl,1	;const
1748  0C22  28 01       	jr	z,ASMPC+3
1749  0C24  2B          	dec	hl
1750  0C25  E5          	push	hl
1751  0C26  21 00 00    	ld	hl,i_1+0
1752  0C29  E5          	push	hl
1753  0C2A  21 8E 00    	ld	hl,142	;const
1754  0C2D  E5          	push	hl
1755  0C2E  21 45 00    	ld	hl,i_1+69
1756  0C31  E5          	push	hl
1757  0C32  CD 00 00    	call	_Assert_real
1758  0C35  C1          	pop	bc
1759  0C36  C1          	pop	bc
1760  0C37  C1          	pop	bc
1761  0C38  C1          	pop	bc
1762  0C39  E1          	pop	hl
1763  0C3A  E5          	push	hl
1764  0C3B  11 0F 00    	ld	de,15
1765  0C3E  EB          	ex	de,hl
1766  0C3F  CD 00 00    	call	l_asl
1767  0C42  11 00 80    	ld	de,32768
1768  0C45  A7          	and	a
1769  0C46  ED 52       	sbc	hl,de
1770  0C48  21 01 00    	ld	hl,1	;const
1771  0C4B  28 01       	jr	z,ASMPC+3
1772  0C4D  21 00 00    	ld	hl,0	;const
1773  0C50  CB 15       	rl	l
1774  0C52  E5          	push	hl
1775  0C53  21 00 00    	ld	hl,i_1+0
1776  0C56  E5          	push	hl
1777  0C57  21 8F 00    	ld	hl,143	;const
1778  0C5A  E5          	push	hl
1779  0C5B  21 4A 00    	ld	hl,i_1+74
1780  0C5E  E5          	push	hl
1781  0C5F  CD 00 00    	call	_Assert_real
1782  0C62  C1          	pop	bc
1783  0C63  C1          	pop	bc
1784  0C64  C1          	pop	bc
1785  0C65  C1          	pop	bc
1786  0C66  C1          	pop	bc
1787  0C67  C9          	ret
1788  0C68              
1789  0C68              
1790  0C68              
1791  0C68              ; Function test_lshift32_const flags 0x00000200 __smallc
1792  0C68              ; void test_lshift32_const()
1793  0C68              ._test_lshift32_const
1794  0C68  21 01 00    	ld	hl,1	;const
1795  0C6B  11 00 00    	ld	de,0
1796  0C6E  D5          	push	de
1797  0C6F  E5          	push	hl
1798  0C70  21 00 00    	ld	hl,0	;const
1799  0C73  39          	add	hl,sp
1800  0C74  CD 00 00    	call	l_glong2sp
1801  0C77  21 01 00    	ld	hl,1	;const
1802  0C7A  11 00 00    	ld	de,0
1803  0C7D  CD 00 00    	call	l_long_eq
1804  0C80  E5          	push	hl
1805  0C81  21 00 00    	ld	hl,i_1+0
1806  0C84  E5          	push	hl
1807  0C85  21 99 00    	ld	hl,153	;const
1808  0C88  E5          	push	hl
1809  0C89  21 09 00    	ld	hl,i_1+9
1810  0C8C  E5          	push	hl
1811  0C8D  CD 00 00    	call	_Assert_real
1812  0C90  C1          	pop	bc
1813  0C91  C1          	pop	bc
1814  0C92  C1          	pop	bc
1815  0C93  C1          	pop	bc
1816  0C94  21 00 00    	ld	hl,0	;const
1817  0C97  39          	add	hl,sp
1818  0C98  CD 00 00    	call	l_glong
1819  0C9B  29          	add	hl,hl
1820  0C9C  CB 13       	rl	e
1821  0C9E  CB 12       	rl	d
1822  0CA0  D5          	push	de
1823  0CA1  E5          	push	hl
1824  0CA2  21 02 00    	ld	hl,2	;const
1825  0CA5  11 00 00    	ld	de,0
1826  0CA8  CD 00 00    	call	l_long_eq
1827  0CAB  E5          	push	hl
1828  0CAC  21 00 00    	ld	hl,i_1+0
1829  0CAF  E5          	push	hl
1830  0CB0  21 9A 00    	ld	hl,154	;const
1831  0CB3  E5          	push	hl
1832  0CB4  21 0D 00    	ld	hl,i_1+13
1833  0CB7  E5          	push	hl
1834  0CB8  CD 00 00    	call	_Assert_real
1835  0CBB  C1          	pop	bc
1836  0CBC  C1          	pop	bc
1837  0CBD  C1          	pop	bc
1838  0CBE  C1          	pop	bc
1839  0CBF  21 00 00    	ld	hl,0	;const
1840  0CC2  39          	add	hl,sp
1841  0CC3  CD 00 00    	call	l_glong
1842  0CC6  3E 02       	ld	a,2
1843  0CC8  CD 00 00    	call	l_long_aslo
1844  0CCB  D5          	push	de
1845  0CCC  E5          	push	hl
1846  0CCD  21 04 00    	ld	hl,4	;const
1847  0CD0  11 00 00    	ld	de,0
1848  0CD3  CD 00 00    	call	l_long_eq
1849  0CD6  E5          	push	hl
1850  0CD7  21 00 00    	ld	hl,i_1+0
1851  0CDA  E5          	push	hl
1852  0CDB  21 9B 00    	ld	hl,155	;const
1853  0CDE  E5          	push	hl
1854  0CDF  21 11 00    	ld	hl,i_1+17
1855  0CE2  E5          	push	hl
1856  0CE3  CD 00 00    	call	_Assert_real
1857  0CE6  C1          	pop	bc
1858  0CE7  C1          	pop	bc
1859  0CE8  C1          	pop	bc
1860  0CE9  C1          	pop	bc
1861  0CEA  21 00 00    	ld	hl,0	;const
1862  0CED  39          	add	hl,sp
1863  0CEE  CD 00 00    	call	l_glong
1864  0CF1  3E 03       	ld	a,3
1865  0CF3  CD 00 00    	call	l_long_aslo
1866  0CF6  D5          	push	de
1867  0CF7  E5          	push	hl
1868  0CF8  21 08 00    	ld	hl,8	;const
1869  0CFB  11 00 00    	ld	de,0
1870  0CFE  CD 00 00    	call	l_long_eq
1871  0D01  E5          	push	hl
1872  0D02  21 00 00    	ld	hl,i_1+0
1873  0D05  E5          	push	hl
1874  0D06  21 9C 00    	ld	hl,156	;const
1875  0D09  E5          	push	hl
1876  0D0A  21 15 00    	ld	hl,i_1+21
1877  0D0D  E5          	push	hl
1878  0D0E  CD 00 00    	call	_Assert_real
1879  0D11  C1          	pop	bc
1880  0D12  C1          	pop	bc
1881  0D13  C1          	pop	bc
1882  0D14  C1          	pop	bc
1883  0D15  21 00 00    	ld	hl,0	;const
1884  0D18  39          	add	hl,sp
1885  0D19  CD 00 00    	call	l_glong
1886  0D1C  3E 04       	ld	a,4
1887  0D1E  CD 00 00    	call	l_long_aslo
1888  0D21  D5          	push	de
1889  0D22  E5          	push	hl
1890  0D23  21 10 00    	ld	hl,16	;const
1891  0D26  11 00 00    	ld	de,0
1892  0D29  CD 00 00    	call	l_long_eq
1893  0D2C  E5          	push	hl
1894  0D2D  21 00 00    	ld	hl,i_1+0
1895  0D30  E5          	push	hl
1896  0D31  21 9D 00    	ld	hl,157	;const
1897  0D34  E5          	push	hl
1898  0D35  21 19 00    	ld	hl,i_1+25
1899  0D38  E5          	push	hl
1900  0D39  CD 00 00    	call	_Assert_real
1901  0D3C  C1          	pop	bc
1902  0D3D  C1          	pop	bc
1903  0D3E  C1          	pop	bc
1904  0D3F  C1          	pop	bc
1905  0D40  21 00 00    	ld	hl,0	;const
1906  0D43  39          	add	hl,sp
1907  0D44  CD 00 00    	call	l_glong
1908  0D47  3E 05       	ld	a,5
1909  0D49  CD 00 00    	call	l_long_aslo
1910  0D4C  D5          	push	de
1911  0D4D  E5          	push	hl
1912  0D4E  21 20 00    	ld	hl,32	;const
1913  0D51  11 00 00    	ld	de,0
1914  0D54  CD 00 00    	call	l_long_eq
1915  0D57  E5          	push	hl
1916  0D58  21 00 00    	ld	hl,i_1+0
1917  0D5B  E5          	push	hl
1918  0D5C  21 9E 00    	ld	hl,158	;const
1919  0D5F  E5          	push	hl
1920  0D60  21 1D 00    	ld	hl,i_1+29
1921  0D63  E5          	push	hl
1922  0D64  CD 00 00    	call	_Assert_real
1923  0D67  C1          	pop	bc
1924  0D68  C1          	pop	bc
1925  0D69  C1          	pop	bc
1926  0D6A  C1          	pop	bc
1927  0D6B  21 00 00    	ld	hl,0	;const
1928  0D6E  39          	add	hl,sp
1929  0D6F  CD 00 00    	call	l_glong
1930  0D72  3E 06       	ld	a,6
1931  0D74  CD 00 00    	call	l_long_aslo
1932  0D77  D5          	push	de
1933  0D78  E5          	push	hl
1934  0D79  21 40 00    	ld	hl,64	;const
1935  0D7C  11 00 00    	ld	de,0
1936  0D7F  CD 00 00    	call	l_long_eq
1937  0D82  E5          	push	hl
1938  0D83  21 00 00    	ld	hl,i_1+0
1939  0D86  E5          	push	hl
1940  0D87  21 9F 00    	ld	hl,159	;const
1941  0D8A  E5          	push	hl
1942  0D8B  21 21 00    	ld	hl,i_1+33
1943  0D8E  E5          	push	hl
1944  0D8F  CD 00 00    	call	_Assert_real
1945  0D92  C1          	pop	bc
1946  0D93  C1          	pop	bc
1947  0D94  C1          	pop	bc
1948  0D95  C1          	pop	bc
1949  0D96  21 00 00    	ld	hl,0	;const
1950  0D99  39          	add	hl,sp
1951  0D9A  CD 00 00    	call	l_glong
1952  0D9D  3E 07       	ld	a,7
1953  0D9F  CD 00 00    	call	l_long_aslo
1954  0DA2  D5          	push	de
1955  0DA3  E5          	push	hl
1956  0DA4  21 80 00    	ld	hl,128	;const
1957  0DA7  11 00 00    	ld	de,0
1958  0DAA  CD 00 00    	call	l_long_eq
1959  0DAD  E5          	push	hl
1960  0DAE  21 00 00    	ld	hl,i_1+0
1961  0DB1  E5          	push	hl
1962  0DB2  21 A0 00    	ld	hl,160	;const
1963  0DB5  E5          	push	hl
1964  0DB6  21 25 00    	ld	hl,i_1+37
1965  0DB9  E5          	push	hl
1966  0DBA  CD 00 00    	call	_Assert_real
1967  0DBD  C1          	pop	bc
1968  0DBE  C1          	pop	bc
1969  0DBF  C1          	pop	bc
1970  0DC0  C1          	pop	bc
1971  0DC1  21 00 00    	ld	hl,0	;const
1972  0DC4  39          	add	hl,sp
1973  0DC5  7E          	ld	a,(hl)
1974  0DC6  23          	inc	hl
1975  0DC7  5E          	ld	e,(hl)
1976  0DC8  23          	inc	hl
1977  0DC9  56          	ld	d,(hl)
1978  0DCA  67          	ld	h,a
1979  0DCB  2E 00       	ld	l,0
1980  0DCD  D5          	push	de
1981  0DCE  E5          	push	hl
1982  0DCF  21 00 01    	ld	hl,256	;const
1983  0DD2  11 00 00    	ld	de,0
1984  0DD5  CD 00 00    	call	l_long_eq
1985  0DD8  E5          	push	hl
1986  0DD9  21 00 00    	ld	hl,i_1+0
1987  0DDC  E5          	push	hl
1988  0DDD  21 A1 00    	ld	hl,161	;const
1989  0DE0  E5          	push	hl
1990  0DE1  21 29 00    	ld	hl,i_1+41
1991  0DE4  E5          	push	hl
1992  0DE5  CD 00 00    	call	_Assert_real
1993  0DE8  C1          	pop	bc
1994  0DE9  C1          	pop	bc
1995  0DEA  C1          	pop	bc
1996  0DEB  C1          	pop	bc
1997  0DEC  21 00 00    	ld	hl,0	;const
1998  0DEF  39          	add	hl,sp
1999  0DF0  7E          	ld	a,(hl)
2000  0DF1  23          	inc	hl
2001  0DF2  5E          	ld	e,(hl)
2002  0DF3  23          	inc	hl
2003  0DF4  56          	ld	d,(hl)
2004  0DF5  67          	ld	h,a
2005  0DF6  2E 00       	ld	l,0
2006  0DF8  CB 24       	sla	h
2007  0DFA  CB 13       	rl	e
2008  0DFC  CB 12       	rl	d
2009  0DFE  D5          	push	de
2010  0DFF  E5          	push	hl
2011  0E00  21 00 02    	ld	hl,512	;const
2012  0E03  11 00 00    	ld	de,0
2013  0E06  CD 00 00    	call	l_long_eq
2014  0E09  E5          	push	hl
2015  0E0A  21 00 00    	ld	hl,i_1+0
2016  0E0D  E5          	push	hl
2017  0E0E  21 A2 00    	ld	hl,162	;const
2018  0E11  E5          	push	hl
2019  0E12  21 2D 00    	ld	hl,i_1+45
2020  0E15  E5          	push	hl
2021  0E16  CD 00 00    	call	_Assert_real
2022  0E19  C1          	pop	bc
2023  0E1A  C1          	pop	bc
2024  0E1B  C1          	pop	bc
2025  0E1C  C1          	pop	bc
2026  0E1D  21 00 00    	ld	hl,0	;const
2027  0E20  39          	add	hl,sp
2028  0E21  7E          	ld	a,(hl)
2029  0E22  23          	inc	hl
2030  0E23  5E          	ld	e,(hl)
2031  0E24  23          	inc	hl
2032  0E25  56          	ld	d,(hl)
2033  0E26  67          	ld	h,a
2034  0E27  2E 00       	ld	l,0
2035  0E29  3E 02       	ld	a,2
2036  0E2B  CD 00 00    	call	l_long_aslo
2037  0E2E  D5          	push	de
2038  0E2F  E5          	push	hl
2039  0E30  21 00 04    	ld	hl,1024	;const
2040  0E33  11 00 00    	ld	de,0
2041  0E36  CD 00 00    	call	l_long_eq
2042  0E39  E5          	push	hl
2043  0E3A  21 00 00    	ld	hl,i_1+0
2044  0E3D  E5          	push	hl
2045  0E3E  21 A3 00    	ld	hl,163	;const
2046  0E41  E5          	push	hl
2047  0E42  21 31 00    	ld	hl,i_1+49
2048  0E45  E5          	push	hl
2049  0E46  CD 00 00    	call	_Assert_real
2050  0E49  C1          	pop	bc
2051  0E4A  C1          	pop	bc
2052  0E4B  C1          	pop	bc
2053  0E4C  C1          	pop	bc
2054  0E4D  21 00 00    	ld	hl,0	;const
2055  0E50  39          	add	hl,sp
2056  0E51  7E          	ld	a,(hl)
2057  0E52  23          	inc	hl
2058  0E53  5E          	ld	e,(hl)
2059  0E54  23          	inc	hl
2060  0E55  56          	ld	d,(hl)
2061  0E56  67          	ld	h,a
2062  0E57  2E 00       	ld	l,0
2063  0E59  3E 03       	ld	a,3
2064  0E5B  CD 00 00    	call	l_long_aslo
2065  0E5E  D5          	push	de
2066  0E5F  E5          	push	hl
2067  0E60  21 00 08    	ld	hl,2048	;const
2068  0E63  11 00 00    	ld	de,0
2069  0E66  CD 00 00    	call	l_long_eq
2070  0E69  E5          	push	hl
2071  0E6A  21 00 00    	ld	hl,i_1+0
2072  0E6D  E5          	push	hl
2073  0E6E  21 A4 00    	ld	hl,164	;const
2074  0E71  E5          	push	hl
2075  0E72  21 36 00    	ld	hl,i_1+54
2076  0E75  E5          	push	hl
2077  0E76  CD 00 00    	call	_Assert_real
2078  0E79  C1          	pop	bc
2079  0E7A  C1          	pop	bc
2080  0E7B  C1          	pop	bc
2081  0E7C  C1          	pop	bc
2082  0E7D  21 00 00    	ld	hl,0	;const
2083  0E80  39          	add	hl,sp
2084  0E81  7E          	ld	a,(hl)
2085  0E82  23          	inc	hl
2086  0E83  5E          	ld	e,(hl)
2087  0E84  23          	inc	hl
2088  0E85  56          	ld	d,(hl)
2089  0E86  67          	ld	h,a
2090  0E87  2E 00       	ld	l,0
2091  0E89  3E 04       	ld	a,4
2092  0E8B  CD 00 00    	call	l_long_aslo
2093  0E8E  D5          	push	de
2094  0E8F  E5          	push	hl
2095  0E90  21 00 10    	ld	hl,4096	;const
2096  0E93  11 00 00    	ld	de,0
2097  0E96  CD 00 00    	call	l_long_eq
2098  0E99  E5          	push	hl
2099  0E9A  21 00 00    	ld	hl,i_1+0
2100  0E9D  E5          	push	hl
2101  0E9E  21 A5 00    	ld	hl,165	;const
2102  0EA1  E5          	push	hl
2103  0EA2  21 3B 00    	ld	hl,i_1+59
2104  0EA5  E5          	push	hl
2105  0EA6  CD 00 00    	call	_Assert_real
2106  0EA9  C1          	pop	bc
2107  0EAA  C1          	pop	bc
2108  0EAB  C1          	pop	bc
2109  0EAC  C1          	pop	bc
2110  0EAD  21 00 00    	ld	hl,0	;const
2111  0EB0  39          	add	hl,sp
2112  0EB1  CD 00 00    	call	l_glong
2113  0EB4  3E 0D       	ld	a,13
2114  0EB6  CD 00 00    	call	l_long_aslo
2115  0EB9  D5          	push	de
2116  0EBA  E5          	push	hl
2117  0EBB  21 00 20    	ld	hl,8192	;const
2118  0EBE  11 00 00    	ld	de,0
2119  0EC1  CD 00 00    	call	l_long_eq
2120  0EC4  E5          	push	hl
2121  0EC5  21 00 00    	ld	hl,i_1+0
2122  0EC8  E5          	push	hl
2123  0EC9  21 A6 00    	ld	hl,166	;const
2124  0ECC  E5          	push	hl
2125  0ECD  21 40 00    	ld	hl,i_1+64
2126  0ED0  E5          	push	hl
2127  0ED1  CD 00 00    	call	_Assert_real
2128  0ED4  C1          	pop	bc
2129  0ED5  C1          	pop	bc
2130  0ED6  C1          	pop	bc
2131  0ED7  C1          	pop	bc
2132  0ED8  21 00 00    	ld	hl,0	;const
2133  0EDB  39          	add	hl,sp
2134  0EDC  CD 00 00    	call	l_glong
2135  0EDF  3E 0E       	ld	a,14
2136  0EE1  CD 00 00    	call	l_long_aslo
2137  0EE4  D5          	push	de
2138  0EE5  E5          	push	hl
2139  0EE6  21 00 40    	ld	hl,16384	;const
2140  0EE9  11 00 00    	ld	de,0
2141  0EEC  CD 00 00    	call	l_long_eq
2142  0EEF  E5          	push	hl
2143  0EF0  21 00 00    	ld	hl,i_1+0
2144  0EF3  E5          	push	hl
2145  0EF4  21 A7 00    	ld	hl,167	;const
2146  0EF7  E5          	push	hl
2147  0EF8  21 45 00    	ld	hl,i_1+69
2148  0EFB  E5          	push	hl
2149  0EFC  CD 00 00    	call	_Assert_real
2150  0EFF  C1          	pop	bc
2151  0F00  C1          	pop	bc
2152  0F01  C1          	pop	bc
2153  0F02  C1          	pop	bc
2154  0F03  21 00 00    	ld	hl,0	;const
2155  0F06  39          	add	hl,sp
2156  0F07  CD 00 00    	call	l_glong
2157  0F0A  3E 0F       	ld	a,15
2158  0F0C  CD 00 00    	call	l_long_aslo
2159  0F0F  D5          	push	de
2160  0F10  E5          	push	hl
2161  0F11  21 00 80    	ld	hl,32768	;const
2162  0F14  11 00 00    	ld	de,0
2163  0F17  CD 00 00    	call	l_long_eq
2164  0F1A  E5          	push	hl
2165  0F1B  21 00 00    	ld	hl,i_1+0
2166  0F1E  E5          	push	hl
2167  0F1F  21 A8 00    	ld	hl,168	;const
2168  0F22  E5          	push	hl
2169  0F23  21 4A 00    	ld	hl,i_1+74
2170  0F26  E5          	push	hl
2171  0F27  CD 00 00    	call	_Assert_real
2172  0F2A  C1          	pop	bc
2173  0F2B  C1          	pop	bc
2174  0F2C  C1          	pop	bc
2175  0F2D  C1          	pop	bc
2176  0F2E  21 00 00    	ld	hl,0	;const
2177  0F31  39          	add	hl,sp
2178  0F32  CD 00 00    	call	l_glong
2179  0F35  EB          	ex	de,hl
2180  0F36  21 00 00    	ld	hl,0	;const
2181  0F39  D5          	push	de
2182  0F3A  E5          	push	hl
2183  0F3B  21 00 00    	ld	hl,0	;const
2184  0F3E  11 01 00    	ld	de,1
2185  0F41  CD 00 00    	call	l_long_eq
2186  0F44  E5          	push	hl
2187  0F45  21 00 00    	ld	hl,i_1+0
2188  0F48  E5          	push	hl
2189  0F49  21 A9 00    	ld	hl,169	;const
2190  0F4C  E5          	push	hl
2191  0F4D  21 4F 00    	ld	hl,i_1+79
2192  0F50  E5          	push	hl
2193  0F51  CD 00 00    	call	_Assert_real
2194  0F54  C1          	pop	bc
2195  0F55  C1          	pop	bc
2196  0F56  C1          	pop	bc
2197  0F57  C1          	pop	bc
2198  0F58  21 00 00    	ld	hl,0	;const
2199  0F5B  39          	add	hl,sp
2200  0F5C  CD 00 00    	call	l_glong
2201  0F5F  29          	add	hl,hl
2202  0F60  EB          	ex	de,hl
2203  0F61  21 00 00    	ld	hl,0	;const
2204  0F64  D5          	push	de
2205  0F65  E5          	push	hl
2206  0F66  21 00 00    	ld	hl,0	;const
2207  0F69  11 02 00    	ld	de,2
2208  0F6C  CD 00 00    	call	l_long_eq
2209  0F6F  E5          	push	hl
2210  0F70  21 00 00    	ld	hl,i_1+0
2211  0F73  E5          	push	hl
2212  0F74  21 AA 00    	ld	hl,170	;const
2213  0F77  E5          	push	hl
2214  0F78  21 54 00    	ld	hl,i_1+84
2215  0F7B  E5          	push	hl
2216  0F7C  CD 00 00    	call	_Assert_real
2217  0F7F  C1          	pop	bc
2218  0F80  C1          	pop	bc
2219  0F81  C1          	pop	bc
2220  0F82  C1          	pop	bc
2221  0F83  21 00 00    	ld	hl,0	;const
2222  0F86  39          	add	hl,sp
2223  0F87  CD 00 00    	call	l_glong
2224  0F8A  29          	add	hl,hl
2225  0F8B  29          	add	hl,hl
2226  0F8C  EB          	ex	de,hl
2227  0F8D  21 00 00    	ld	hl,0
2228  0F90  D5          	push	de
2229  0F91  E5          	push	hl
2230  0F92  21 00 00    	ld	hl,0	;const
2231  0F95  11 04 00    	ld	de,4
2232  0F98  CD 00 00    	call	l_long_eq
2233  0F9B  E5          	push	hl
2234  0F9C  21 00 00    	ld	hl,i_1+0
2235  0F9F  E5          	push	hl
2236  0FA0  21 AB 00    	ld	hl,171	;const
2237  0FA3  E5          	push	hl
2238  0FA4  21 59 00    	ld	hl,i_1+89
2239  0FA7  E5          	push	hl
2240  0FA8  CD 00 00    	call	_Assert_real
2241  0FAB  C1          	pop	bc
2242  0FAC  C1          	pop	bc
2243  0FAD  C1          	pop	bc
2244  0FAE  C1          	pop	bc
2245  0FAF  21 00 00    	ld	hl,0	;const
2246  0FB2  39          	add	hl,sp
2247  0FB3  CD 00 00    	call	l_glong
2248  0FB6  29          	add	hl,hl
2249  0FB7  29          	add	hl,hl
2250  0FB8  29          	add	hl,hl
2251  0FB9  EB          	ex	de,hl
2252  0FBA  21 00 00    	ld	hl,0
2253  0FBD  D5          	push	de
2254  0FBE  E5          	push	hl
2255  0FBF  21 00 00    	ld	hl,0	;const
2256  0FC2  11 08 00    	ld	de,8
2257  0FC5  CD 00 00    	call	l_long_eq
2258  0FC8  E5          	push	hl
2259  0FC9  21 00 00    	ld	hl,i_1+0
2260  0FCC  E5          	push	hl
2261  0FCD  21 AC 00    	ld	hl,172	;const
2262  0FD0  E5          	push	hl
2263  0FD1  21 5E 00    	ld	hl,i_1+94
2264  0FD4  E5          	push	hl
2265  0FD5  CD 00 00    	call	_Assert_real
2266  0FD8  C1          	pop	bc
2267  0FD9  C1          	pop	bc
2268  0FDA  C1          	pop	bc
2269  0FDB  C1          	pop	bc
2270  0FDC  21 00 00    	ld	hl,0	;const
2271  0FDF  39          	add	hl,sp
2272  0FE0  CD 00 00    	call	l_glong
2273  0FE3  29          	add	hl,hl
2274  0FE4  29          	add	hl,hl
2275  0FE5  29          	add	hl,hl
2276  0FE6  29          	add	hl,hl
2277  0FE7  EB          	ex	de,hl
2278  0FE8  21 00 00    	ld	hl,0
2279  0FEB  D5          	push	de
2280  0FEC  E5          	push	hl
2281  0FED  21 00 00    	ld	hl,0	;const
2282  0FF0  11 10 00    	ld	de,16
2283  0FF3  CD 00 00    	call	l_long_eq
2284  0FF6  E5          	push	hl
2285  0FF7  21 00 00    	ld	hl,i_1+0
2286  0FFA  E5          	push	hl
2287  0FFB  21 AD 00    	ld	hl,173	;const
2288  0FFE  E5          	push	hl
2289  0FFF  21 63 00    	ld	hl,i_1+99
2290  1002  E5          	push	hl
2291  1003  CD 00 00    	call	_Assert_real
2292  1006  C1          	pop	bc
2293  1007  C1          	pop	bc
2294  1008  C1          	pop	bc
2295  1009  C1          	pop	bc
2296  100A  21 00 00    	ld	hl,0	;const
2297  100D  39          	add	hl,sp
2298  100E  CD 00 00    	call	l_glong
2299  1011  29          	add	hl,hl
2300  1012  29          	add	hl,hl
2301  1013  29          	add	hl,hl
2302  1014  29          	add	hl,hl
2303  1015  29          	add	hl,hl
2304  1016  EB          	ex	de,hl
2305  1017  21 00 00    	ld	hl,0
2306  101A  D5          	push	de
2307  101B  E5          	push	hl
2308  101C  21 00 00    	ld	hl,0	;const
2309  101F  11 20 00    	ld	de,32
2310  1022  CD 00 00    	call	l_long_eq
2311  1025  E5          	push	hl
2312  1026  21 00 00    	ld	hl,i_1+0
2313  1029  E5          	push	hl
2314  102A  21 AE 00    	ld	hl,174	;const
2315  102D  E5          	push	hl
2316  102E  21 68 00    	ld	hl,i_1+104
2317  1031  E5          	push	hl
2318  1032  CD 00 00    	call	_Assert_real
2319  1035  C1          	pop	bc
2320  1036  C1          	pop	bc
2321  1037  C1          	pop	bc
2322  1038  C1          	pop	bc
2323  1039  21 00 00    	ld	hl,0	;const
2324  103C  39          	add	hl,sp
2325  103D  CD 00 00    	call	l_glong
2326  1040  29          	add	hl,hl
2327  1041  29          	add	hl,hl
2328  1042  29          	add	hl,hl
2329  1043  29          	add	hl,hl
2330  1044  29          	add	hl,hl
2331  1045  29          	add	hl,hl
2332  1046  EB          	ex	de,hl
2333  1047  21 00 00    	ld	hl,0
2334  104A  D5          	push	de
2335  104B  E5          	push	hl
2336  104C  21 00 00    	ld	hl,0	;const
2337  104F  11 40 00    	ld	de,64
2338  1052  CD 00 00    	call	l_long_eq
2339  1055  E5          	push	hl
2340  1056  21 00 00    	ld	hl,i_1+0
2341  1059  E5          	push	hl
2342  105A  21 AF 00    	ld	hl,175	;const
2343  105D  E5          	push	hl
2344  105E  21 6D 00    	ld	hl,i_1+109
2345  1061  E5          	push	hl
2346  1062  CD 00 00    	call	_Assert_real
2347  1065  C1          	pop	bc
2348  1066  C1          	pop	bc
2349  1067  C1          	pop	bc
2350  1068  C1          	pop	bc
2351  1069  21 00 00    	ld	hl,0	;const
2352  106C  39          	add	hl,sp
2353  106D  CD 00 00    	call	l_glong
2354  1070  CB 1C       	rr	h
2355  1072  65          	ld	h,l
2356  1073  CB 1C       	rr	h
2357  1075  2E 00       	ld	l,0
2358  1077  CB 1D       	rr	l
2359  1079  EB          	ex	de,hl
2360  107A  21 00 00    	ld	hl,0
2361  107D  D5          	push	de
2362  107E  E5          	push	hl
2363  107F  21 00 00    	ld	hl,0	;const
2364  1082  11 80 00    	ld	de,128
2365  1085  CD 00 00    	call	l_long_eq
2366  1088  E5          	push	hl
2367  1089  21 00 00    	ld	hl,i_1+0
2368  108C  E5          	push	hl
2369  108D  21 B0 00    	ld	hl,176	;const
2370  1090  E5          	push	hl
2371  1091  21 72 00    	ld	hl,i_1+114
2372  1094  E5          	push	hl
2373  1095  CD 00 00    	call	_Assert_real
2374  1098  C1          	pop	bc
2375  1099  C1          	pop	bc
2376  109A  C1          	pop	bc
2377  109B  C1          	pop	bc
2378  109C  21 00 00    	ld	hl,0	;const
2379  109F  39          	add	hl,sp
2380  10A0  CD 00 00    	call	l_glong
2381  10A3  55          	ld	d,l
2382  10A4  1E 00       	ld	e,0
2383  10A6  21 00 00    	ld	hl,0	;const
2384  10A9  D5          	push	de
2385  10AA  E5          	push	hl
2386  10AB  21 00 00    	ld	hl,0	;const
2387  10AE  11 00 01    	ld	de,256
2388  10B1  CD 00 00    	call	l_long_eq
2389  10B4  E5          	push	hl
2390  10B5  21 00 00    	ld	hl,i_1+0
2391  10B8  E5          	push	hl
2392  10B9  21 B1 00    	ld	hl,177	;const
2393  10BC  E5          	push	hl
2394  10BD  21 77 00    	ld	hl,i_1+119
2395  10C0  E5          	push	hl
2396  10C1  CD 00 00    	call	_Assert_real
2397  10C4  C1          	pop	bc
2398  10C5  C1          	pop	bc
2399  10C6  C1          	pop	bc
2400  10C7  C1          	pop	bc
2401  10C8  21 00 00    	ld	hl,0	;const
2402  10CB  39          	add	hl,sp
2403  10CC  CD 00 00    	call	l_glong
2404  10CF  CB 25       	sla	l
2405  10D1  65          	ld	h,l
2406  10D2  2E 00       	ld	l,0
2407  10D4  EB          	ex	de,hl
2408  10D5  21 00 00    	ld	hl,0
2409  10D8  D5          	push	de
2410  10D9  E5          	push	hl
2411  10DA  21 00 00    	ld	hl,0	;const
2412  10DD  11 00 02    	ld	de,512
2413  10E0  CD 00 00    	call	l_long_eq
2414  10E3  E5          	push	hl
2415  10E4  21 00 00    	ld	hl,i_1+0
2416  10E7  E5          	push	hl
2417  10E8  21 B2 00    	ld	hl,178	;const
2418  10EB  E5          	push	hl
2419  10EC  21 7C 00    	ld	hl,i_1+124
2420  10EF  E5          	push	hl
2421  10F0  CD 00 00    	call	_Assert_real
2422  10F3  C1          	pop	bc
2423  10F4  C1          	pop	bc
2424  10F5  C1          	pop	bc
2425  10F6  C1          	pop	bc
2426  10F7  21 00 00    	ld	hl,0	;const
2427  10FA  39          	add	hl,sp
2428  10FB  CD 00 00    	call	l_glong
2429  10FE  CB 25       	sla	l
2430  1100  CB 25       	sla	l
2431  1102  65          	ld	h,l
2432  1103  2E 00       	ld	l,0
2433  1105  EB          	ex	de,hl
2434  1106  21 00 00    	ld	hl,0
2435  1109  D5          	push	de
2436  110A  E5          	push	hl
2437  110B  21 00 00    	ld	hl,0	;const
2438  110E  11 00 04    	ld	de,1024
2439  1111  CD 00 00    	call	l_long_eq
2440  1114  E5          	push	hl
2441  1115  21 00 00    	ld	hl,i_1+0
2442  1118  E5          	push	hl
2443  1119  21 B3 00    	ld	hl,179	;const
2444  111C  E5          	push	hl
2445  111D  21 81 00    	ld	hl,i_1+129
2446  1120  E5          	push	hl
2447  1121  CD 00 00    	call	_Assert_real
2448  1124  C1          	pop	bc
2449  1125  C1          	pop	bc
2450  1126  C1          	pop	bc
2451  1127  C1          	pop	bc
2452  1128  21 00 00    	ld	hl,0	;const
2453  112B  39          	add	hl,sp
2454  112C  CD 00 00    	call	l_glong
2455  112F  11 0B 00    	ld	de,11
2456  1132  EB          	ex	de,hl
2457  1133  CD 00 00    	call	l_asl
2458  1136  EB          	ex	de,hl
2459  1137  21 00 00    	ld	hl,0
2460  113A  D5          	push	de
2461  113B  E5          	push	hl
2462  113C  21 00 00    	ld	hl,0	;const
2463  113F  11 00 08    	ld	de,2048
2464  1142  CD 00 00    	call	l_long_eq
2465  1145  E5          	push	hl
2466  1146  21 00 00    	ld	hl,i_1+0
2467  1149  E5          	push	hl
2468  114A  21 B4 00    	ld	hl,180	;const
2469  114D  E5          	push	hl
2470  114E  21 86 00    	ld	hl,i_1+134
2471  1151  E5          	push	hl
2472  1152  CD 00 00    	call	_Assert_real
2473  1155  C1          	pop	bc
2474  1156  C1          	pop	bc
2475  1157  C1          	pop	bc
2476  1158  C1          	pop	bc
2477  1159  21 00 00    	ld	hl,0	;const
2478  115C  39          	add	hl,sp
2479  115D  CD 00 00    	call	l_glong
2480  1160  11 0C 00    	ld	de,12
2481  1163  EB          	ex	de,hl
2482  1164  CD 00 00    	call	l_asl
2483  1167  EB          	ex	de,hl
2484  1168  21 00 00    	ld	hl,0
2485  116B  D5          	push	de
2486  116C  E5          	push	hl
2487  116D  21 00 00    	ld	hl,0	;const
2488  1170  11 00 10    	ld	de,4096
2489  1173  CD 00 00    	call	l_long_eq
2490  1176  E5          	push	hl
2491  1177  21 00 00    	ld	hl,i_1+0
2492  117A  E5          	push	hl
2493  117B  21 B5 00    	ld	hl,181	;const
2494  117E  E5          	push	hl
2495  117F  21 8B 00    	ld	hl,i_1+139
2496  1182  E5          	push	hl
2497  1183  CD 00 00    	call	_Assert_real
2498  1186  C1          	pop	bc
2499  1187  C1          	pop	bc
2500  1188  C1          	pop	bc
2501  1189  C1          	pop	bc
2502  118A  21 00 00    	ld	hl,0	;const
2503  118D  39          	add	hl,sp
2504  118E  CD 00 00    	call	l_glong
2505  1191  11 0D 00    	ld	de,13
2506  1194  EB          	ex	de,hl
2507  1195  CD 00 00    	call	l_asl
2508  1198  EB          	ex	de,hl
2509  1199  21 00 00    	ld	hl,0
2510  119C  D5          	push	de
2511  119D  E5          	push	hl
2512  119E  21 00 00    	ld	hl,0	;const
2513  11A1  11 00 20    	ld	de,8192
2514  11A4  CD 00 00    	call	l_long_eq
2515  11A7  E5          	push	hl
2516  11A8  21 00 00    	ld	hl,i_1+0
2517  11AB  E5          	push	hl
2518  11AC  21 B6 00    	ld	hl,182	;const
2519  11AF  E5          	push	hl
2520  11B0  21 90 00    	ld	hl,i_1+144
2521  11B3  E5          	push	hl
2522  11B4  CD 00 00    	call	_Assert_real
2523  11B7  C1          	pop	bc
2524  11B8  C1          	pop	bc
2525  11B9  C1          	pop	bc
2526  11BA  C1          	pop	bc
2527  11BB  21 00 00    	ld	hl,0	;const
2528  11BE  39          	add	hl,sp
2529  11BF  CD 00 00    	call	l_glong
2530  11C2  11 0E 00    	ld	de,14
2531  11C5  EB          	ex	de,hl
2532  11C6  CD 00 00    	call	l_asl
2533  11C9  EB          	ex	de,hl
2534  11CA  21 00 00    	ld	hl,0
2535  11CD  D5          	push	de
2536  11CE  E5          	push	hl
2537  11CF  21 00 00    	ld	hl,0	;const
2538  11D2  11 00 40    	ld	de,16384
2539  11D5  CD 00 00    	call	l_long_eq
2540  11D8  E5          	push	hl
2541  11D9  21 00 00    	ld	hl,i_1+0
2542  11DC  E5          	push	hl
2543  11DD  21 B7 00    	ld	hl,183	;const
2544  11E0  E5          	push	hl
2545  11E1  21 95 00    	ld	hl,i_1+149
2546  11E4  E5          	push	hl
2547  11E5  CD 00 00    	call	_Assert_real
2548  11E8  C1          	pop	bc
2549  11E9  C1          	pop	bc
2550  11EA  C1          	pop	bc
2551  11EB  C1          	pop	bc
2552  11EC  21 00 00    	ld	hl,0	;const
2553  11EF  39          	add	hl,sp
2554  11F0  CD 00 00    	call	l_glong
2555  11F3  11 0F 00    	ld	de,15
2556  11F6  EB          	ex	de,hl
2557  11F7  CD 00 00    	call	l_asl
2558  11FA  EB          	ex	de,hl
2559  11FB  21 00 00    	ld	hl,0
2560  11FE  D5          	push	de
2561  11FF  E5          	push	hl
2562  1200  21 00 00    	ld	hl,0	;const
2563  1203  11 00 80    	ld	de,32768
2564  1206  CD 00 00    	call	l_long_eq
2565  1209  E5          	push	hl
2566  120A  21 00 00    	ld	hl,i_1+0
2567  120D  E5          	push	hl
2568  120E  21 B8 00    	ld	hl,184	;const
2569  1211  E5          	push	hl
2570  1212  21 9A 00    	ld	hl,i_1+154
2571  1215  E5          	push	hl
2572  1216  CD 00 00    	call	_Assert_real
2573  1219  C1          	pop	bc
2574  121A  C1          	pop	bc
2575  121B  C1          	pop	bc
2576  121C  C1          	pop	bc
2577  121D  C1          	pop	bc
2578  121E  C1          	pop	bc
2579  121F  C9          	ret
2580  1220              
2581  1220              
2582  1220              
2583  1220              ; Function suite_lshift flags 0x00000200 __smallc
2584  1220              ; int suite_lshift()
2585  1220              ._suite_lshift
2586  1220  21 9F 00    	ld	hl,i_1+159
2587  1223  E5          	push	hl
2588  1224  CD 00 00    	call	_suite_setup
2589  1227  C1          	pop	bc
2590  1228  21 B0 00    	ld	hl,i_1+176
2591  122B  E5          	push	hl
2592  122C  21 68 0C    	ld	hl,_test_lshift32_const
2593  122F  E5          	push	hl
2594  1230  CD 00 00    	call	_suite_add_test_real
2595  1233  C1          	pop	bc
2596  1234  C1          	pop	bc
2597  1235  21 C4 00    	ld	hl,i_1+196
2598  1238  E5          	push	hl
2599  1239  21 1A 03    	ld	hl,_test_lshift32_var
2600  123C  E5          	push	hl
2601  123D  CD 00 00    	call	_suite_add_test_real
2602  1240  C1          	pop	bc
2603  1241  C1          	pop	bc
2604  1242  21 D6 00    	ld	hl,i_1+214
2605  1245  E5          	push	hl
2606  1246  21 EB 09    	ld	hl,_test_lshift16_const
2607  1249  E5          	push	hl
2608  124A  CD 00 00    	call	_suite_add_test_real
2609  124D  C1          	pop	bc
2610  124E  C1          	pop	bc
2611  124F  21 EA 00    	ld	hl,i_1+234
2612  1252  E5          	push	hl
2613  1253  21 00 00    	ld	hl,_test_lshift16_var
2614  1256  E5          	push	hl
2615  1257  CD 00 00    	call	_suite_add_test_real
2616  125A  C1          	pop	bc
2617  125B  C1          	pop	bc
2618  125C  CD 00 00    	call	_suite_run
2619  125F  C9          	ret
2620  1260              
2621  1260              
2622  1260              
2623  1260              ; Function main flags 0x00000000 __stdc
2624  1260              ; int main(int argc, char **argv)
2625  1260              ; parameter 'int argc' at 2 size(2)
2626  1260              ; parameter 'char **argv' at 4 size(2)
2627  1260              ._main
2628  1260  21 00 00    	ld	hl,0	;const
2629  1263  E5          	push	hl
2630  1264  39          	add	hl,sp
2631  1265  CD 00 00    	call	l_gint	;
2632  1268  E5          	push	hl
2633  1269  CD 20 12    	call	_suite_lshift
2634  126C  D1          	pop	de
2635  126D  19          	add	hl,de
2636  126E  C1          	pop	bc
2637  126F  E5          	push	hl
2638  1270  C3 00 00    	jp	exit
2639  1273              
2640  1273              
2641  1273              	SECTION	rodata_compiler
2642  0000              .i_1
2643  0000  6C 73 68 69 66 74 2E 63 
                        	defm	"lshift.c"
2644  0008  00          	defb	0
2645  0009              
2646  0009  3C 3C 30    	defm	"<<0"
2647  000C  00          	defb	0
2648  000D              
2649  000D  3C 3C 31    	defm	"<<1"
2650  0010  00          	defb	0
2651  0011              
2652  0011  3C 3C 32    	defm	"<<2"
2653  0014  00          	defb	0
2654  0015              
2655  0015  3C 3C 33    	defm	"<<3"
2656  0018  00          	defb	0
2657  0019              
2658  0019  3C 3C 34    	defm	"<<4"
2659  001C  00          	defb	0
2660  001D              
2661  001D  3C 3C 35    	defm	"<<5"
2662  0020  00          	defb	0
2663  0021              
2664  0021  3C 3C 36    	defm	"<<6"
2665  0024  00          	defb	0
2666  0025              
2667  0025  3C 3C 37    	defm	"<<7"
2668  0028  00          	defb	0
2669  0029              
2670  0029  3C 3C 38    	defm	"<<8"
2671  002C  00          	defb	0
2672  002D              
2673  002D  3C 3C 39    	defm	"<<9"
2674  0030  00          	defb	0
2675  0031              
2676  0031  3C 3C 31 30 	defm	"<<10"
2677  0035  00          	defb	0
2678  0036              
2679  0036  3C 3C 31 31 	defm	"<<11"
2680  003A  00          	defb	0
2681  003B              
2682  003B  3C 3C 31 32 	defm	"<<12"
2683  003F  00          	defb	0
2684  0040              
2685  0040  3C 3C 31 33 	defm	"<<13"
2686  0044  00          	defb	0
2687  0045              
2688  0045  3C 3C 31 34 	defm	"<<14"
2689  0049  00          	defb	0
2690  004A              
2691  004A  3C 3C 31 35 	defm	"<<15"
2692  004E  00          	defb	0
2693  004F              
2694  004F  3C 3C 31 36 	defm	"<<16"
2695  0053  00          	defb	0
2696  0054              
2697  0054  3C 3C 31 37 	defm	"<<17"
2698  0058  00          	defb	0
2699  0059              
2700  0059  3C 3C 31 38 	defm	"<<18"
2701  005D  00          	defb	0
2702  005E              
2703  005E  3C 3C 31 39 	defm	"<<19"
2704  0062  00          	defb	0
2705  0063              
2706  0063  3C 3C 32 30 	defm	"<<20"
2707  0067  00          	defb	0
2708  0068              
2709  0068  3C 3C 32 31 	defm	"<<21"
2710  006C  00          	defb	0
2711  006D              
2712  006D  3C 3C 32 32 	defm	"<<22"
2713  0071  00          	defb	0
2714  0072              
2715  0072  3C 3C 32 33 	defm	"<<23"
2716  0076  00          	defb	0
2717  0077              
2718  0077  3C 3C 32 34 	defm	"<<24"
2719  007B  00          	defb	0
2720  007C              
2721  007C  3C 3C 32 35 	defm	"<<25"
2722  0080  00          	defb	0
2723  0081              
2724  0081  3C 3C 32 36 	defm	"<<26"
2725  0085  00          	defb	0
2726  0086              
2727  0086  3C 3C 32 37 	defm	"<<27"
2728  008A  00          	defb	0
2729  008B              
2730  008B  3C 3C 32 38 	defm	"<<28"
2731  008F  00          	defb	0
2732  0090              
2733  0090  3C 3C 32 39 	defm	"<<29"
2734  0094  00          	defb	0
2735  0095              
2736  0095  3C 3C 33 30 	defm	"<<30"
2737  0099  00          	defb	0
2738  009A              
2739  009A  3C 3C 33 31 	defm	"<<31"
2740  009E  00          	defb	0
2741  009F              
2742  009F  4C 65 66 74 20 73 68 69 66 74 20 54 65 73 74 73 
                        	defm	"Left shift Tests"
2743  00AF  00          	defb	0
2744  00B0              
2745  00B0  74 65 73 74 5F 6C 73 68 69 66 74 33 32 5F 63 6F 6E 73 74 
                        	defm	"test_lshift32_const"
2746  00C3  00          	defb	0
2747  00C4              
2748  00C4  74 65 73 74 5F 6C 73 68 69 66 74 33 32 5F 76 61 72 
                        	defm	"test_lshift32_var"
2749  00D5  00          	defb	0
2750  00D6              
2751  00D6  74 65 73 74 5F 6C 73 68 69 66 74 31 36 5F 63 6F 6E 73 74 
                        	defm	"test_lshift16_const"
2752  00E9  00          	defb	0
2753  00EA              
2754  00EA  74 65 73 74 5F 6C 73 68 69 66 74 31 36 5F 76 61 72 
                        	defm	"test_lshift16_var"
2755  00FB  00          	defb	0
2756  00FC              
2757  00FC              
2758  00FC              ; --- Start of Static Variables ---
2759  00FC              
2760  00FC              	SECTION	bss_compiler
2761  0000              	SECTION	code_compiler
2762  1273              
2763  1273              
2764  1273              ; --- Start of Scope Defns ---
2765  1273              
2766  1273              	GLOBAL	_Assert_real
2767  1273              	GLOBAL	_suite_run
2768  1273              	GLOBAL	_suite_setup
2769  1273              	GLOBAL	_suite_add_fixture
2770  1273              	GLOBAL	_suite_add_test_real
2771  1273              	GLOBAL	open
2772  1273              	GLOBAL	creat
2773  1273              	GLOBAL	close
2774  1273              	GLOBAL	read
2775  1273              	GLOBAL	write
2776  1273              	GLOBAL	lseek
2777  1273              	GLOBAL	readbyte
2778  1273              	GLOBAL	writebyte
2779  1273              	GLOBAL	getcwd
2780  1273              	GLOBAL	rmdir
2781  1273              	GLOBAL	getwd
2782  1273              	GLOBAL	_RND_BLOCKSIZE
2783  1273              	GLOBAL	rnd_loadblock
2784  1273              	GLOBAL	rnd_saveblock
2785  1273              	GLOBAL	rnd_erase
2786  1273              	GLOBAL	__FOPEN_MAX
2787  1273              	GLOBAL	__sgoioblk
2788  1273              	GLOBAL	__sgoioblk_end
2789  1273              	GLOBAL	fopen_zsock
2790  1273              	GLOBAL	fopen
2791  1273              	GLOBAL	freopen
2792  1273              	GLOBAL	fdopen
2793  1273              	GLOBAL	_freopen1
2794  1273              	GLOBAL	fmemopen
2795  1273              	GLOBAL	funopen
2796  1273              	GLOBAL	fclose
2797  1273              	GLOBAL	fflush
2798  1273              	GLOBAL	closeall
2799  1273              	GLOBAL	fgets
2800  1273              	GLOBAL	fputs
2801  1273              	GLOBAL	fputc
2802  1273              	GLOBAL	fputs_callee
2803  1273              	GLOBAL	fputc_callee
2804  1273              	GLOBAL	fgetc
2805  1273              	GLOBAL	ungetc
2806  1273              	GLOBAL	feof
2807  1273              	GLOBAL	puts
2808  1273              	GLOBAL	ftell
2809  1273              	GLOBAL	fgetpos
2810  1273              	GLOBAL	fseek
2811  1273              	GLOBAL	fread
2812  1273              	GLOBAL	fwrite
2813  1273              	GLOBAL	gets
2814  1273              	GLOBAL	printf
2815  1273              	GLOBAL	fprintf
2816  1273              	GLOBAL	sprintf
2817  1273              	GLOBAL	snprintf
2818  1273              	GLOBAL	vfprintf
2819  1273              	GLOBAL	vsnprintf
2820  1273              	GLOBAL	printn
2821  1273              	GLOBAL	scanf
2822  1273              	GLOBAL	fscanf
2823  1273              	GLOBAL	sscanf
2824  1273              	GLOBAL	vfscanf
2825  1273              	GLOBAL	vsscanf
2826  1273              	GLOBAL	getarg
2827  1273              	GLOBAL	fchkstd
2828  1273              	GLOBAL	fgetc_cons
2829  1273              	GLOBAL	fputc_cons
2830  1273              	GLOBAL	fgets_cons
2831  1273              	GLOBAL	fabandon
2832  1273              	GLOBAL	fdtell
2833  1273              	GLOBAL	fdgetpos
2834  1273              	GLOBAL	rename
2835  1273              	GLOBAL	remove
2836  1273              	GLOBAL	getk
2837  1273              	GLOBAL	puts_cons
2838  1273              	GLOBAL	printk
2839  1273              	GLOBAL	atoi
2840  1273              	GLOBAL	atol
2841  1273              	GLOBAL	itoa
2842  1273              	GLOBAL	itoa_callee
2843  1273              	GLOBAL	ltoa
2844  1273              	GLOBAL	ltoa_callee
2845  1273              	GLOBAL	strtol
2846  1273              	GLOBAL	strtol_callee
2847  1273              	GLOBAL	strtoul
2848  1273              	GLOBAL	strtoul_callee
2849  1273              	GLOBAL	ultoa
2850  1273              	GLOBAL	ultoa_callee
2851  1273              	GLOBAL	utoa
2852  1273              	GLOBAL	utoa_callee
2853  1273              	GLOBAL	rand
2854  1273              	GLOBAL	srand
2855  1273              	GLOBAL	mallinit
2856  1273              	GLOBAL	sbrk
2857  1273              	GLOBAL	sbrk_callee
2858  1273              	GLOBAL	calloc
2859  1273              	GLOBAL	calloc_callee
2860  1273              	GLOBAL	free
2861  1273              	GLOBAL	malloc
2862  1273              	GLOBAL	realloc
2863  1273              	GLOBAL	realloc_callee
2864  1273              	GLOBAL	mallinfo
2865  1273              	GLOBAL	mallinfo_callee
2866  1273              	GLOBAL	HeapCreate
2867  1273              	GLOBAL	HeapSbrk
2868  1273              	GLOBAL	HeapSbrk_callee
2869  1273              	GLOBAL	HeapCalloc
2870  1273              	GLOBAL	HeapCalloc_callee
2871  1273              	GLOBAL	HeapFree
2872  1273              	GLOBAL	HeapFree_callee
2873  1273              	GLOBAL	HeapAlloc
2874  1273              	GLOBAL	HeapAlloc_callee
2875  1273              	GLOBAL	HeapRealloc
2876  1273              	GLOBAL	HeapRealloc_callee
2877  1273              	GLOBAL	HeapInfo
2878  1273              	GLOBAL	HeapInfo_callee
2879  1273              	GLOBAL	exit
2880  1273              	GLOBAL	atexit
2881  1273              	GLOBAL	getopt
2882  1273              	GLOBAL	_optarg
2883  1273              	GLOBAL	_opterr
2884  1273              	GLOBAL	_optind
2885  1273              	GLOBAL	_optopt
2886  1273              	GLOBAL	_optreset
2887  1273              	GLOBAL	l_bsearch
2888  1273              	GLOBAL	l_bsearch_callee
2889  1273              	GLOBAL	l_qsort
2890  1273              	GLOBAL	l_qsort_callee
2891  1273              	GLOBAL	qsort_sccz80
2892  1273              	GLOBAL	qsort_sccz80_callee
2893  1273              	GLOBAL	qsort_sdcc
2894  1273              	GLOBAL	qsort_sdcc_callee
2895  1273              	GLOBAL	_div_
2896  1273              	GLOBAL	_div__callee
2897  1273              	GLOBAL	_divu_
2898  1273              	GLOBAL	_divu__callee
2899  1273              	GLOBAL	_ldiv_
2900  1273              	GLOBAL	_ldiv__callee
2901  1273              	GLOBAL	_ldivu_
2902  1273              	GLOBAL	_ldivu__callee
2903  1273              	GLOBAL	abs
2904  1273              	GLOBAL	labs
2905  1273              	GLOBAL	isqrt
2906  1273              	GLOBAL	inp
2907  1273              	GLOBAL	outp
2908  1273              	GLOBAL	outp_callee
2909  1273              	GLOBAL	swapendian
2910  1273              	GLOBAL	bpoke
2911  1273              	GLOBAL	bpoke_callee
2912  1273              	GLOBAL	wpoke
2913  1273              	GLOBAL	wpoke_callee
2914  1273              	GLOBAL	bpeek
2915  1273              	GLOBAL	wpeek
2916  1273              	GLOBAL	t_delay
2917  1273              	GLOBAL	sleep
2918  1273              	GLOBAL	msleep
2919  1273              	GLOBAL	extract_bits
2920  1273              	GLOBAL	extract_bits_callee
2921  1273              	GLOBAL	wcmatch
2922  1273              	GLOBAL	unbcd
2923  1273              	GLOBAL	_test_lshift16_var
2924  1273              	GLOBAL	_test_lshift32_var
2925  1273              	GLOBAL	_test_lshift16_const
2926  1273              	GLOBAL	_test_lshift32_const
2927  1273              	GLOBAL	_suite_lshift
2928  1273              	GLOBAL	_main
2929  1273              
2930  1273              
2931  1273              ; --- End of Scope Defns ---
2932  1273              
2933  1273              
2934  1273              ; --- End of Compilation ---
2935  1273              
