1     0000              MODULE rshift_c
2     0000              LINE -1, "rshift.c"
-1    0000              
0     0000              
1     0000              ;* * * * *  Small-C/Plus z88dk * * * * *
2     0000              ;  Version: 11355-cb221cd3e-20180328
3     0000              ;
4     0000              ;	Reconstructed for z80 Module Assembler
5     0000              ;
6     0000              ;	Module compile time: Thu Mar 29 19:58:54 2018
7     0000              
8     0000              
9     0000              
10    0000              	MODULE	rshift
11    0000              
12    0000              
13    0000              	INCLUDE "z80_crt0.hdr"
1     0000              ;
2     0000              ;	Header file which contains all required variables from the
3     0000              ;	startup that need to be exposed to individual C files
4     0000              ;
5     0000              ;	Stick in this file any routines which are needed or implicitly
6     0000              ;	implied by sccz80.
7     0000              ;
8     0000              ;       This file is included by every module
9     0000              ;       To handle multi module programs which use floating point
10    0000              ;       routines in different modules, we have got rid of
11    0000              ;       the conditional assembly around the float routines
12    0000              ;
13    0000              ;	$Id: z80_crt0.hdr,v 1.12 2015-11-24 06:47:17 stefano Exp $
14    0000              
15    0000              	EXTERN    base_graphics	; Address of graphics screen
16    0000              
17    0000              	EXTERN	_cpfar2near	; Far->near conversion (z88)
18    0000              	EXTERN	packintrout	; Process interrupt (z88 apps)
19    0000              
20    0000              	EXTERN    l_dcal		; jp(hl)
21    0000              	EXTERN    cleanup		; cleanup before program exit
22    0000              
23    0000              
24    0000              	EXTERN     l_jphl        ; another jp(hl)
25    0000              	EXTERN     l_jpix        ; jp(ix)
26    0000              	EXTERN     l_jpiy        ; jp(iy)
27    0000              
28    0000              	EXTERN     l_ldi
29    0000              	EXTERN     l_ldi_128
30    0000              	EXTERN     l_ldi_256
31    0000              
32    0000              	EXTERN     l_outi
33    0000              	EXTERN     l_outi_128
34    0000              	EXTERN     l_outi_256
35    0000              
36    0000              
37    0000              ;------------------------------------
38    0000              ; Scopes for integer library routines
39    0000              ;------------------------------------
40    0000              
41    0000              	EXTERN    l_getptr		;Get 3 byte pointer
42    0000              	EXTERN    l_putptr		;Put 3 byte pointer
43    0000              	EXTERN    l_gchar		;Get signed char
44    0000              	EXTERN    l_gcharsp	;Get signed char  (peephole opt)
45    0000              	EXTERN    l_gcharspsp	;Get signed char and push  (peephole opt)
46    0000              	EXTERN    l_g2charspsp	;Get 2 signed char and push  (peephole opt)
47    0000              	EXTERN    l_sxt		;Sign extend char
48    0000              	EXTERN    l_gint		;Get int
49    0000              	EXTERN    l_gintsp		;Get int (peephole opt)
50    0000              	EXTERN    l_gintspchar	;Get int,char (peephole opt)
51    0000              	EXTERN    l_gintspsp	;Get int and push (peephole opt)
52    0000              	EXTERN    l_g2intspsp	;Get 2 int and push (peephole opt)
53    0000              	EXTERN    l_gint7de	;Get int, multiply by 7 and add from SP by de
54    0000              	EXTERN    l_gint_eq	;Get int and test == 0
55    0000              	EXTERN    l_ghtonsint	;Get reverse order int
56    0000              	EXTERN    l_pint		;Put int
57    0000              	EXTERN    l_pint_eq	;Put int and test == 0
58    0000              	EXTERN    l_pint_pop	;Put int and pop place address
59    0000              	EXTERN    l_pint_ex	;Put int hl to addr de return addr in hl
60    0000              	EXTERN    l_or		;Int logical or
61    0000              	EXTERN    l_xor		;Int logical xor
62    0000              	EXTERN    l_and		;Int logical and
63    0000              	EXTERN    l_eq		;Int equality
64    0000              	EXTERN    l_ne		;Int inequality
65    0000              	EXTERN    l_gt		;Int signed >
66    0000              	EXTERN    l_le		;Int signed <=
67    0000              	EXTERN    l_ge		;Int signed >=
68    0000              	EXTERN    l_lt		;Int signed <
69    0000              	EXTERN    l_uge		;Int unsigned >=
70    0000              	EXTERN    l_ult		;Int unsigned <
71    0000              	EXTERN    l_ugt		;Int unsigned >
72    0000              	EXTERN    l_ule		;Int unsigned <=
73    0000              	EXTERN    l_cmp		;Int signed compare
74    0000              	EXTERN    l_ucmp		;Int unsigned compare
75    0000              	EXTERN    l_asr		;Int signed >>
76    0000              	EXTERN    l_asr_hl_by_e		;Int signed >>
77    0000              	EXTERN    l_asr_u		;Int unsigned >>
78    0000              	EXTERN    l_asr_u_hl_by_e		;Int unsigned >>
79    0000              	EXTERN    l_asl		;Int <<
80    0000              	EXTERN    l_sub		;Int subtract
81    0000              	EXTERN    l_neg		;Int negate
82    0000              	EXTERN    l_com		;Int ~
83    0000              	EXTERN    l_lneg		;Int logical negate
84    0000              	EXTERN    l_bool		;Int boolean tetst
85    0000              	EXTERN    l_cm_de		;
86    0000              	EXTERN    l_cm_bc
87    0000              	EXTERN    l_deneg
88    0000              	EXTERN    l_bcneg
89    0000              	EXTERN    l_case		;Integer case
90    0000              	EXTERN    l_mult		;Integer *
91    0000              	EXTERN    l_div		;Integer signed /
92    0000              	EXTERN    l_div_u		;Integer unsigned /
93    0000              
94    0000              ;------------------
95    0000              ;Long functions now
96    0000              ;------------------
97    0000              
98    0000              	EXTERN     lpush2		;Push a long under the stack
99    0000              	EXTERN     l_int2long_s	;Int->long signed conversion
100   0000              	EXTERN     l_int2long_s_float	;Int->long->float signed conversion (optimizer: use -O3)
101   0000              	EXTERN     l_long2int_s	;Long->int signed conversion
102   0000              	EXTERN     l_glong		;Get long
103   0000              	EXTERN     l_glonghlp		;Get pointer, then get long
104   0000              	EXTERN     l_glong2sp	;Get long and copy on stack (peephole opt)
105   0000              	EXTERN     l_glong2sp_hlp
106   0000              	EXTERN     l_long_add
107   0000              	EXTERN     l_long_and
108   0000              	EXTERN     l_long_asl
109   0000              	EXTERN     l_long_asr
110   0000              	EXTERN     l_long_aslo	;Long << shift in c
111   0000              	EXTERN     l_long_asro	;Long >> shift in c (signed)
112   0000              	EXTERN     l_long_bool
113   0000              	EXTERN     l_long_cmp
114   0000              	EXTERN     l_long_com
115   0000              	EXTERN     l_long_eq
116   0000              	EXTERN     l_long_ge
117   0000              	EXTERN     l_long_gt
118   0000              	EXTERN     l_long_le
119   0000              	EXTERN     l_long_lneg
120   0000              	EXTERN     l_long_lt
121   0000              	EXTERN     l_long_ne
122   0000              	EXTERN     l_long_neg
123   0000              	EXTERN     l_long_or
124   0000              	EXTERN     l_long_sub
125   0000              	EXTERN     l_long_ucmp
126   0000              	EXTERN     l_long_uge
127   0000              	EXTERN     l_long_ugt
128   0000              	EXTERN     l_long_ule
129   0000              	EXTERN     l_long_ult
130   0000              	EXTERN     l_long_xor
131   0000              	EXTERN     l_plong
132   0000              	EXTERN     l_inclong	;Increment long
133   0000              	EXTERN     l_declong	;Decrement long
134   0000              	EXTERN     l_long_div
135   0000              	EXTERN     l_long_div_u
136   0000              	EXTERN     l_long_mult
137   0000              	EXTERN     l_long_asr_u	;Long unsigned >>
138   0000              	EXTERN     l_long_asr_uo	;Long unsigned >> shift in c
139   0000              	EXTERN     l_long_case
140   0000              
141   0000              ;--------------------------------------------------------------
142   0000              ; Floating point support routines, mostly in library
143   0000              ;--------------------------------------------------------------
144   0000              
145   0000              	EXTERN	dadd
146   0000              	EXTERN	ddiv
147   0000              	EXTERN	dsub
148   0000              	EXTERN	dmul
149   0000              
150   0000              	EXTERN	dge
151   0000              	EXTERN	dgt
152   0000              	EXTERN	dleq
153   0000              	EXTERN	dlt
154   0000              	EXTERN	deq
155   0000              	EXTERN	dne
156   0000              
157   0000              	EXTERN	minusfa		;FA=-FA
158   0000              
159   0000              	EXTERN	dswap		;Exchange FA with top of stack
160   0000              	EXTERN   	float		;Convert int to float
161   0000              	EXTERN   	ufloat		;unsigned int to float
162   0000              	EXTERN   	ifix		;Convert float to int
163   0000              
164   0000              	EXTERN	dstore		;FA->(de)
165   0000              	EXTERN	dload		;FA<-(hl)
166   0000              	EXTERN	dldpsh		;(hl)->(stack)
167   0000              	EXTERN	dpush		;FA->(stack)
168   0000              	EXTERN	dpush2		;FA->(stack under)
169   0000              	EXTERN	dpush3		;FA->(stack under,long)
170   0000              
171   0000              	EXTERN	fa		;may not be needed in this file
172   0000              	EXTERN	extra		;dittot
173   0000              	EXTERN  	__atof2		;string->fa convsersion
174   0000              
175   0000              
176   0000              ;--------------------------------------------------
177   0000              ; Routines for picking up variables from far memory
178   0000              ;--------------------------------------------------
179   0000              
180   0000              	EXTERN	lp_gchar
181   0000              	EXTERN	lp_gdoub
182   0000              	EXTERN	lp_gint
183   0000              	EXTERN	lp_glong
184   0000              	EXTERN	lp_gptr
185   0000              	EXTERN	lp_pchar
186   0000              	EXTERN	lp_pdoub
187   0000              	EXTERN	lp_pint
188   0000              	EXTERN	lp_plong
189   0000              	EXTERN	lp_pptr
190   0000              
191   0000              	EXTERN  l_farcall	; Long call
192   0000              
193   0000              
194   0000              ;-------------------
195   0000              ; Routines for SDCC
196   0000              ;-------------------
197   0000              
198   0000              	EXTERN     __divsint_rrx_s
199   0000              	EXTERN     __divsint_rrx_hds
200   0000              	EXTERN     __divuint_rrx_s
201   0000              	EXTERN     __divuint_rrx_hds
202   0000              	EXTERN     __divsuchar_rrx_s
203   0000              	EXTERN     __divuschar_rrx_s
204   0000              	EXTERN     __divuchar_rrx_s
205   0000              	EXTERN     __divuchar_rrx_hds
206   0000              	EXTERN     __moduchar_rrx_s
207   0000              	EXTERN     __moduchar_rrx_hds
208   0000              	EXTERN     __moduschar_rrx_s
209   0000              	EXTERN     __modsuchar_rrx_s
210   0000                  EXTERN     __modschar_rrx_s
211   0000              	EXTERN     __modschar_rrx_hds
212   0000              	EXTERN     __modsint_rrx_s
213   0000              	EXTERN     __modsint_rrx_hds
214   0000              	EXTERN     __moduint_rrx_s
215   0000              	EXTERN     __moduint_rrx_hds
216   0000              	EXTERN     __get_remainder
217   0000              	EXTERN     __divunsigned
218   0000                  EXTERN     __div_signexte
219   0000              	EXTERN     __divu16
220   0000              	EXTERN     __div16
221   0000              	EXTERN     __div8
222   0000              	EXTERN     __muluchar_rrx_s
223   0000              	EXTERN     __muluchar_rrx_hds
224   0000              	EXTERN     __mulsuchar_rrx_s
225   0000              	EXTERN     __muluschar_rrx_s
226   0000              	EXTERN     __mulschar_rrx_s
227   0000              	EXTERN     __mulschar_rrx_hds
228   0000              	EXTERN     __mulint_rrx_s
229   0000              	EXTERN     __mulint_rrx_hds
230   0000              	EXTERN     __mul16
231   0000              	EXTERN    	__rrulong_rrx_s
232   0000              	EXTERN    	__rrslong_rrx_s
233   0000              	EXTERN    	__rlslong_rrx_s
234   0000              	EXTERN    	__rlulong_rrx_s
235   0000              
236   0000              	EXTERN		l_push_di
237   0000              	EXTERN		l_pop_ei
238   0000              
14    0000              
15    0000              
16    0000              	SECTION	code_compiler
17    0000              
18    0000              ; Function test_rshift16_var flags 0x00000200 __smallc
19    0000              ; void test_rshift16_var()
20    0000              ._test_rshift16_var
21    0000  21 00 80    	ld	hl,32768	;const
22    0003  E5          	push	hl
23    0004  21 00 00    	ld	hl,0	;const
24    0007  E5          	push	hl
25    0008  21 02 00    	ld	hl,2	;const
26    000B  CD 00 00    	call	l_gintspsp	;
27    000E  C1          	pop	bc
28    000F  E1          	pop	hl
29    0010  E5          	push	hl
30    0011  C5          	push	bc
31    0012  D1          	pop	de
32    0013  CD 00 00    	call	l_asr
33    0016  11 00 80    	ld	de,32768
34    0019  A7          	and	a
35    001A  ED 52       	sbc	hl,de
36    001C  21 01 00    	ld	hl,1	;const
37    001F  28 01       	jr	z,ASMPC+3
38    0021  2B          	dec	hl
39    0022  E5          	push	hl
40    0023  21 00 00    	ld	hl,i_1+0
41    0026  E5          	push	hl
42    0027  21 0B 00    	ld	hl,11	;const
43    002A  E5          	push	hl
44    002B  21 09 00    	ld	hl,i_1+9
45    002E  E5          	push	hl
46    002F  CD 00 00    	call	_Assert_real
47    0032  C1          	pop	bc
48    0033  C1          	pop	bc
49    0034  C1          	pop	bc
50    0035  C1          	pop	bc
51    0036  E1          	pop	hl
52    0037  23          	inc	hl
53    0038  E5          	push	hl
54    0039  21 02 00    	ld	hl,2	;const
55    003C  CD 00 00    	call	l_gintspsp	;
56    003F  C1          	pop	bc
57    0040  E1          	pop	hl
58    0041  E5          	push	hl
59    0042  C5          	push	bc
60    0043  D1          	pop	de
61    0044  CD 00 00    	call	l_asr
62    0047  11 00 C0    	ld	de,49152
63    004A  A7          	and	a
64    004B  ED 52       	sbc	hl,de
65    004D  21 01 00    	ld	hl,1	;const
66    0050  28 01       	jr	z,ASMPC+3
67    0052  2B          	dec	hl
68    0053  E5          	push	hl
69    0054  21 00 00    	ld	hl,i_1+0
70    0057  E5          	push	hl
71    0058  21 0D 00    	ld	hl,13	;const
72    005B  E5          	push	hl
73    005C  21 0D 00    	ld	hl,i_1+13
74    005F  E5          	push	hl
75    0060  CD 00 00    	call	_Assert_real
76    0063  C1          	pop	bc
77    0064  C1          	pop	bc
78    0065  C1          	pop	bc
79    0066  C1          	pop	bc
80    0067  E1          	pop	hl
81    0068  23          	inc	hl
82    0069  E5          	push	hl
83    006A  21 02 00    	ld	hl,2	;const
84    006D  CD 00 00    	call	l_gintspsp	;
85    0070  C1          	pop	bc
86    0071  E1          	pop	hl
87    0072  E5          	push	hl
88    0073  C5          	push	bc
89    0074  D1          	pop	de
90    0075  CD 00 00    	call	l_asr
91    0078  11 00 E0    	ld	de,57344
92    007B  A7          	and	a
93    007C  ED 52       	sbc	hl,de
94    007E  21 01 00    	ld	hl,1	;const
95    0081  28 01       	jr	z,ASMPC+3
96    0083  2B          	dec	hl
97    0084  E5          	push	hl
98    0085  21 00 00    	ld	hl,i_1+0
99    0088  E5          	push	hl
100   0089  21 0F 00    	ld	hl,15	;const
101   008C  E5          	push	hl
102   008D  21 11 00    	ld	hl,i_1+17
103   0090  E5          	push	hl
104   0091  CD 00 00    	call	_Assert_real
105   0094  C1          	pop	bc
106   0095  C1          	pop	bc
107   0096  C1          	pop	bc
108   0097  C1          	pop	bc
109   0098  E1          	pop	hl
110   0099  23          	inc	hl
111   009A  E5          	push	hl
112   009B  21 02 00    	ld	hl,2	;const
113   009E  CD 00 00    	call	l_gintspsp	;
114   00A1  C1          	pop	bc
115   00A2  E1          	pop	hl
116   00A3  E5          	push	hl
117   00A4  C5          	push	bc
118   00A5  D1          	pop	de
119   00A6  CD 00 00    	call	l_asr
120   00A9  11 00 F0    	ld	de,61440
121   00AC  A7          	and	a
122   00AD  ED 52       	sbc	hl,de
123   00AF  21 01 00    	ld	hl,1	;const
124   00B2  28 01       	jr	z,ASMPC+3
125   00B4  2B          	dec	hl
126   00B5  E5          	push	hl
127   00B6  21 00 00    	ld	hl,i_1+0
128   00B9  E5          	push	hl
129   00BA  21 11 00    	ld	hl,17	;const
130   00BD  E5          	push	hl
131   00BE  21 15 00    	ld	hl,i_1+21
132   00C1  E5          	push	hl
133   00C2  CD 00 00    	call	_Assert_real
134   00C5  C1          	pop	bc
135   00C6  C1          	pop	bc
136   00C7  C1          	pop	bc
137   00C8  C1          	pop	bc
138   00C9  E1          	pop	hl
139   00CA  23          	inc	hl
140   00CB  E5          	push	hl
141   00CC  21 02 00    	ld	hl,2	;const
142   00CF  CD 00 00    	call	l_gintspsp	;
143   00D2  C1          	pop	bc
144   00D3  E1          	pop	hl
145   00D4  E5          	push	hl
146   00D5  C5          	push	bc
147   00D6  D1          	pop	de
148   00D7  CD 00 00    	call	l_asr
149   00DA  11 00 F8    	ld	de,63488
150   00DD  A7          	and	a
151   00DE  ED 52       	sbc	hl,de
152   00E0  21 01 00    	ld	hl,1	;const
153   00E3  28 01       	jr	z,ASMPC+3
154   00E5  2B          	dec	hl
155   00E6  E5          	push	hl
156   00E7  21 00 00    	ld	hl,i_1+0
157   00EA  E5          	push	hl
158   00EB  21 13 00    	ld	hl,19	;const
159   00EE  E5          	push	hl
160   00EF  21 19 00    	ld	hl,i_1+25
161   00F2  E5          	push	hl
162   00F3  CD 00 00    	call	_Assert_real
163   00F6  C1          	pop	bc
164   00F7  C1          	pop	bc
165   00F8  C1          	pop	bc
166   00F9  C1          	pop	bc
167   00FA  E1          	pop	hl
168   00FB  23          	inc	hl
169   00FC  E5          	push	hl
170   00FD  21 02 00    	ld	hl,2	;const
171   0100  CD 00 00    	call	l_gintspsp	;
172   0103  C1          	pop	bc
173   0104  E1          	pop	hl
174   0105  E5          	push	hl
175   0106  C5          	push	bc
176   0107  D1          	pop	de
177   0108  CD 00 00    	call	l_asr
178   010B  11 00 FC    	ld	de,64512
179   010E  A7          	and	a
180   010F  ED 52       	sbc	hl,de
181   0111  21 01 00    	ld	hl,1	;const
182   0114  28 01       	jr	z,ASMPC+3
183   0116  2B          	dec	hl
184   0117  E5          	push	hl
185   0118  21 00 00    	ld	hl,i_1+0
186   011B  E5          	push	hl
187   011C  21 15 00    	ld	hl,21	;const
188   011F  E5          	push	hl
189   0120  21 1D 00    	ld	hl,i_1+29
190   0123  E5          	push	hl
191   0124  CD 00 00    	call	_Assert_real
192   0127  C1          	pop	bc
193   0128  C1          	pop	bc
194   0129  C1          	pop	bc
195   012A  C1          	pop	bc
196   012B  E1          	pop	hl
197   012C  23          	inc	hl
198   012D  E5          	push	hl
199   012E  21 02 00    	ld	hl,2	;const
200   0131  CD 00 00    	call	l_gintspsp	;
201   0134  C1          	pop	bc
202   0135  E1          	pop	hl
203   0136  E5          	push	hl
204   0137  C5          	push	bc
205   0138  D1          	pop	de
206   0139  CD 00 00    	call	l_asr
207   013C  11 00 FE    	ld	de,65024
208   013F  A7          	and	a
209   0140  ED 52       	sbc	hl,de
210   0142  21 01 00    	ld	hl,1	;const
211   0145  28 01       	jr	z,ASMPC+3
212   0147  2B          	dec	hl
213   0148  E5          	push	hl
214   0149  21 00 00    	ld	hl,i_1+0
215   014C  E5          	push	hl
216   014D  21 17 00    	ld	hl,23	;const
217   0150  E5          	push	hl
218   0151  21 21 00    	ld	hl,i_1+33
219   0154  E5          	push	hl
220   0155  CD 00 00    	call	_Assert_real
221   0158  C1          	pop	bc
222   0159  C1          	pop	bc
223   015A  C1          	pop	bc
224   015B  C1          	pop	bc
225   015C  E1          	pop	hl
226   015D  23          	inc	hl
227   015E  E5          	push	hl
228   015F  21 02 00    	ld	hl,2	;const
229   0162  CD 00 00    	call	l_gintspsp	;
230   0165  C1          	pop	bc
231   0166  E1          	pop	hl
232   0167  E5          	push	hl
233   0168  C5          	push	bc
234   0169  D1          	pop	de
235   016A  CD 00 00    	call	l_asr
236   016D  11 00 FF    	ld	de,65280
237   0170  A7          	and	a
238   0171  ED 52       	sbc	hl,de
239   0173  21 01 00    	ld	hl,1	;const
240   0176  28 01       	jr	z,ASMPC+3
241   0178  2B          	dec	hl
242   0179  E5          	push	hl
243   017A  21 00 00    	ld	hl,i_1+0
244   017D  E5          	push	hl
245   017E  21 19 00    	ld	hl,25	;const
246   0181  E5          	push	hl
247   0182  21 25 00    	ld	hl,i_1+37
248   0185  E5          	push	hl
249   0186  CD 00 00    	call	_Assert_real
250   0189  C1          	pop	bc
251   018A  C1          	pop	bc
252   018B  C1          	pop	bc
253   018C  C1          	pop	bc
254   018D  E1          	pop	hl
255   018E  23          	inc	hl
256   018F  E5          	push	hl
257   0190  21 02 00    	ld	hl,2	;const
258   0193  CD 00 00    	call	l_gintspsp	;
259   0196  C1          	pop	bc
260   0197  E1          	pop	hl
261   0198  E5          	push	hl
262   0199  C5          	push	bc
263   019A  D1          	pop	de
264   019B  CD 00 00    	call	l_asr
265   019E  11 80 FF    	ld	de,65408
266   01A1  A7          	and	a
267   01A2  ED 52       	sbc	hl,de
268   01A4  21 01 00    	ld	hl,1	;const
269   01A7  28 01       	jr	z,ASMPC+3
270   01A9  2B          	dec	hl
271   01AA  E5          	push	hl
272   01AB  21 00 00    	ld	hl,i_1+0
273   01AE  E5          	push	hl
274   01AF  21 1B 00    	ld	hl,27	;const
275   01B2  E5          	push	hl
276   01B3  21 29 00    	ld	hl,i_1+41
277   01B6  E5          	push	hl
278   01B7  CD 00 00    	call	_Assert_real
279   01BA  C1          	pop	bc
280   01BB  C1          	pop	bc
281   01BC  C1          	pop	bc
282   01BD  C1          	pop	bc
283   01BE  E1          	pop	hl
284   01BF  23          	inc	hl
285   01C0  E5          	push	hl
286   01C1  21 02 00    	ld	hl,2	;const
287   01C4  CD 00 00    	call	l_gintspsp	;
288   01C7  C1          	pop	bc
289   01C8  E1          	pop	hl
290   01C9  E5          	push	hl
291   01CA  C5          	push	bc
292   01CB  D1          	pop	de
293   01CC  CD 00 00    	call	l_asr
294   01CF  11 C0 FF    	ld	de,65472
295   01D2  A7          	and	a
296   01D3  ED 52       	sbc	hl,de
297   01D5  21 01 00    	ld	hl,1	;const
298   01D8  28 01       	jr	z,ASMPC+3
299   01DA  2B          	dec	hl
300   01DB  E5          	push	hl
301   01DC  21 00 00    	ld	hl,i_1+0
302   01DF  E5          	push	hl
303   01E0  21 1D 00    	ld	hl,29	;const
304   01E3  E5          	push	hl
305   01E4  21 2D 00    	ld	hl,i_1+45
306   01E7  E5          	push	hl
307   01E8  CD 00 00    	call	_Assert_real
308   01EB  C1          	pop	bc
309   01EC  C1          	pop	bc
310   01ED  C1          	pop	bc
311   01EE  C1          	pop	bc
312   01EF  E1          	pop	hl
313   01F0  23          	inc	hl
314   01F1  E5          	push	hl
315   01F2  21 02 00    	ld	hl,2	;const
316   01F5  CD 00 00    	call	l_gintspsp	;
317   01F8  C1          	pop	bc
318   01F9  E1          	pop	hl
319   01FA  E5          	push	hl
320   01FB  C5          	push	bc
321   01FC  D1          	pop	de
322   01FD  CD 00 00    	call	l_asr
323   0200  11 E0 FF    	ld	de,65504
324   0203  A7          	and	a
325   0204  ED 52       	sbc	hl,de
326   0206  21 01 00    	ld	hl,1	;const
327   0209  28 01       	jr	z,ASMPC+3
328   020B  2B          	dec	hl
329   020C  E5          	push	hl
330   020D  21 00 00    	ld	hl,i_1+0
331   0210  E5          	push	hl
332   0211  21 1F 00    	ld	hl,31	;const
333   0214  E5          	push	hl
334   0215  21 31 00    	ld	hl,i_1+49
335   0218  E5          	push	hl
336   0219  CD 00 00    	call	_Assert_real
337   021C  C1          	pop	bc
338   021D  C1          	pop	bc
339   021E  C1          	pop	bc
340   021F  C1          	pop	bc
341   0220  E1          	pop	hl
342   0221  23          	inc	hl
343   0222  E5          	push	hl
344   0223  21 02 00    	ld	hl,2	;const
345   0226  CD 00 00    	call	l_gintspsp	;
346   0229  C1          	pop	bc
347   022A  E1          	pop	hl
348   022B  E5          	push	hl
349   022C  C5          	push	bc
350   022D  D1          	pop	de
351   022E  CD 00 00    	call	l_asr
352   0231  11 F0 FF    	ld	de,65520
353   0234  A7          	and	a
354   0235  ED 52       	sbc	hl,de
355   0237  21 01 00    	ld	hl,1	;const
356   023A  28 01       	jr	z,ASMPC+3
357   023C  2B          	dec	hl
358   023D  E5          	push	hl
359   023E  21 00 00    	ld	hl,i_1+0
360   0241  E5          	push	hl
361   0242  21 21 00    	ld	hl,33	;const
362   0245  E5          	push	hl
363   0246  21 36 00    	ld	hl,i_1+54
364   0249  E5          	push	hl
365   024A  CD 00 00    	call	_Assert_real
366   024D  C1          	pop	bc
367   024E  C1          	pop	bc
368   024F  C1          	pop	bc
369   0250  C1          	pop	bc
370   0251  E1          	pop	hl
371   0252  23          	inc	hl
372   0253  E5          	push	hl
373   0254  21 02 00    	ld	hl,2	;const
374   0257  CD 00 00    	call	l_gintspsp	;
375   025A  C1          	pop	bc
376   025B  E1          	pop	hl
377   025C  E5          	push	hl
378   025D  C5          	push	bc
379   025E  D1          	pop	de
380   025F  CD 00 00    	call	l_asr
381   0262  11 F8 FF    	ld	de,65528
382   0265  A7          	and	a
383   0266  ED 52       	sbc	hl,de
384   0268  21 01 00    	ld	hl,1	;const
385   026B  28 01       	jr	z,ASMPC+3
386   026D  2B          	dec	hl
387   026E  E5          	push	hl
388   026F  21 00 00    	ld	hl,i_1+0
389   0272  E5          	push	hl
390   0273  21 23 00    	ld	hl,35	;const
391   0276  E5          	push	hl
392   0277  21 3B 00    	ld	hl,i_1+59
393   027A  E5          	push	hl
394   027B  CD 00 00    	call	_Assert_real
395   027E  C1          	pop	bc
396   027F  C1          	pop	bc
397   0280  C1          	pop	bc
398   0281  C1          	pop	bc
399   0282  E1          	pop	hl
400   0283  23          	inc	hl
401   0284  E5          	push	hl
402   0285  21 02 00    	ld	hl,2	;const
403   0288  CD 00 00    	call	l_gintspsp	;
404   028B  C1          	pop	bc
405   028C  E1          	pop	hl
406   028D  E5          	push	hl
407   028E  C5          	push	bc
408   028F  D1          	pop	de
409   0290  CD 00 00    	call	l_asr
410   0293  11 FC FF    	ld	de,65532
411   0296  A7          	and	a
412   0297  ED 52       	sbc	hl,de
413   0299  21 01 00    	ld	hl,1	;const
414   029C  28 01       	jr	z,ASMPC+3
415   029E  2B          	dec	hl
416   029F  E5          	push	hl
417   02A0  21 00 00    	ld	hl,i_1+0
418   02A3  E5          	push	hl
419   02A4  21 25 00    	ld	hl,37	;const
420   02A7  E5          	push	hl
421   02A8  21 40 00    	ld	hl,i_1+64
422   02AB  E5          	push	hl
423   02AC  CD 00 00    	call	_Assert_real
424   02AF  C1          	pop	bc
425   02B0  C1          	pop	bc
426   02B1  C1          	pop	bc
427   02B2  C1          	pop	bc
428   02B3  E1          	pop	hl
429   02B4  23          	inc	hl
430   02B5  E5          	push	hl
431   02B6  21 02 00    	ld	hl,2	;const
432   02B9  CD 00 00    	call	l_gintspsp	;
433   02BC  C1          	pop	bc
434   02BD  E1          	pop	hl
435   02BE  E5          	push	hl
436   02BF  C5          	push	bc
437   02C0  D1          	pop	de
438   02C1  CD 00 00    	call	l_asr
439   02C4  11 FE FF    	ld	de,65534
440   02C7  A7          	and	a
441   02C8  ED 52       	sbc	hl,de
442   02CA  21 01 00    	ld	hl,1	;const
443   02CD  28 01       	jr	z,ASMPC+3
444   02CF  2B          	dec	hl
445   02D0  E5          	push	hl
446   02D1  21 00 00    	ld	hl,i_1+0
447   02D4  E5          	push	hl
448   02D5  21 27 00    	ld	hl,39	;const
449   02D8  E5          	push	hl
450   02D9  21 45 00    	ld	hl,i_1+69
451   02DC  E5          	push	hl
452   02DD  CD 00 00    	call	_Assert_real
453   02E0  C1          	pop	bc
454   02E1  C1          	pop	bc
455   02E2  C1          	pop	bc
456   02E3  C1          	pop	bc
457   02E4  E1          	pop	hl
458   02E5  23          	inc	hl
459   02E6  E5          	push	hl
460   02E7  21 02 00    	ld	hl,2	;const
461   02EA  CD 00 00    	call	l_gintspsp	;
462   02ED  C1          	pop	bc
463   02EE  E1          	pop	hl
464   02EF  E5          	push	hl
465   02F0  C5          	push	bc
466   02F1  D1          	pop	de
467   02F2  CD 00 00    	call	l_asr
468   02F5  11 FF FF    	ld	de,65535
469   02F8  A7          	and	a
470   02F9  ED 52       	sbc	hl,de
471   02FB  21 01 00    	ld	hl,1	;const
472   02FE  28 01       	jr	z,ASMPC+3
473   0300  2B          	dec	hl
474   0301  E5          	push	hl
475   0302  21 00 00    	ld	hl,i_1+0
476   0305  E5          	push	hl
477   0306  21 29 00    	ld	hl,41	;const
478   0309  E5          	push	hl
479   030A  21 4A 00    	ld	hl,i_1+74
480   030D  E5          	push	hl
481   030E  CD 00 00    	call	_Assert_real
482   0311  C1          	pop	bc
483   0312  C1          	pop	bc
484   0313  C1          	pop	bc
485   0314  C1          	pop	bc
486   0315  E1          	pop	hl
487   0316  23          	inc	hl
488   0317  23          	inc	hl
489   0318  E5          	push	hl
490   0319  C1          	pop	bc
491   031A  C1          	pop	bc
492   031B  C9          	ret
493   031C              
494   031C              
495   031C              
496   031C              ; Function test_rshift32_var flags 0x00000200 __smallc
497   031C              ; void test_rshift32_var()
498   031C              ._test_rshift32_var
499   031C  21 00 00    	ld	hl,0	;const
500   031F  11 00 80    	ld	de,32768
501   0322  D5          	push	de
502   0323  E5          	push	hl
503   0324  21 00 00    	ld	hl,0	;const
504   0327  E5          	push	hl
505   0328  21 02 00    	ld	hl,2	;const
506   032B  39          	add	hl,sp
507   032C  CD 00 00    	call	l_glong2sp
508   032F  21 04 00    	ld	hl,4	;const
509   0332  39          	add	hl,sp
510   0333  CD 00 00    	call	l_gint	;
511   0336  CD 00 00    	call	l_int2long_s
512   0339  CD 00 00    	call	l_long_asr
513   033C  D5          	push	de
514   033D  E5          	push	hl
515   033E  21 00 00    	ld	hl,0	;const
516   0341  11 00 80    	ld	de,32768
517   0344  CD 00 00    	call	l_long_eq
518   0347  E5          	push	hl
519   0348  21 00 00    	ld	hl,i_1+0
520   034B  E5          	push	hl
521   034C  21 36 00    	ld	hl,54	;const
522   034F  E5          	push	hl
523   0350  21 09 00    	ld	hl,i_1+9
524   0353  E5          	push	hl
525   0354  CD 00 00    	call	_Assert_real
526   0357  C1          	pop	bc
527   0358  C1          	pop	bc
528   0359  C1          	pop	bc
529   035A  C1          	pop	bc
530   035B  E1          	pop	hl
531   035C  23          	inc	hl
532   035D  E5          	push	hl
533   035E  21 02 00    	ld	hl,2	;const
534   0361  39          	add	hl,sp
535   0362  CD 00 00    	call	l_glong2sp
536   0365  21 04 00    	ld	hl,4	;const
537   0368  39          	add	hl,sp
538   0369  CD 00 00    	call	l_gint	;
539   036C  CD 00 00    	call	l_int2long_s
540   036F  CD 00 00    	call	l_long_asr
541   0372  D5          	push	de
542   0373  E5          	push	hl
543   0374  21 00 00    	ld	hl,0	;const
544   0377  11 00 C0    	ld	de,49152
545   037A  CD 00 00    	call	l_long_eq
546   037D  E5          	push	hl
547   037E  21 00 00    	ld	hl,i_1+0
548   0381  E5          	push	hl
549   0382  21 38 00    	ld	hl,56	;const
550   0385  E5          	push	hl
551   0386  21 0D 00    	ld	hl,i_1+13
552   0389  E5          	push	hl
553   038A  CD 00 00    	call	_Assert_real
554   038D  C1          	pop	bc
555   038E  C1          	pop	bc
556   038F  C1          	pop	bc
557   0390  C1          	pop	bc
558   0391  E1          	pop	hl
559   0392  23          	inc	hl
560   0393  E5          	push	hl
561   0394  21 02 00    	ld	hl,2	;const
562   0397  39          	add	hl,sp
563   0398  CD 00 00    	call	l_glong2sp
564   039B  21 04 00    	ld	hl,4	;const
565   039E  39          	add	hl,sp
566   039F  CD 00 00    	call	l_gint	;
567   03A2  CD 00 00    	call	l_int2long_s
568   03A5  CD 00 00    	call	l_long_asr
569   03A8  D5          	push	de
570   03A9  E5          	push	hl
571   03AA  21 00 00    	ld	hl,0	;const
572   03AD  11 00 E0    	ld	de,57344
573   03B0  CD 00 00    	call	l_long_eq
574   03B3  E5          	push	hl
575   03B4  21 00 00    	ld	hl,i_1+0
576   03B7  E5          	push	hl
577   03B8  21 3A 00    	ld	hl,58	;const
578   03BB  E5          	push	hl
579   03BC  21 11 00    	ld	hl,i_1+17
580   03BF  E5          	push	hl
581   03C0  CD 00 00    	call	_Assert_real
582   03C3  C1          	pop	bc
583   03C4  C1          	pop	bc
584   03C5  C1          	pop	bc
585   03C6  C1          	pop	bc
586   03C7  E1          	pop	hl
587   03C8  23          	inc	hl
588   03C9  E5          	push	hl
589   03CA  21 02 00    	ld	hl,2	;const
590   03CD  39          	add	hl,sp
591   03CE  CD 00 00    	call	l_glong2sp
592   03D1  21 04 00    	ld	hl,4	;const
593   03D4  39          	add	hl,sp
594   03D5  CD 00 00    	call	l_gint	;
595   03D8  CD 00 00    	call	l_int2long_s
596   03DB  CD 00 00    	call	l_long_asr
597   03DE  D5          	push	de
598   03DF  E5          	push	hl
599   03E0  21 00 00    	ld	hl,0	;const
600   03E3  11 00 F0    	ld	de,61440
601   03E6  CD 00 00    	call	l_long_eq
602   03E9  E5          	push	hl
603   03EA  21 00 00    	ld	hl,i_1+0
604   03ED  E5          	push	hl
605   03EE  21 3C 00    	ld	hl,60	;const
606   03F1  E5          	push	hl
607   03F2  21 15 00    	ld	hl,i_1+21
608   03F5  E5          	push	hl
609   03F6  CD 00 00    	call	_Assert_real
610   03F9  C1          	pop	bc
611   03FA  C1          	pop	bc
612   03FB  C1          	pop	bc
613   03FC  C1          	pop	bc
614   03FD  E1          	pop	hl
615   03FE  23          	inc	hl
616   03FF  E5          	push	hl
617   0400  21 02 00    	ld	hl,2	;const
618   0403  39          	add	hl,sp
619   0404  CD 00 00    	call	l_glong2sp
620   0407  21 04 00    	ld	hl,4	;const
621   040A  39          	add	hl,sp
622   040B  CD 00 00    	call	l_gint	;
623   040E  CD 00 00    	call	l_int2long_s
624   0411  CD 00 00    	call	l_long_asr
625   0414  D5          	push	de
626   0415  E5          	push	hl
627   0416  21 00 00    	ld	hl,0	;const
628   0419  11 00 F8    	ld	de,63488
629   041C  CD 00 00    	call	l_long_eq
630   041F  E5          	push	hl
631   0420  21 00 00    	ld	hl,i_1+0
632   0423  E5          	push	hl
633   0424  21 3E 00    	ld	hl,62	;const
634   0427  E5          	push	hl
635   0428  21 19 00    	ld	hl,i_1+25
636   042B  E5          	push	hl
637   042C  CD 00 00    	call	_Assert_real
638   042F  C1          	pop	bc
639   0430  C1          	pop	bc
640   0431  C1          	pop	bc
641   0432  C1          	pop	bc
642   0433  E1          	pop	hl
643   0434  23          	inc	hl
644   0435  E5          	push	hl
645   0436  21 02 00    	ld	hl,2	;const
646   0439  39          	add	hl,sp
647   043A  CD 00 00    	call	l_glong2sp
648   043D  21 04 00    	ld	hl,4	;const
649   0440  39          	add	hl,sp
650   0441  CD 00 00    	call	l_gint	;
651   0444  CD 00 00    	call	l_int2long_s
652   0447  CD 00 00    	call	l_long_asr
653   044A  D5          	push	de
654   044B  E5          	push	hl
655   044C  21 00 00    	ld	hl,0	;const
656   044F  11 00 FC    	ld	de,64512
657   0452  CD 00 00    	call	l_long_eq
658   0455  E5          	push	hl
659   0456  21 00 00    	ld	hl,i_1+0
660   0459  E5          	push	hl
661   045A  21 40 00    	ld	hl,64	;const
662   045D  E5          	push	hl
663   045E  21 1D 00    	ld	hl,i_1+29
664   0461  E5          	push	hl
665   0462  CD 00 00    	call	_Assert_real
666   0465  C1          	pop	bc
667   0466  C1          	pop	bc
668   0467  C1          	pop	bc
669   0468  C1          	pop	bc
670   0469  E1          	pop	hl
671   046A  23          	inc	hl
672   046B  E5          	push	hl
673   046C  21 02 00    	ld	hl,2	;const
674   046F  39          	add	hl,sp
675   0470  CD 00 00    	call	l_glong2sp
676   0473  21 04 00    	ld	hl,4	;const
677   0476  39          	add	hl,sp
678   0477  CD 00 00    	call	l_gint	;
679   047A  CD 00 00    	call	l_int2long_s
680   047D  CD 00 00    	call	l_long_asr
681   0480  D5          	push	de
682   0481  E5          	push	hl
683   0482  21 00 00    	ld	hl,0	;const
684   0485  11 00 FE    	ld	de,65024
685   0488  CD 00 00    	call	l_long_eq
686   048B  E5          	push	hl
687   048C  21 00 00    	ld	hl,i_1+0
688   048F  E5          	push	hl
689   0490  21 42 00    	ld	hl,66	;const
690   0493  E5          	push	hl
691   0494  21 21 00    	ld	hl,i_1+33
692   0497  E5          	push	hl
693   0498  CD 00 00    	call	_Assert_real
694   049B  C1          	pop	bc
695   049C  C1          	pop	bc
696   049D  C1          	pop	bc
697   049E  C1          	pop	bc
698   049F  E1          	pop	hl
699   04A0  23          	inc	hl
700   04A1  E5          	push	hl
701   04A2  21 02 00    	ld	hl,2	;const
702   04A5  39          	add	hl,sp
703   04A6  CD 00 00    	call	l_glong2sp
704   04A9  21 04 00    	ld	hl,4	;const
705   04AC  39          	add	hl,sp
706   04AD  CD 00 00    	call	l_gint	;
707   04B0  CD 00 00    	call	l_int2long_s
708   04B3  CD 00 00    	call	l_long_asr
709   04B6  D5          	push	de
710   04B7  E5          	push	hl
711   04B8  21 00 00    	ld	hl,0	;const
712   04BB  11 00 FF    	ld	de,65280
713   04BE  CD 00 00    	call	l_long_eq
714   04C1  E5          	push	hl
715   04C2  21 00 00    	ld	hl,i_1+0
716   04C5  E5          	push	hl
717   04C6  21 44 00    	ld	hl,68	;const
718   04C9  E5          	push	hl
719   04CA  21 25 00    	ld	hl,i_1+37
720   04CD  E5          	push	hl
721   04CE  CD 00 00    	call	_Assert_real
722   04D1  C1          	pop	bc
723   04D2  C1          	pop	bc
724   04D3  C1          	pop	bc
725   04D4  C1          	pop	bc
726   04D5  E1          	pop	hl
727   04D6  23          	inc	hl
728   04D7  E5          	push	hl
729   04D8  21 02 00    	ld	hl,2	;const
730   04DB  39          	add	hl,sp
731   04DC  CD 00 00    	call	l_glong2sp
732   04DF  21 04 00    	ld	hl,4	;const
733   04E2  39          	add	hl,sp
734   04E3  CD 00 00    	call	l_gint	;
735   04E6  CD 00 00    	call	l_int2long_s
736   04E9  CD 00 00    	call	l_long_asr
737   04EC  D5          	push	de
738   04ED  E5          	push	hl
739   04EE  21 00 00    	ld	hl,0	;const
740   04F1  11 80 FF    	ld	de,65408
741   04F4  CD 00 00    	call	l_long_eq
742   04F7  E5          	push	hl
743   04F8  21 00 00    	ld	hl,i_1+0
744   04FB  E5          	push	hl
745   04FC  21 46 00    	ld	hl,70	;const
746   04FF  E5          	push	hl
747   0500  21 29 00    	ld	hl,i_1+41
748   0503  E5          	push	hl
749   0504  CD 00 00    	call	_Assert_real
750   0507  C1          	pop	bc
751   0508  C1          	pop	bc
752   0509  C1          	pop	bc
753   050A  C1          	pop	bc
754   050B  E1          	pop	hl
755   050C  23          	inc	hl
756   050D  E5          	push	hl
757   050E  21 02 00    	ld	hl,2	;const
758   0511  39          	add	hl,sp
759   0512  CD 00 00    	call	l_glong2sp
760   0515  21 04 00    	ld	hl,4	;const
761   0518  39          	add	hl,sp
762   0519  CD 00 00    	call	l_gint	;
763   051C  CD 00 00    	call	l_int2long_s
764   051F  CD 00 00    	call	l_long_asr
765   0522  D5          	push	de
766   0523  E5          	push	hl
767   0524  21 00 00    	ld	hl,0	;const
768   0527  11 C0 FF    	ld	de,65472
769   052A  CD 00 00    	call	l_long_eq
770   052D  E5          	push	hl
771   052E  21 00 00    	ld	hl,i_1+0
772   0531  E5          	push	hl
773   0532  21 48 00    	ld	hl,72	;const
774   0535  E5          	push	hl
775   0536  21 2D 00    	ld	hl,i_1+45
776   0539  E5          	push	hl
777   053A  CD 00 00    	call	_Assert_real
778   053D  C1          	pop	bc
779   053E  C1          	pop	bc
780   053F  C1          	pop	bc
781   0540  C1          	pop	bc
782   0541  E1          	pop	hl
783   0542  23          	inc	hl
784   0543  E5          	push	hl
785   0544  21 02 00    	ld	hl,2	;const
786   0547  39          	add	hl,sp
787   0548  CD 00 00    	call	l_glong2sp
788   054B  21 04 00    	ld	hl,4	;const
789   054E  39          	add	hl,sp
790   054F  CD 00 00    	call	l_gint	;
791   0552  CD 00 00    	call	l_int2long_s
792   0555  CD 00 00    	call	l_long_asr
793   0558  D5          	push	de
794   0559  E5          	push	hl
795   055A  21 00 00    	ld	hl,0	;const
796   055D  11 E0 FF    	ld	de,65504
797   0560  CD 00 00    	call	l_long_eq
798   0563  E5          	push	hl
799   0564  21 00 00    	ld	hl,i_1+0
800   0567  E5          	push	hl
801   0568  21 4A 00    	ld	hl,74	;const
802   056B  E5          	push	hl
803   056C  21 31 00    	ld	hl,i_1+49
804   056F  E5          	push	hl
805   0570  CD 00 00    	call	_Assert_real
806   0573  C1          	pop	bc
807   0574  C1          	pop	bc
808   0575  C1          	pop	bc
809   0576  C1          	pop	bc
810   0577  E1          	pop	hl
811   0578  23          	inc	hl
812   0579  E5          	push	hl
813   057A  21 02 00    	ld	hl,2	;const
814   057D  39          	add	hl,sp
815   057E  CD 00 00    	call	l_glong2sp
816   0581  21 04 00    	ld	hl,4	;const
817   0584  39          	add	hl,sp
818   0585  CD 00 00    	call	l_gint	;
819   0588  CD 00 00    	call	l_int2long_s
820   058B  CD 00 00    	call	l_long_asr
821   058E  D5          	push	de
822   058F  E5          	push	hl
823   0590  21 00 00    	ld	hl,0	;const
824   0593  11 F0 FF    	ld	de,65520
825   0596  CD 00 00    	call	l_long_eq
826   0599  E5          	push	hl
827   059A  21 00 00    	ld	hl,i_1+0
828   059D  E5          	push	hl
829   059E  21 4C 00    	ld	hl,76	;const
830   05A1  E5          	push	hl
831   05A2  21 36 00    	ld	hl,i_1+54
832   05A5  E5          	push	hl
833   05A6  CD 00 00    	call	_Assert_real
834   05A9  C1          	pop	bc
835   05AA  C1          	pop	bc
836   05AB  C1          	pop	bc
837   05AC  C1          	pop	bc
838   05AD  E1          	pop	hl
839   05AE  23          	inc	hl
840   05AF  E5          	push	hl
841   05B0  21 02 00    	ld	hl,2	;const
842   05B3  39          	add	hl,sp
843   05B4  CD 00 00    	call	l_glong2sp
844   05B7  21 04 00    	ld	hl,4	;const
845   05BA  39          	add	hl,sp
846   05BB  CD 00 00    	call	l_gint	;
847   05BE  CD 00 00    	call	l_int2long_s
848   05C1  CD 00 00    	call	l_long_asr
849   05C4  D5          	push	de
850   05C5  E5          	push	hl
851   05C6  21 00 00    	ld	hl,0	;const
852   05C9  11 F8 FF    	ld	de,65528
853   05CC  CD 00 00    	call	l_long_eq
854   05CF  E5          	push	hl
855   05D0  21 00 00    	ld	hl,i_1+0
856   05D3  E5          	push	hl
857   05D4  21 4E 00    	ld	hl,78	;const
858   05D7  E5          	push	hl
859   05D8  21 3B 00    	ld	hl,i_1+59
860   05DB  E5          	push	hl
861   05DC  CD 00 00    	call	_Assert_real
862   05DF  C1          	pop	bc
863   05E0  C1          	pop	bc
864   05E1  C1          	pop	bc
865   05E2  C1          	pop	bc
866   05E3  E1          	pop	hl
867   05E4  23          	inc	hl
868   05E5  E5          	push	hl
869   05E6  21 02 00    	ld	hl,2	;const
870   05E9  39          	add	hl,sp
871   05EA  CD 00 00    	call	l_glong2sp
872   05ED  21 04 00    	ld	hl,4	;const
873   05F0  39          	add	hl,sp
874   05F1  CD 00 00    	call	l_gint	;
875   05F4  CD 00 00    	call	l_int2long_s
876   05F7  CD 00 00    	call	l_long_asr
877   05FA  D5          	push	de
878   05FB  E5          	push	hl
879   05FC  21 00 00    	ld	hl,0	;const
880   05FF  11 FC FF    	ld	de,65532
881   0602  CD 00 00    	call	l_long_eq
882   0605  E5          	push	hl
883   0606  21 00 00    	ld	hl,i_1+0
884   0609  E5          	push	hl
885   060A  21 50 00    	ld	hl,80	;const
886   060D  E5          	push	hl
887   060E  21 40 00    	ld	hl,i_1+64
888   0611  E5          	push	hl
889   0612  CD 00 00    	call	_Assert_real
890   0615  C1          	pop	bc
891   0616  C1          	pop	bc
892   0617  C1          	pop	bc
893   0618  C1          	pop	bc
894   0619  E1          	pop	hl
895   061A  23          	inc	hl
896   061B  E5          	push	hl
897   061C  21 02 00    	ld	hl,2	;const
898   061F  39          	add	hl,sp
899   0620  CD 00 00    	call	l_glong2sp
900   0623  21 04 00    	ld	hl,4	;const
901   0626  39          	add	hl,sp
902   0627  CD 00 00    	call	l_gint	;
903   062A  CD 00 00    	call	l_int2long_s
904   062D  CD 00 00    	call	l_long_asr
905   0630  D5          	push	de
906   0631  E5          	push	hl
907   0632  21 00 00    	ld	hl,0	;const
908   0635  11 FE FF    	ld	de,65534
909   0638  CD 00 00    	call	l_long_eq
910   063B  E5          	push	hl
911   063C  21 00 00    	ld	hl,i_1+0
912   063F  E5          	push	hl
913   0640  21 52 00    	ld	hl,82	;const
914   0643  E5          	push	hl
915   0644  21 45 00    	ld	hl,i_1+69
916   0647  E5          	push	hl
917   0648  CD 00 00    	call	_Assert_real
918   064B  C1          	pop	bc
919   064C  C1          	pop	bc
920   064D  C1          	pop	bc
921   064E  C1          	pop	bc
922   064F  E1          	pop	hl
923   0650  23          	inc	hl
924   0651  E5          	push	hl
925   0652  21 02 00    	ld	hl,2	;const
926   0655  39          	add	hl,sp
927   0656  CD 00 00    	call	l_glong2sp
928   0659  21 04 00    	ld	hl,4	;const
929   065C  39          	add	hl,sp
930   065D  CD 00 00    	call	l_gint	;
931   0660  CD 00 00    	call	l_int2long_s
932   0663  CD 00 00    	call	l_long_asr
933   0666  D5          	push	de
934   0667  E5          	push	hl
935   0668  21 00 00    	ld	hl,0	;const
936   066B  11 FF FF    	ld	de,65535
937   066E  CD 00 00    	call	l_long_eq
938   0671  E5          	push	hl
939   0672  21 00 00    	ld	hl,i_1+0
940   0675  E5          	push	hl
941   0676  21 54 00    	ld	hl,84	;const
942   0679  E5          	push	hl
943   067A  21 4A 00    	ld	hl,i_1+74
944   067D  E5          	push	hl
945   067E  CD 00 00    	call	_Assert_real
946   0681  C1          	pop	bc
947   0682  C1          	pop	bc
948   0683  C1          	pop	bc
949   0684  C1          	pop	bc
950   0685  E1          	pop	hl
951   0686  23          	inc	hl
952   0687  E5          	push	hl
953   0688  21 02 00    	ld	hl,2	;const
954   068B  39          	add	hl,sp
955   068C  CD 00 00    	call	l_glong2sp
956   068F  21 04 00    	ld	hl,4	;const
957   0692  39          	add	hl,sp
958   0693  CD 00 00    	call	l_gint	;
959   0696  CD 00 00    	call	l_int2long_s
960   0699  CD 00 00    	call	l_long_asr
961   069C  D5          	push	de
962   069D  E5          	push	hl
963   069E  21 00 80    	ld	hl,32768	;const
964   06A1  11 FF FF    	ld	de,65535
965   06A4  CD 00 00    	call	l_long_eq
966   06A7  E5          	push	hl
967   06A8  21 00 00    	ld	hl,i_1+0
968   06AB  E5          	push	hl
969   06AC  21 56 00    	ld	hl,86	;const
970   06AF  E5          	push	hl
971   06B0  21 4F 00    	ld	hl,i_1+79
972   06B3  E5          	push	hl
973   06B4  CD 00 00    	call	_Assert_real
974   06B7  C1          	pop	bc
975   06B8  C1          	pop	bc
976   06B9  C1          	pop	bc
977   06BA  C1          	pop	bc
978   06BB  E1          	pop	hl
979   06BC  23          	inc	hl
980   06BD  E5          	push	hl
981   06BE  21 02 00    	ld	hl,2	;const
982   06C1  39          	add	hl,sp
983   06C2  CD 00 00    	call	l_glong2sp
984   06C5  21 04 00    	ld	hl,4	;const
985   06C8  39          	add	hl,sp
986   06C9  CD 00 00    	call	l_gint	;
987   06CC  CD 00 00    	call	l_int2long_s
988   06CF  CD 00 00    	call	l_long_asr
989   06D2  D5          	push	de
990   06D3  E5          	push	hl
991   06D4  21 00 C0    	ld	hl,49152	;const
992   06D7  11 FF FF    	ld	de,65535
993   06DA  CD 00 00    	call	l_long_eq
994   06DD  E5          	push	hl
995   06DE  21 00 00    	ld	hl,i_1+0
996   06E1  E5          	push	hl
997   06E2  21 58 00    	ld	hl,88	;const
998   06E5  E5          	push	hl
999   06E6  21 54 00    	ld	hl,i_1+84
1000  06E9  E5          	push	hl
1001  06EA  CD 00 00    	call	_Assert_real
1002  06ED  C1          	pop	bc
1003  06EE  C1          	pop	bc
1004  06EF  C1          	pop	bc
1005  06F0  C1          	pop	bc
1006  06F1  E1          	pop	hl
1007  06F2  23          	inc	hl
1008  06F3  E5          	push	hl
1009  06F4  21 02 00    	ld	hl,2	;const
1010  06F7  39          	add	hl,sp
1011  06F8  CD 00 00    	call	l_glong2sp
1012  06FB  21 04 00    	ld	hl,4	;const
1013  06FE  39          	add	hl,sp
1014  06FF  CD 00 00    	call	l_gint	;
1015  0702  CD 00 00    	call	l_int2long_s
1016  0705  CD 00 00    	call	l_long_asr
1017  0708  D5          	push	de
1018  0709  E5          	push	hl
1019  070A  21 00 E0    	ld	hl,57344	;const
1020  070D  11 FF FF    	ld	de,65535
1021  0710  CD 00 00    	call	l_long_eq
1022  0713  E5          	push	hl
1023  0714  21 00 00    	ld	hl,i_1+0
1024  0717  E5          	push	hl
1025  0718  21 5A 00    	ld	hl,90	;const
1026  071B  E5          	push	hl
1027  071C  21 59 00    	ld	hl,i_1+89
1028  071F  E5          	push	hl
1029  0720  CD 00 00    	call	_Assert_real
1030  0723  C1          	pop	bc
1031  0724  C1          	pop	bc
1032  0725  C1          	pop	bc
1033  0726  C1          	pop	bc
1034  0727  E1          	pop	hl
1035  0728  23          	inc	hl
1036  0729  E5          	push	hl
1037  072A  21 02 00    	ld	hl,2	;const
1038  072D  39          	add	hl,sp
1039  072E  CD 00 00    	call	l_glong2sp
1040  0731  21 04 00    	ld	hl,4	;const
1041  0734  39          	add	hl,sp
1042  0735  CD 00 00    	call	l_gint	;
1043  0738  CD 00 00    	call	l_int2long_s
1044  073B  CD 00 00    	call	l_long_asr
1045  073E  D5          	push	de
1046  073F  E5          	push	hl
1047  0740  21 00 F0    	ld	hl,61440	;const
1048  0743  11 FF FF    	ld	de,65535
1049  0746  CD 00 00    	call	l_long_eq
1050  0749  E5          	push	hl
1051  074A  21 00 00    	ld	hl,i_1+0
1052  074D  E5          	push	hl
1053  074E  21 5C 00    	ld	hl,92	;const
1054  0751  E5          	push	hl
1055  0752  21 5E 00    	ld	hl,i_1+94
1056  0755  E5          	push	hl
1057  0756  CD 00 00    	call	_Assert_real
1058  0759  C1          	pop	bc
1059  075A  C1          	pop	bc
1060  075B  C1          	pop	bc
1061  075C  C1          	pop	bc
1062  075D  E1          	pop	hl
1063  075E  23          	inc	hl
1064  075F  E5          	push	hl
1065  0760  21 02 00    	ld	hl,2	;const
1066  0763  39          	add	hl,sp
1067  0764  CD 00 00    	call	l_glong2sp
1068  0767  21 04 00    	ld	hl,4	;const
1069  076A  39          	add	hl,sp
1070  076B  CD 00 00    	call	l_gint	;
1071  076E  CD 00 00    	call	l_int2long_s
1072  0771  CD 00 00    	call	l_long_asr
1073  0774  D5          	push	de
1074  0775  E5          	push	hl
1075  0776  21 00 F8    	ld	hl,63488	;const
1076  0779  11 FF FF    	ld	de,65535
1077  077C  CD 00 00    	call	l_long_eq
1078  077F  E5          	push	hl
1079  0780  21 00 00    	ld	hl,i_1+0
1080  0783  E5          	push	hl
1081  0784  21 5E 00    	ld	hl,94	;const
1082  0787  E5          	push	hl
1083  0788  21 63 00    	ld	hl,i_1+99
1084  078B  E5          	push	hl
1085  078C  CD 00 00    	call	_Assert_real
1086  078F  C1          	pop	bc
1087  0790  C1          	pop	bc
1088  0791  C1          	pop	bc
1089  0792  C1          	pop	bc
1090  0793  E1          	pop	hl
1091  0794  23          	inc	hl
1092  0795  E5          	push	hl
1093  0796  21 02 00    	ld	hl,2	;const
1094  0799  39          	add	hl,sp
1095  079A  CD 00 00    	call	l_glong2sp
1096  079D  21 04 00    	ld	hl,4	;const
1097  07A0  39          	add	hl,sp
1098  07A1  CD 00 00    	call	l_gint	;
1099  07A4  CD 00 00    	call	l_int2long_s
1100  07A7  CD 00 00    	call	l_long_asr
1101  07AA  D5          	push	de
1102  07AB  E5          	push	hl
1103  07AC  21 00 FC    	ld	hl,64512	;const
1104  07AF  11 FF FF    	ld	de,65535
1105  07B2  CD 00 00    	call	l_long_eq
1106  07B5  E5          	push	hl
1107  07B6  21 00 00    	ld	hl,i_1+0
1108  07B9  E5          	push	hl
1109  07BA  21 60 00    	ld	hl,96	;const
1110  07BD  E5          	push	hl
1111  07BE  21 68 00    	ld	hl,i_1+104
1112  07C1  E5          	push	hl
1113  07C2  CD 00 00    	call	_Assert_real
1114  07C5  C1          	pop	bc
1115  07C6  C1          	pop	bc
1116  07C7  C1          	pop	bc
1117  07C8  C1          	pop	bc
1118  07C9  E1          	pop	hl
1119  07CA  23          	inc	hl
1120  07CB  E5          	push	hl
1121  07CC  21 02 00    	ld	hl,2	;const
1122  07CF  39          	add	hl,sp
1123  07D0  CD 00 00    	call	l_glong2sp
1124  07D3  21 04 00    	ld	hl,4	;const
1125  07D6  39          	add	hl,sp
1126  07D7  CD 00 00    	call	l_gint	;
1127  07DA  CD 00 00    	call	l_int2long_s
1128  07DD  CD 00 00    	call	l_long_asr
1129  07E0  D5          	push	de
1130  07E1  E5          	push	hl
1131  07E2  21 00 FE    	ld	hl,65024	;const
1132  07E5  11 FF FF    	ld	de,65535
1133  07E8  CD 00 00    	call	l_long_eq
1134  07EB  E5          	push	hl
1135  07EC  21 00 00    	ld	hl,i_1+0
1136  07EF  E5          	push	hl
1137  07F0  21 62 00    	ld	hl,98	;const
1138  07F3  E5          	push	hl
1139  07F4  21 6D 00    	ld	hl,i_1+109
1140  07F7  E5          	push	hl
1141  07F8  CD 00 00    	call	_Assert_real
1142  07FB  C1          	pop	bc
1143  07FC  C1          	pop	bc
1144  07FD  C1          	pop	bc
1145  07FE  C1          	pop	bc
1146  07FF  E1          	pop	hl
1147  0800  23          	inc	hl
1148  0801  E5          	push	hl
1149  0802  21 02 00    	ld	hl,2	;const
1150  0805  39          	add	hl,sp
1151  0806  CD 00 00    	call	l_glong2sp
1152  0809  21 04 00    	ld	hl,4	;const
1153  080C  39          	add	hl,sp
1154  080D  CD 00 00    	call	l_gint	;
1155  0810  CD 00 00    	call	l_int2long_s
1156  0813  CD 00 00    	call	l_long_asr
1157  0816  D5          	push	de
1158  0817  E5          	push	hl
1159  0818  21 00 FF    	ld	hl,65280	;const
1160  081B  11 FF FF    	ld	de,65535
1161  081E  CD 00 00    	call	l_long_eq
1162  0821  E5          	push	hl
1163  0822  21 00 00    	ld	hl,i_1+0
1164  0825  E5          	push	hl
1165  0826  21 64 00    	ld	hl,100	;const
1166  0829  E5          	push	hl
1167  082A  21 72 00    	ld	hl,i_1+114
1168  082D  E5          	push	hl
1169  082E  CD 00 00    	call	_Assert_real
1170  0831  C1          	pop	bc
1171  0832  C1          	pop	bc
1172  0833  C1          	pop	bc
1173  0834  C1          	pop	bc
1174  0835  E1          	pop	hl
1175  0836  23          	inc	hl
1176  0837  E5          	push	hl
1177  0838  21 02 00    	ld	hl,2	;const
1178  083B  39          	add	hl,sp
1179  083C  CD 00 00    	call	l_glong2sp
1180  083F  21 04 00    	ld	hl,4	;const
1181  0842  39          	add	hl,sp
1182  0843  CD 00 00    	call	l_gint	;
1183  0846  CD 00 00    	call	l_int2long_s
1184  0849  CD 00 00    	call	l_long_asr
1185  084C  D5          	push	de
1186  084D  E5          	push	hl
1187  084E  21 80 FF    	ld	hl,65408	;const
1188  0851  11 FF FF    	ld	de,65535
1189  0854  CD 00 00    	call	l_long_eq
1190  0857  E5          	push	hl
1191  0858  21 00 00    	ld	hl,i_1+0
1192  085B  E5          	push	hl
1193  085C  21 66 00    	ld	hl,102	;const
1194  085F  E5          	push	hl
1195  0860  21 77 00    	ld	hl,i_1+119
1196  0863  E5          	push	hl
1197  0864  CD 00 00    	call	_Assert_real
1198  0867  C1          	pop	bc
1199  0868  C1          	pop	bc
1200  0869  C1          	pop	bc
1201  086A  C1          	pop	bc
1202  086B  E1          	pop	hl
1203  086C  23          	inc	hl
1204  086D  E5          	push	hl
1205  086E  21 02 00    	ld	hl,2	;const
1206  0871  39          	add	hl,sp
1207  0872  CD 00 00    	call	l_glong2sp
1208  0875  21 04 00    	ld	hl,4	;const
1209  0878  39          	add	hl,sp
1210  0879  CD 00 00    	call	l_gint	;
1211  087C  CD 00 00    	call	l_int2long_s
1212  087F  CD 00 00    	call	l_long_asr
1213  0882  D5          	push	de
1214  0883  E5          	push	hl
1215  0884  21 C0 FF    	ld	hl,65472	;const
1216  0887  11 FF FF    	ld	de,65535
1217  088A  CD 00 00    	call	l_long_eq
1218  088D  E5          	push	hl
1219  088E  21 00 00    	ld	hl,i_1+0
1220  0891  E5          	push	hl
1221  0892  21 68 00    	ld	hl,104	;const
1222  0895  E5          	push	hl
1223  0896  21 7C 00    	ld	hl,i_1+124
1224  0899  E5          	push	hl
1225  089A  CD 00 00    	call	_Assert_real
1226  089D  C1          	pop	bc
1227  089E  C1          	pop	bc
1228  089F  C1          	pop	bc
1229  08A0  C1          	pop	bc
1230  08A1  E1          	pop	hl
1231  08A2  23          	inc	hl
1232  08A3  E5          	push	hl
1233  08A4  21 02 00    	ld	hl,2	;const
1234  08A7  39          	add	hl,sp
1235  08A8  CD 00 00    	call	l_glong2sp
1236  08AB  21 04 00    	ld	hl,4	;const
1237  08AE  39          	add	hl,sp
1238  08AF  CD 00 00    	call	l_gint	;
1239  08B2  CD 00 00    	call	l_int2long_s
1240  08B5  CD 00 00    	call	l_long_asr
1241  08B8  D5          	push	de
1242  08B9  E5          	push	hl
1243  08BA  21 E0 FF    	ld	hl,65504	;const
1244  08BD  11 FF FF    	ld	de,65535
1245  08C0  CD 00 00    	call	l_long_eq
1246  08C3  E5          	push	hl
1247  08C4  21 00 00    	ld	hl,i_1+0
1248  08C7  E5          	push	hl
1249  08C8  21 6A 00    	ld	hl,106	;const
1250  08CB  E5          	push	hl
1251  08CC  21 81 00    	ld	hl,i_1+129
1252  08CF  E5          	push	hl
1253  08D0  CD 00 00    	call	_Assert_real
1254  08D3  C1          	pop	bc
1255  08D4  C1          	pop	bc
1256  08D5  C1          	pop	bc
1257  08D6  C1          	pop	bc
1258  08D7  E1          	pop	hl
1259  08D8  23          	inc	hl
1260  08D9  E5          	push	hl
1261  08DA  21 02 00    	ld	hl,2	;const
1262  08DD  39          	add	hl,sp
1263  08DE  CD 00 00    	call	l_glong2sp
1264  08E1  21 04 00    	ld	hl,4	;const
1265  08E4  39          	add	hl,sp
1266  08E5  CD 00 00    	call	l_gint	;
1267  08E8  CD 00 00    	call	l_int2long_s
1268  08EB  CD 00 00    	call	l_long_asr
1269  08EE  D5          	push	de
1270  08EF  E5          	push	hl
1271  08F0  21 F0 FF    	ld	hl,65520	;const
1272  08F3  11 FF FF    	ld	de,65535
1273  08F6  CD 00 00    	call	l_long_eq
1274  08F9  E5          	push	hl
1275  08FA  21 00 00    	ld	hl,i_1+0
1276  08FD  E5          	push	hl
1277  08FE  21 6C 00    	ld	hl,108	;const
1278  0901  E5          	push	hl
1279  0902  21 86 00    	ld	hl,i_1+134
1280  0905  E5          	push	hl
1281  0906  CD 00 00    	call	_Assert_real
1282  0909  C1          	pop	bc
1283  090A  C1          	pop	bc
1284  090B  C1          	pop	bc
1285  090C  C1          	pop	bc
1286  090D  E1          	pop	hl
1287  090E  23          	inc	hl
1288  090F  E5          	push	hl
1289  0910  21 02 00    	ld	hl,2	;const
1290  0913  39          	add	hl,sp
1291  0914  CD 00 00    	call	l_glong2sp
1292  0917  21 04 00    	ld	hl,4	;const
1293  091A  39          	add	hl,sp
1294  091B  CD 00 00    	call	l_gint	;
1295  091E  CD 00 00    	call	l_int2long_s
1296  0921  CD 00 00    	call	l_long_asr
1297  0924  D5          	push	de
1298  0925  E5          	push	hl
1299  0926  21 F8 FF    	ld	hl,65528	;const
1300  0929  11 FF FF    	ld	de,65535
1301  092C  CD 00 00    	call	l_long_eq
1302  092F  E5          	push	hl
1303  0930  21 00 00    	ld	hl,i_1+0
1304  0933  E5          	push	hl
1305  0934  21 6E 00    	ld	hl,110	;const
1306  0937  E5          	push	hl
1307  0938  21 8B 00    	ld	hl,i_1+139
1308  093B  E5          	push	hl
1309  093C  CD 00 00    	call	_Assert_real
1310  093F  C1          	pop	bc
1311  0940  C1          	pop	bc
1312  0941  C1          	pop	bc
1313  0942  C1          	pop	bc
1314  0943  E1          	pop	hl
1315  0944  23          	inc	hl
1316  0945  E5          	push	hl
1317  0946  21 02 00    	ld	hl,2	;const
1318  0949  39          	add	hl,sp
1319  094A  CD 00 00    	call	l_glong2sp
1320  094D  21 04 00    	ld	hl,4	;const
1321  0950  39          	add	hl,sp
1322  0951  CD 00 00    	call	l_gint	;
1323  0954  CD 00 00    	call	l_int2long_s
1324  0957  CD 00 00    	call	l_long_asr
1325  095A  D5          	push	de
1326  095B  E5          	push	hl
1327  095C  21 FC FF    	ld	hl,65532	;const
1328  095F  11 FF FF    	ld	de,65535
1329  0962  CD 00 00    	call	l_long_eq
1330  0965  E5          	push	hl
1331  0966  21 00 00    	ld	hl,i_1+0
1332  0969  E5          	push	hl
1333  096A  21 70 00    	ld	hl,112	;const
1334  096D  E5          	push	hl
1335  096E  21 90 00    	ld	hl,i_1+144
1336  0971  E5          	push	hl
1337  0972  CD 00 00    	call	_Assert_real
1338  0975  C1          	pop	bc
1339  0976  C1          	pop	bc
1340  0977  C1          	pop	bc
1341  0978  C1          	pop	bc
1342  0979  E1          	pop	hl
1343  097A  23          	inc	hl
1344  097B  E5          	push	hl
1345  097C  21 02 00    	ld	hl,2	;const
1346  097F  39          	add	hl,sp
1347  0980  CD 00 00    	call	l_glong2sp
1348  0983  21 04 00    	ld	hl,4	;const
1349  0986  39          	add	hl,sp
1350  0987  CD 00 00    	call	l_gint	;
1351  098A  CD 00 00    	call	l_int2long_s
1352  098D  CD 00 00    	call	l_long_asr
1353  0990  D5          	push	de
1354  0991  E5          	push	hl
1355  0992  21 FE FF    	ld	hl,65534	;const
1356  0995  11 FF FF    	ld	de,65535
1357  0998  CD 00 00    	call	l_long_eq
1358  099B  E5          	push	hl
1359  099C  21 00 00    	ld	hl,i_1+0
1360  099F  E5          	push	hl
1361  09A0  21 72 00    	ld	hl,114	;const
1362  09A3  E5          	push	hl
1363  09A4  21 95 00    	ld	hl,i_1+149
1364  09A7  E5          	push	hl
1365  09A8  CD 00 00    	call	_Assert_real
1366  09AB  C1          	pop	bc
1367  09AC  C1          	pop	bc
1368  09AD  C1          	pop	bc
1369  09AE  C1          	pop	bc
1370  09AF  E1          	pop	hl
1371  09B0  23          	inc	hl
1372  09B1  E5          	push	hl
1373  09B2  21 02 00    	ld	hl,2	;const
1374  09B5  39          	add	hl,sp
1375  09B6  CD 00 00    	call	l_glong2sp
1376  09B9  21 04 00    	ld	hl,4	;const
1377  09BC  39          	add	hl,sp
1378  09BD  CD 00 00    	call	l_gint	;
1379  09C0  CD 00 00    	call	l_int2long_s
1380  09C3  CD 00 00    	call	l_long_asr
1381  09C6  D5          	push	de
1382  09C7  E5          	push	hl
1383  09C8  21 FF FF    	ld	hl,65535	;const
1384  09CB  11 FF FF    	ld	de,65535
1385  09CE  CD 00 00    	call	l_long_eq
1386  09D1  E5          	push	hl
1387  09D2  21 00 00    	ld	hl,i_1+0
1388  09D5  E5          	push	hl
1389  09D6  21 74 00    	ld	hl,116	;const
1390  09D9  E5          	push	hl
1391  09DA  21 9A 00    	ld	hl,i_1+154
1392  09DD  E5          	push	hl
1393  09DE  CD 00 00    	call	_Assert_real
1394  09E1  C1          	pop	bc
1395  09E2  C1          	pop	bc
1396  09E3  C1          	pop	bc
1397  09E4  C1          	pop	bc
1398  09E5  E1          	pop	hl
1399  09E6  23          	inc	hl
1400  09E7  23          	inc	hl
1401  09E8  E5          	push	hl
1402  09E9  C1          	pop	bc
1403  09EA  C1          	pop	bc
1404  09EB  C1          	pop	bc
1405  09EC  C9          	ret
1406  09ED              
1407  09ED              
1408  09ED              
1409  09ED              ; Function test_rshift16_const flags 0x00000200 __smallc
1410  09ED              ; void test_rshift16_const()
1411  09ED              ._test_rshift16_const
1412  09ED  21 00 80    	ld	hl,32768	;const
1413  09F0  E5          	push	hl
1414  09F1  11 00 80    	ld	de,32768
1415  09F4  A7          	and	a
1416  09F5  ED 52       	sbc	hl,de
1417  09F7  21 01 00    	ld	hl,1	;const
1418  09FA  28 01       	jr	z,ASMPC+3
1419  09FC  2B          	dec	hl
1420  09FD  E5          	push	hl
1421  09FE  21 00 00    	ld	hl,i_1+0
1422  0A01  E5          	push	hl
1423  0A02  21 80 00    	ld	hl,128	;const
1424  0A05  E5          	push	hl
1425  0A06  21 09 00    	ld	hl,i_1+9
1426  0A09  E5          	push	hl
1427  0A0A  CD 00 00    	call	_Assert_real
1428  0A0D  C1          	pop	bc
1429  0A0E  C1          	pop	bc
1430  0A0F  C1          	pop	bc
1431  0A10  C1          	pop	bc
1432  0A11  E1          	pop	hl
1433  0A12  E5          	push	hl
1434  0A13  CB 2C       	sra	h
1435  0A15  CB 1D       	rr	l
1436  0A17  11 00 C0    	ld	de,49152
1437  0A1A  A7          	and	a
1438  0A1B  ED 52       	sbc	hl,de
1439  0A1D  21 01 00    	ld	hl,1	;const
1440  0A20  28 01       	jr	z,ASMPC+3
1441  0A22  2B          	dec	hl
1442  0A23  E5          	push	hl
1443  0A24  21 00 00    	ld	hl,i_1+0
1444  0A27  E5          	push	hl
1445  0A28  21 81 00    	ld	hl,129	;const
1446  0A2B  E5          	push	hl
1447  0A2C  21 0D 00    	ld	hl,i_1+13
1448  0A2F  E5          	push	hl
1449  0A30  CD 00 00    	call	_Assert_real
1450  0A33  C1          	pop	bc
1451  0A34  C1          	pop	bc
1452  0A35  C1          	pop	bc
1453  0A36  C1          	pop	bc
1454  0A37  E1          	pop	hl
1455  0A38  E5          	push	hl
1456  0A39  CB 2C       	sra	h
1457  0A3B  CB 1D       	rr	l
1458  0A3D  CB 2C       	sra	h
1459  0A3F  CB 1D       	rr	l
1460  0A41  11 00 E0    	ld	de,57344
1461  0A44  A7          	and	a
1462  0A45  ED 52       	sbc	hl,de
1463  0A47  21 01 00    	ld	hl,1	;const
1464  0A4A  28 01       	jr	z,ASMPC+3
1465  0A4C  2B          	dec	hl
1466  0A4D  E5          	push	hl
1467  0A4E  21 00 00    	ld	hl,i_1+0
1468  0A51  E5          	push	hl
1469  0A52  21 82 00    	ld	hl,130	;const
1470  0A55  E5          	push	hl
1471  0A56  21 11 00    	ld	hl,i_1+17
1472  0A59  E5          	push	hl
1473  0A5A  CD 00 00    	call	_Assert_real
1474  0A5D  C1          	pop	bc
1475  0A5E  C1          	pop	bc
1476  0A5F  C1          	pop	bc
1477  0A60  C1          	pop	bc
1478  0A61  E1          	pop	hl
1479  0A62  E5          	push	hl
1480  0A63  11 03 00    	ld	de,3
1481  0A66  CD 00 00    	call	l_asr_hl_by_e
1482  0A69  11 00 F0    	ld	de,61440
1483  0A6C  A7          	and	a
1484  0A6D  ED 52       	sbc	hl,de
1485  0A6F  21 01 00    	ld	hl,1	;const
1486  0A72  28 01       	jr	z,ASMPC+3
1487  0A74  2B          	dec	hl
1488  0A75  E5          	push	hl
1489  0A76  21 00 00    	ld	hl,i_1+0
1490  0A79  E5          	push	hl
1491  0A7A  21 83 00    	ld	hl,131	;const
1492  0A7D  E5          	push	hl
1493  0A7E  21 15 00    	ld	hl,i_1+21
1494  0A81  E5          	push	hl
1495  0A82  CD 00 00    	call	_Assert_real
1496  0A85  C1          	pop	bc
1497  0A86  C1          	pop	bc
1498  0A87  C1          	pop	bc
1499  0A88  C1          	pop	bc
1500  0A89  E1          	pop	hl
1501  0A8A  E5          	push	hl
1502  0A8B  11 04 00    	ld	de,4
1503  0A8E  CD 00 00    	call	l_asr_hl_by_e
1504  0A91  11 00 F8    	ld	de,63488
1505  0A94  A7          	and	a
1506  0A95  ED 52       	sbc	hl,de
1507  0A97  21 01 00    	ld	hl,1	;const
1508  0A9A  28 01       	jr	z,ASMPC+3
1509  0A9C  2B          	dec	hl
1510  0A9D  E5          	push	hl
1511  0A9E  21 00 00    	ld	hl,i_1+0
1512  0AA1  E5          	push	hl
1513  0AA2  21 84 00    	ld	hl,132	;const
1514  0AA5  E5          	push	hl
1515  0AA6  21 19 00    	ld	hl,i_1+25
1516  0AA9  E5          	push	hl
1517  0AAA  CD 00 00    	call	_Assert_real
1518  0AAD  C1          	pop	bc
1519  0AAE  C1          	pop	bc
1520  0AAF  C1          	pop	bc
1521  0AB0  C1          	pop	bc
1522  0AB1  E1          	pop	hl
1523  0AB2  E5          	push	hl
1524  0AB3  11 05 00    	ld	de,5
1525  0AB6  CD 00 00    	call	l_asr_hl_by_e
1526  0AB9  11 00 FC    	ld	de,64512
1527  0ABC  A7          	and	a
1528  0ABD  ED 52       	sbc	hl,de
1529  0ABF  21 01 00    	ld	hl,1	;const
1530  0AC2  28 01       	jr	z,ASMPC+3
1531  0AC4  2B          	dec	hl
1532  0AC5  E5          	push	hl
1533  0AC6  21 00 00    	ld	hl,i_1+0
1534  0AC9  E5          	push	hl
1535  0ACA  21 85 00    	ld	hl,133	;const
1536  0ACD  E5          	push	hl
1537  0ACE  21 1D 00    	ld	hl,i_1+29
1538  0AD1  E5          	push	hl
1539  0AD2  CD 00 00    	call	_Assert_real
1540  0AD5  C1          	pop	bc
1541  0AD6  C1          	pop	bc
1542  0AD7  C1          	pop	bc
1543  0AD8  C1          	pop	bc
1544  0AD9  E1          	pop	hl
1545  0ADA  E5          	push	hl
1546  0ADB  11 06 00    	ld	de,6
1547  0ADE  CD 00 00    	call	l_asr_hl_by_e
1548  0AE1  11 00 FE    	ld	de,65024
1549  0AE4  A7          	and	a
1550  0AE5  ED 52       	sbc	hl,de
1551  0AE7  21 01 00    	ld	hl,1	;const
1552  0AEA  28 01       	jr	z,ASMPC+3
1553  0AEC  2B          	dec	hl
1554  0AED  E5          	push	hl
1555  0AEE  21 00 00    	ld	hl,i_1+0
1556  0AF1  E5          	push	hl
1557  0AF2  21 86 00    	ld	hl,134	;const
1558  0AF5  E5          	push	hl
1559  0AF6  21 21 00    	ld	hl,i_1+33
1560  0AF9  E5          	push	hl
1561  0AFA  CD 00 00    	call	_Assert_real
1562  0AFD  C1          	pop	bc
1563  0AFE  C1          	pop	bc
1564  0AFF  C1          	pop	bc
1565  0B00  C1          	pop	bc
1566  0B01  E1          	pop	hl
1567  0B02  E5          	push	hl
1568  0B03  11 07 00    	ld	de,7
1569  0B06  CD 00 00    	call	l_asr_hl_by_e
1570  0B09  11 00 FF    	ld	de,65280
1571  0B0C  A7          	and	a
1572  0B0D  ED 52       	sbc	hl,de
1573  0B0F  21 01 00    	ld	hl,1	;const
1574  0B12  28 01       	jr	z,ASMPC+3
1575  0B14  2B          	dec	hl
1576  0B15  E5          	push	hl
1577  0B16  21 00 00    	ld	hl,i_1+0
1578  0B19  E5          	push	hl
1579  0B1A  21 87 00    	ld	hl,135	;const
1580  0B1D  E5          	push	hl
1581  0B1E  21 25 00    	ld	hl,i_1+37
1582  0B21  E5          	push	hl
1583  0B22  CD 00 00    	call	_Assert_real
1584  0B25  C1          	pop	bc
1585  0B26  C1          	pop	bc
1586  0B27  C1          	pop	bc
1587  0B28  C1          	pop	bc
1588  0B29  E1          	pop	hl
1589  0B2A  E5          	push	hl
1590  0B2B  6C          	ld	l,h
1591  0B2C  7C          	ld	a,h
1592  0B2D  07          	rlca
1593  0B2E  9F          	sbc	a
1594  0B2F  67          	ld	h,a
1595  0B30  11 80 FF    	ld	de,65408
1596  0B33  A7          	and	a
1597  0B34  ED 52       	sbc	hl,de
1598  0B36  21 01 00    	ld	hl,1	;const
1599  0B39  28 01       	jr	z,ASMPC+3
1600  0B3B  2B          	dec	hl
1601  0B3C  E5          	push	hl
1602  0B3D  21 00 00    	ld	hl,i_1+0
1603  0B40  E5          	push	hl
1604  0B41  21 88 00    	ld	hl,136	;const
1605  0B44  E5          	push	hl
1606  0B45  21 29 00    	ld	hl,i_1+41
1607  0B48  E5          	push	hl
1608  0B49  CD 00 00    	call	_Assert_real
1609  0B4C  C1          	pop	bc
1610  0B4D  C1          	pop	bc
1611  0B4E  C1          	pop	bc
1612  0B4F  C1          	pop	bc
1613  0B50  E1          	pop	hl
1614  0B51  E5          	push	hl
1615  0B52  11 09 00    	ld	de,9
1616  0B55  CD 00 00    	call	l_asr_hl_by_e
1617  0B58  11 C0 FF    	ld	de,65472
1618  0B5B  A7          	and	a
1619  0B5C  ED 52       	sbc	hl,de
1620  0B5E  21 01 00    	ld	hl,1	;const
1621  0B61  28 01       	jr	z,ASMPC+3
1622  0B63  2B          	dec	hl
1623  0B64  E5          	push	hl
1624  0B65  21 00 00    	ld	hl,i_1+0
1625  0B68  E5          	push	hl
1626  0B69  21 89 00    	ld	hl,137	;const
1627  0B6C  E5          	push	hl
1628  0B6D  21 2D 00    	ld	hl,i_1+45
1629  0B70  E5          	push	hl
1630  0B71  CD 00 00    	call	_Assert_real
1631  0B74  C1          	pop	bc
1632  0B75  C1          	pop	bc
1633  0B76  C1          	pop	bc
1634  0B77  C1          	pop	bc
1635  0B78  E1          	pop	hl
1636  0B79  E5          	push	hl
1637  0B7A  11 0A 00    	ld	de,10
1638  0B7D  CD 00 00    	call	l_asr_hl_by_e
1639  0B80  11 E0 FF    	ld	de,65504
1640  0B83  A7          	and	a
1641  0B84  ED 52       	sbc	hl,de
1642  0B86  21 01 00    	ld	hl,1	;const
1643  0B89  28 01       	jr	z,ASMPC+3
1644  0B8B  2B          	dec	hl
1645  0B8C  E5          	push	hl
1646  0B8D  21 00 00    	ld	hl,i_1+0
1647  0B90  E5          	push	hl
1648  0B91  21 8A 00    	ld	hl,138	;const
1649  0B94  E5          	push	hl
1650  0B95  21 31 00    	ld	hl,i_1+49
1651  0B98  E5          	push	hl
1652  0B99  CD 00 00    	call	_Assert_real
1653  0B9C  C1          	pop	bc
1654  0B9D  C1          	pop	bc
1655  0B9E  C1          	pop	bc
1656  0B9F  C1          	pop	bc
1657  0BA0  E1          	pop	hl
1658  0BA1  E5          	push	hl
1659  0BA2  11 0B 00    	ld	de,11
1660  0BA5  CD 00 00    	call	l_asr_hl_by_e
1661  0BA8  11 F0 FF    	ld	de,65520
1662  0BAB  A7          	and	a
1663  0BAC  ED 52       	sbc	hl,de
1664  0BAE  21 01 00    	ld	hl,1	;const
1665  0BB1  28 01       	jr	z,ASMPC+3
1666  0BB3  2B          	dec	hl
1667  0BB4  E5          	push	hl
1668  0BB5  21 00 00    	ld	hl,i_1+0
1669  0BB8  E5          	push	hl
1670  0BB9  21 8B 00    	ld	hl,139	;const
1671  0BBC  E5          	push	hl
1672  0BBD  21 36 00    	ld	hl,i_1+54
1673  0BC0  E5          	push	hl
1674  0BC1  CD 00 00    	call	_Assert_real
1675  0BC4  C1          	pop	bc
1676  0BC5  C1          	pop	bc
1677  0BC6  C1          	pop	bc
1678  0BC7  C1          	pop	bc
1679  0BC8  E1          	pop	hl
1680  0BC9  E5          	push	hl
1681  0BCA  11 0C 00    	ld	de,12
1682  0BCD  CD 00 00    	call	l_asr_hl_by_e
1683  0BD0  11 F8 FF    	ld	de,65528
1684  0BD3  A7          	and	a
1685  0BD4  ED 52       	sbc	hl,de
1686  0BD6  21 01 00    	ld	hl,1	;const
1687  0BD9  28 01       	jr	z,ASMPC+3
1688  0BDB  2B          	dec	hl
1689  0BDC  E5          	push	hl
1690  0BDD  21 00 00    	ld	hl,i_1+0
1691  0BE0  E5          	push	hl
1692  0BE1  21 8C 00    	ld	hl,140	;const
1693  0BE4  E5          	push	hl
1694  0BE5  21 3B 00    	ld	hl,i_1+59
1695  0BE8  E5          	push	hl
1696  0BE9  CD 00 00    	call	_Assert_real
1697  0BEC  C1          	pop	bc
1698  0BED  C1          	pop	bc
1699  0BEE  C1          	pop	bc
1700  0BEF  C1          	pop	bc
1701  0BF0  E1          	pop	hl
1702  0BF1  E5          	push	hl
1703  0BF2  11 0D 00    	ld	de,13
1704  0BF5  CD 00 00    	call	l_asr_hl_by_e
1705  0BF8  11 FC FF    	ld	de,65532
1706  0BFB  A7          	and	a
1707  0BFC  ED 52       	sbc	hl,de
1708  0BFE  21 01 00    	ld	hl,1	;const
1709  0C01  28 01       	jr	z,ASMPC+3
1710  0C03  2B          	dec	hl
1711  0C04  E5          	push	hl
1712  0C05  21 00 00    	ld	hl,i_1+0
1713  0C08  E5          	push	hl
1714  0C09  21 8D 00    	ld	hl,141	;const
1715  0C0C  E5          	push	hl
1716  0C0D  21 40 00    	ld	hl,i_1+64
1717  0C10  E5          	push	hl
1718  0C11  CD 00 00    	call	_Assert_real
1719  0C14  C1          	pop	bc
1720  0C15  C1          	pop	bc
1721  0C16  C1          	pop	bc
1722  0C17  C1          	pop	bc
1723  0C18  E1          	pop	hl
1724  0C19  E5          	push	hl
1725  0C1A  11 0E 00    	ld	de,14
1726  0C1D  CD 00 00    	call	l_asr_hl_by_e
1727  0C20  11 FE FF    	ld	de,65534
1728  0C23  A7          	and	a
1729  0C24  ED 52       	sbc	hl,de
1730  0C26  21 01 00    	ld	hl,1	;const
1731  0C29  28 01       	jr	z,ASMPC+3
1732  0C2B  2B          	dec	hl
1733  0C2C  E5          	push	hl
1734  0C2D  21 00 00    	ld	hl,i_1+0
1735  0C30  E5          	push	hl
1736  0C31  21 8E 00    	ld	hl,142	;const
1737  0C34  E5          	push	hl
1738  0C35  21 45 00    	ld	hl,i_1+69
1739  0C38  E5          	push	hl
1740  0C39  CD 00 00    	call	_Assert_real
1741  0C3C  C1          	pop	bc
1742  0C3D  C1          	pop	bc
1743  0C3E  C1          	pop	bc
1744  0C3F  C1          	pop	bc
1745  0C40  E1          	pop	hl
1746  0C41  E5          	push	hl
1747  0C42  11 0F 00    	ld	de,15
1748  0C45  CD 00 00    	call	l_asr_hl_by_e
1749  0C48  11 FF FF    	ld	de,65535
1750  0C4B  A7          	and	a
1751  0C4C  ED 52       	sbc	hl,de
1752  0C4E  21 01 00    	ld	hl,1	;const
1753  0C51  28 01       	jr	z,ASMPC+3
1754  0C53  2B          	dec	hl
1755  0C54  E5          	push	hl
1756  0C55  21 00 00    	ld	hl,i_1+0
1757  0C58  E5          	push	hl
1758  0C59  21 8F 00    	ld	hl,143	;const
1759  0C5C  E5          	push	hl
1760  0C5D  21 4A 00    	ld	hl,i_1+74
1761  0C60  E5          	push	hl
1762  0C61  CD 00 00    	call	_Assert_real
1763  0C64  C1          	pop	bc
1764  0C65  C1          	pop	bc
1765  0C66  C1          	pop	bc
1766  0C67  C1          	pop	bc
1767  0C68  C1          	pop	bc
1768  0C69  C9          	ret
1769  0C6A              
1770  0C6A              
1771  0C6A              
1772  0C6A              ; Function test_rshift32_const flags 0x00000200 __smallc
1773  0C6A              ; void test_rshift32_const()
1774  0C6A              ._test_rshift32_const
1775  0C6A  21 00 00    	ld	hl,0	;const
1776  0C6D  11 00 80    	ld	de,32768
1777  0C70  D5          	push	de
1778  0C71  E5          	push	hl
1779  0C72  21 00 00    	ld	hl,0	;const
1780  0C75  39          	add	hl,sp
1781  0C76  CD 00 00    	call	l_glong2sp
1782  0C79  21 00 00    	ld	hl,0	;const
1783  0C7C  11 00 80    	ld	de,32768
1784  0C7F  CD 00 00    	call	l_long_eq
1785  0C82  E5          	push	hl
1786  0C83  21 00 00    	ld	hl,i_1+0
1787  0C86  E5          	push	hl
1788  0C87  21 99 00    	ld	hl,153	;const
1789  0C8A  E5          	push	hl
1790  0C8B  21 09 00    	ld	hl,i_1+9
1791  0C8E  E5          	push	hl
1792  0C8F  CD 00 00    	call	_Assert_real
1793  0C92  C1          	pop	bc
1794  0C93  C1          	pop	bc
1795  0C94  C1          	pop	bc
1796  0C95  C1          	pop	bc
1797  0C96  21 00 00    	ld	hl,0	;const
1798  0C99  39          	add	hl,sp
1799  0C9A  CD 00 00    	call	l_glong
1800  0C9D  CB 2A       	sra	d
1801  0C9F  CB 1B       	rr	e
1802  0CA1  CB 1C       	rr	h
1803  0CA3  CB 1D       	rr	l
1804  0CA5  D5          	push	de
1805  0CA6  E5          	push	hl
1806  0CA7  21 00 00    	ld	hl,0	;const
1807  0CAA  11 00 C0    	ld	de,49152
1808  0CAD  CD 00 00    	call	l_long_eq
1809  0CB0  E5          	push	hl
1810  0CB1  21 00 00    	ld	hl,i_1+0
1811  0CB4  E5          	push	hl
1812  0CB5  21 9A 00    	ld	hl,154	;const
1813  0CB8  E5          	push	hl
1814  0CB9  21 0D 00    	ld	hl,i_1+13
1815  0CBC  E5          	push	hl
1816  0CBD  CD 00 00    	call	_Assert_real
1817  0CC0  C1          	pop	bc
1818  0CC1  C1          	pop	bc
1819  0CC2  C1          	pop	bc
1820  0CC3  C1          	pop	bc
1821  0CC4  21 00 00    	ld	hl,0	;const
1822  0CC7  39          	add	hl,sp
1823  0CC8  CD 00 00    	call	l_glong2sp
1824  0CCB  2E 02       	ld	l,#(2 % 256)
1825  0CCD  CD 00 00    	call	l_long_asr
1826  0CD0  D5          	push	de
1827  0CD1  E5          	push	hl
1828  0CD2  21 00 00    	ld	hl,0	;const
1829  0CD5  11 00 E0    	ld	de,57344
1830  0CD8  CD 00 00    	call	l_long_eq
1831  0CDB  E5          	push	hl
1832  0CDC  21 00 00    	ld	hl,i_1+0
1833  0CDF  E5          	push	hl
1834  0CE0  21 9B 00    	ld	hl,155	;const
1835  0CE3  E5          	push	hl
1836  0CE4  21 11 00    	ld	hl,i_1+17
1837  0CE7  E5          	push	hl
1838  0CE8  CD 00 00    	call	_Assert_real
1839  0CEB  C1          	pop	bc
1840  0CEC  C1          	pop	bc
1841  0CED  C1          	pop	bc
1842  0CEE  C1          	pop	bc
1843  0CEF  21 00 00    	ld	hl,0	;const
1844  0CF2  39          	add	hl,sp
1845  0CF3  CD 00 00    	call	l_glong2sp
1846  0CF6  2E 03       	ld	l,#(3 % 256)
1847  0CF8  CD 00 00    	call	l_long_asr
1848  0CFB  D5          	push	de
1849  0CFC  E5          	push	hl
1850  0CFD  21 00 00    	ld	hl,0	;const
1851  0D00  11 00 F0    	ld	de,61440
1852  0D03  CD 00 00    	call	l_long_eq
1853  0D06  E5          	push	hl
1854  0D07  21 00 00    	ld	hl,i_1+0
1855  0D0A  E5          	push	hl
1856  0D0B  21 9C 00    	ld	hl,156	;const
1857  0D0E  E5          	push	hl
1858  0D0F  21 15 00    	ld	hl,i_1+21
1859  0D12  E5          	push	hl
1860  0D13  CD 00 00    	call	_Assert_real
1861  0D16  C1          	pop	bc
1862  0D17  C1          	pop	bc
1863  0D18  C1          	pop	bc
1864  0D19  C1          	pop	bc
1865  0D1A  21 00 00    	ld	hl,0	;const
1866  0D1D  39          	add	hl,sp
1867  0D1E  CD 00 00    	call	l_glong2sp
1868  0D21  2E 04       	ld	l,#(4 % 256)
1869  0D23  CD 00 00    	call	l_long_asr
1870  0D26  D5          	push	de
1871  0D27  E5          	push	hl
1872  0D28  21 00 00    	ld	hl,0	;const
1873  0D2B  11 00 F8    	ld	de,63488
1874  0D2E  CD 00 00    	call	l_long_eq
1875  0D31  E5          	push	hl
1876  0D32  21 00 00    	ld	hl,i_1+0
1877  0D35  E5          	push	hl
1878  0D36  21 9D 00    	ld	hl,157	;const
1879  0D39  E5          	push	hl
1880  0D3A  21 19 00    	ld	hl,i_1+25
1881  0D3D  E5          	push	hl
1882  0D3E  CD 00 00    	call	_Assert_real
1883  0D41  C1          	pop	bc
1884  0D42  C1          	pop	bc
1885  0D43  C1          	pop	bc
1886  0D44  C1          	pop	bc
1887  0D45  21 00 00    	ld	hl,0	;const
1888  0D48  39          	add	hl,sp
1889  0D49  CD 00 00    	call	l_glong2sp
1890  0D4C  2E 05       	ld	l,#(5 % 256)
1891  0D4E  CD 00 00    	call	l_long_asr
1892  0D51  D5          	push	de
1893  0D52  E5          	push	hl
1894  0D53  21 00 00    	ld	hl,0	;const
1895  0D56  11 00 FC    	ld	de,64512
1896  0D59  CD 00 00    	call	l_long_eq
1897  0D5C  E5          	push	hl
1898  0D5D  21 00 00    	ld	hl,i_1+0
1899  0D60  E5          	push	hl
1900  0D61  21 9E 00    	ld	hl,158	;const
1901  0D64  E5          	push	hl
1902  0D65  21 1D 00    	ld	hl,i_1+29
1903  0D68  E5          	push	hl
1904  0D69  CD 00 00    	call	_Assert_real
1905  0D6C  C1          	pop	bc
1906  0D6D  C1          	pop	bc
1907  0D6E  C1          	pop	bc
1908  0D6F  C1          	pop	bc
1909  0D70  21 00 00    	ld	hl,0	;const
1910  0D73  39          	add	hl,sp
1911  0D74  CD 00 00    	call	l_glong2sp
1912  0D77  2E 06       	ld	l,#(6 % 256)
1913  0D79  CD 00 00    	call	l_long_asr
1914  0D7C  D5          	push	de
1915  0D7D  E5          	push	hl
1916  0D7E  21 00 00    	ld	hl,0	;const
1917  0D81  11 00 FE    	ld	de,65024
1918  0D84  CD 00 00    	call	l_long_eq
1919  0D87  E5          	push	hl
1920  0D88  21 00 00    	ld	hl,i_1+0
1921  0D8B  E5          	push	hl
1922  0D8C  21 9F 00    	ld	hl,159	;const
1923  0D8F  E5          	push	hl
1924  0D90  21 21 00    	ld	hl,i_1+33
1925  0D93  E5          	push	hl
1926  0D94  CD 00 00    	call	_Assert_real
1927  0D97  C1          	pop	bc
1928  0D98  C1          	pop	bc
1929  0D99  C1          	pop	bc
1930  0D9A  C1          	pop	bc
1931  0D9B  21 00 00    	ld	hl,0	;const
1932  0D9E  39          	add	hl,sp
1933  0D9F  CD 00 00    	call	l_glong2sp
1934  0DA2  2E 07       	ld	l,#(7 % 256)
1935  0DA4  CD 00 00    	call	l_long_asr
1936  0DA7  D5          	push	de
1937  0DA8  E5          	push	hl
1938  0DA9  21 00 00    	ld	hl,0	;const
1939  0DAC  11 00 FF    	ld	de,65280
1940  0DAF  CD 00 00    	call	l_long_eq
1941  0DB2  E5          	push	hl
1942  0DB3  21 00 00    	ld	hl,i_1+0
1943  0DB6  E5          	push	hl
1944  0DB7  21 A0 00    	ld	hl,160	;const
1945  0DBA  E5          	push	hl
1946  0DBB  21 25 00    	ld	hl,i_1+37
1947  0DBE  E5          	push	hl
1948  0DBF  CD 00 00    	call	_Assert_real
1949  0DC2  C1          	pop	bc
1950  0DC3  C1          	pop	bc
1951  0DC4  C1          	pop	bc
1952  0DC5  C1          	pop	bc
1953  0DC6  21 00 00    	ld	hl,0	;const
1954  0DC9  39          	add	hl,sp
1955  0DCA  CD 00 00    	call	l_glong
1956  0DCD  6C          	ld	l,h
1957  0DCE  63          	ld	h,e
1958  0DCF  5A          	ld	e,d
1959  0DD0  7A          	ld	a,d
1960  0DD1  07          	rlca
1961  0DD2  9F          	sbc	a
1962  0DD3  57          	ld	d,a
1963  0DD4  D5          	push	de
1964  0DD5  E5          	push	hl
1965  0DD6  21 00 00    	ld	hl,0	;const
1966  0DD9  11 80 FF    	ld	de,65408
1967  0DDC  CD 00 00    	call	l_long_eq
1968  0DDF  E5          	push	hl
1969  0DE0  21 00 00    	ld	hl,i_1+0
1970  0DE3  E5          	push	hl
1971  0DE4  21 A1 00    	ld	hl,161	;const
1972  0DE7  E5          	push	hl
1973  0DE8  21 29 00    	ld	hl,i_1+41
1974  0DEB  E5          	push	hl
1975  0DEC  CD 00 00    	call	_Assert_real
1976  0DEF  C1          	pop	bc
1977  0DF0  C1          	pop	bc
1978  0DF1  C1          	pop	bc
1979  0DF2  C1          	pop	bc
1980  0DF3  21 00 00    	ld	hl,0	;const
1981  0DF6  39          	add	hl,sp
1982  0DF7  CD 00 00    	call	l_glong2sp
1983  0DFA  2E 09       	ld	l,#(9 % 256)
1984  0DFC  CD 00 00    	call	l_long_asr
1985  0DFF  D5          	push	de
1986  0E00  E5          	push	hl
1987  0E01  21 00 00    	ld	hl,0	;const
1988  0E04  11 C0 FF    	ld	de,65472
1989  0E07  CD 00 00    	call	l_long_eq
1990  0E0A  E5          	push	hl
1991  0E0B  21 00 00    	ld	hl,i_1+0
1992  0E0E  E5          	push	hl
1993  0E0F  21 A2 00    	ld	hl,162	;const
1994  0E12  E5          	push	hl
1995  0E13  21 2D 00    	ld	hl,i_1+45
1996  0E16  E5          	push	hl
1997  0E17  CD 00 00    	call	_Assert_real
1998  0E1A  C1          	pop	bc
1999  0E1B  C1          	pop	bc
2000  0E1C  C1          	pop	bc
2001  0E1D  C1          	pop	bc
2002  0E1E  21 00 00    	ld	hl,0	;const
2003  0E21  39          	add	hl,sp
2004  0E22  CD 00 00    	call	l_glong2sp
2005  0E25  2E 0A       	ld	l,#(10 % 256)
2006  0E27  CD 00 00    	call	l_long_asr
2007  0E2A  D5          	push	de
2008  0E2B  E5          	push	hl
2009  0E2C  21 00 00    	ld	hl,0	;const
2010  0E2F  11 E0 FF    	ld	de,65504
2011  0E32  CD 00 00    	call	l_long_eq
2012  0E35  E5          	push	hl
2013  0E36  21 00 00    	ld	hl,i_1+0
2014  0E39  E5          	push	hl
2015  0E3A  21 A3 00    	ld	hl,163	;const
2016  0E3D  E5          	push	hl
2017  0E3E  21 31 00    	ld	hl,i_1+49
2018  0E41  E5          	push	hl
2019  0E42  CD 00 00    	call	_Assert_real
2020  0E45  C1          	pop	bc
2021  0E46  C1          	pop	bc
2022  0E47  C1          	pop	bc
2023  0E48  C1          	pop	bc
2024  0E49  21 00 00    	ld	hl,0	;const
2025  0E4C  39          	add	hl,sp
2026  0E4D  CD 00 00    	call	l_glong2sp
2027  0E50  2E 0B       	ld	l,#(11 % 256)
2028  0E52  CD 00 00    	call	l_long_asr
2029  0E55  D5          	push	de
2030  0E56  E5          	push	hl
2031  0E57  21 00 00    	ld	hl,0	;const
2032  0E5A  11 F0 FF    	ld	de,65520
2033  0E5D  CD 00 00    	call	l_long_eq
2034  0E60  E5          	push	hl
2035  0E61  21 00 00    	ld	hl,i_1+0
2036  0E64  E5          	push	hl
2037  0E65  21 A4 00    	ld	hl,164	;const
2038  0E68  E5          	push	hl
2039  0E69  21 36 00    	ld	hl,i_1+54
2040  0E6C  E5          	push	hl
2041  0E6D  CD 00 00    	call	_Assert_real
2042  0E70  C1          	pop	bc
2043  0E71  C1          	pop	bc
2044  0E72  C1          	pop	bc
2045  0E73  C1          	pop	bc
2046  0E74  21 00 00    	ld	hl,0	;const
2047  0E77  39          	add	hl,sp
2048  0E78  CD 00 00    	call	l_glong2sp
2049  0E7B  2E 0C       	ld	l,#(12 % 256)
2050  0E7D  CD 00 00    	call	l_long_asr
2051  0E80  D5          	push	de
2052  0E81  E5          	push	hl
2053  0E82  21 00 00    	ld	hl,0	;const
2054  0E85  11 F8 FF    	ld	de,65528
2055  0E88  CD 00 00    	call	l_long_eq
2056  0E8B  E5          	push	hl
2057  0E8C  21 00 00    	ld	hl,i_1+0
2058  0E8F  E5          	push	hl
2059  0E90  21 A5 00    	ld	hl,165	;const
2060  0E93  E5          	push	hl
2061  0E94  21 3B 00    	ld	hl,i_1+59
2062  0E97  E5          	push	hl
2063  0E98  CD 00 00    	call	_Assert_real
2064  0E9B  C1          	pop	bc
2065  0E9C  C1          	pop	bc
2066  0E9D  C1          	pop	bc
2067  0E9E  C1          	pop	bc
2068  0E9F  21 00 00    	ld	hl,0	;const
2069  0EA2  39          	add	hl,sp
2070  0EA3  CD 00 00    	call	l_glong2sp
2071  0EA6  2E 0D       	ld	l,#(13 % 256)
2072  0EA8  CD 00 00    	call	l_long_asr
2073  0EAB  D5          	push	de
2074  0EAC  E5          	push	hl
2075  0EAD  21 00 00    	ld	hl,0	;const
2076  0EB0  11 FC FF    	ld	de,65532
2077  0EB3  CD 00 00    	call	l_long_eq
2078  0EB6  E5          	push	hl
2079  0EB7  21 00 00    	ld	hl,i_1+0
2080  0EBA  E5          	push	hl
2081  0EBB  21 A6 00    	ld	hl,166	;const
2082  0EBE  E5          	push	hl
2083  0EBF  21 40 00    	ld	hl,i_1+64
2084  0EC2  E5          	push	hl
2085  0EC3  CD 00 00    	call	_Assert_real
2086  0EC6  C1          	pop	bc
2087  0EC7  C1          	pop	bc
2088  0EC8  C1          	pop	bc
2089  0EC9  C1          	pop	bc
2090  0ECA  21 00 00    	ld	hl,0	;const
2091  0ECD  39          	add	hl,sp
2092  0ECE  CD 00 00    	call	l_glong2sp
2093  0ED1  2E 0E       	ld	l,#(14 % 256)
2094  0ED3  CD 00 00    	call	l_long_asr
2095  0ED6  D5          	push	de
2096  0ED7  E5          	push	hl
2097  0ED8  21 00 00    	ld	hl,0	;const
2098  0EDB  11 FE FF    	ld	de,65534
2099  0EDE  CD 00 00    	call	l_long_eq
2100  0EE1  E5          	push	hl
2101  0EE2  21 00 00    	ld	hl,i_1+0
2102  0EE5  E5          	push	hl
2103  0EE6  21 A7 00    	ld	hl,167	;const
2104  0EE9  E5          	push	hl
2105  0EEA  21 45 00    	ld	hl,i_1+69
2106  0EED  E5          	push	hl
2107  0EEE  CD 00 00    	call	_Assert_real
2108  0EF1  C1          	pop	bc
2109  0EF2  C1          	pop	bc
2110  0EF3  C1          	pop	bc
2111  0EF4  C1          	pop	bc
2112  0EF5  21 00 00    	ld	hl,0	;const
2113  0EF8  39          	add	hl,sp
2114  0EF9  CD 00 00    	call	l_glong2sp
2115  0EFC  2E 0F       	ld	l,#(15 % 256)
2116  0EFE  CD 00 00    	call	l_long_asr
2117  0F01  D5          	push	de
2118  0F02  E5          	push	hl
2119  0F03  21 00 00    	ld	hl,0	;const
2120  0F06  11 FF FF    	ld	de,65535
2121  0F09  CD 00 00    	call	l_long_eq
2122  0F0C  E5          	push	hl
2123  0F0D  21 00 00    	ld	hl,i_1+0
2124  0F10  E5          	push	hl
2125  0F11  21 A8 00    	ld	hl,168	;const
2126  0F14  E5          	push	hl
2127  0F15  21 4A 00    	ld	hl,i_1+74
2128  0F18  E5          	push	hl
2129  0F19  CD 00 00    	call	_Assert_real
2130  0F1C  C1          	pop	bc
2131  0F1D  C1          	pop	bc
2132  0F1E  C1          	pop	bc
2133  0F1F  C1          	pop	bc
2134  0F20  21 00 00    	ld	hl,0	;const
2135  0F23  39          	add	hl,sp
2136  0F24  CD 00 00    	call	l_glong
2137  0F27  EB          	ex	de,hl
2138  0F28  7C          	ld	a,h
2139  0F29  07          	rlca
2140  0F2A  9F          	sbc	a
2141  0F2B  57          	ld	d,a
2142  0F2C  5F          	ld	e,a
2143  0F2D  D5          	push	de
2144  0F2E  E5          	push	hl
2145  0F2F  21 00 80    	ld	hl,32768	;const
2146  0F32  11 FF FF    	ld	de,65535
2147  0F35  CD 00 00    	call	l_long_eq
2148  0F38  E5          	push	hl
2149  0F39  21 00 00    	ld	hl,i_1+0
2150  0F3C  E5          	push	hl
2151  0F3D  21 A9 00    	ld	hl,169	;const
2152  0F40  E5          	push	hl
2153  0F41  21 4F 00    	ld	hl,i_1+79
2154  0F44  E5          	push	hl
2155  0F45  CD 00 00    	call	_Assert_real
2156  0F48  C1          	pop	bc
2157  0F49  C1          	pop	bc
2158  0F4A  C1          	pop	bc
2159  0F4B  C1          	pop	bc
2160  0F4C  21 00 00    	ld	hl,0	;const
2161  0F4F  39          	add	hl,sp
2162  0F50  CD 00 00    	call	l_glong2sp
2163  0F53  2E 11       	ld	l,#(17 % 256)
2164  0F55  CD 00 00    	call	l_long_asr
2165  0F58  D5          	push	de
2166  0F59  E5          	push	hl
2167  0F5A  21 00 C0    	ld	hl,49152	;const
2168  0F5D  11 FF FF    	ld	de,65535
2169  0F60  CD 00 00    	call	l_long_eq
2170  0F63  E5          	push	hl
2171  0F64  21 00 00    	ld	hl,i_1+0
2172  0F67  E5          	push	hl
2173  0F68  21 AA 00    	ld	hl,170	;const
2174  0F6B  E5          	push	hl
2175  0F6C  21 54 00    	ld	hl,i_1+84
2176  0F6F  E5          	push	hl
2177  0F70  CD 00 00    	call	_Assert_real
2178  0F73  C1          	pop	bc
2179  0F74  C1          	pop	bc
2180  0F75  C1          	pop	bc
2181  0F76  C1          	pop	bc
2182  0F77  21 00 00    	ld	hl,0	;const
2183  0F7A  39          	add	hl,sp
2184  0F7B  CD 00 00    	call	l_glong2sp
2185  0F7E  2E 12       	ld	l,#(18 % 256)
2186  0F80  CD 00 00    	call	l_long_asr
2187  0F83  D5          	push	de
2188  0F84  E5          	push	hl
2189  0F85  21 00 E0    	ld	hl,57344	;const
2190  0F88  11 FF FF    	ld	de,65535
2191  0F8B  CD 00 00    	call	l_long_eq
2192  0F8E  E5          	push	hl
2193  0F8F  21 00 00    	ld	hl,i_1+0
2194  0F92  E5          	push	hl
2195  0F93  21 AB 00    	ld	hl,171	;const
2196  0F96  E5          	push	hl
2197  0F97  21 59 00    	ld	hl,i_1+89
2198  0F9A  E5          	push	hl
2199  0F9B  CD 00 00    	call	_Assert_real
2200  0F9E  C1          	pop	bc
2201  0F9F  C1          	pop	bc
2202  0FA0  C1          	pop	bc
2203  0FA1  C1          	pop	bc
2204  0FA2  21 00 00    	ld	hl,0	;const
2205  0FA5  39          	add	hl,sp
2206  0FA6  CD 00 00    	call	l_glong2sp
2207  0FA9  2E 13       	ld	l,#(19 % 256)
2208  0FAB  CD 00 00    	call	l_long_asr
2209  0FAE  D5          	push	de
2210  0FAF  E5          	push	hl
2211  0FB0  21 00 F0    	ld	hl,61440	;const
2212  0FB3  11 FF FF    	ld	de,65535
2213  0FB6  CD 00 00    	call	l_long_eq
2214  0FB9  E5          	push	hl
2215  0FBA  21 00 00    	ld	hl,i_1+0
2216  0FBD  E5          	push	hl
2217  0FBE  21 AC 00    	ld	hl,172	;const
2218  0FC1  E5          	push	hl
2219  0FC2  21 5E 00    	ld	hl,i_1+94
2220  0FC5  E5          	push	hl
2221  0FC6  CD 00 00    	call	_Assert_real
2222  0FC9  C1          	pop	bc
2223  0FCA  C1          	pop	bc
2224  0FCB  C1          	pop	bc
2225  0FCC  C1          	pop	bc
2226  0FCD  21 00 00    	ld	hl,0	;const
2227  0FD0  39          	add	hl,sp
2228  0FD1  CD 00 00    	call	l_glong2sp
2229  0FD4  2E 14       	ld	l,#(20 % 256)
2230  0FD6  CD 00 00    	call	l_long_asr
2231  0FD9  D5          	push	de
2232  0FDA  E5          	push	hl
2233  0FDB  21 00 F8    	ld	hl,63488	;const
2234  0FDE  11 FF FF    	ld	de,65535
2235  0FE1  CD 00 00    	call	l_long_eq
2236  0FE4  E5          	push	hl
2237  0FE5  21 00 00    	ld	hl,i_1+0
2238  0FE8  E5          	push	hl
2239  0FE9  21 AD 00    	ld	hl,173	;const
2240  0FEC  E5          	push	hl
2241  0FED  21 63 00    	ld	hl,i_1+99
2242  0FF0  E5          	push	hl
2243  0FF1  CD 00 00    	call	_Assert_real
2244  0FF4  C1          	pop	bc
2245  0FF5  C1          	pop	bc
2246  0FF6  C1          	pop	bc
2247  0FF7  C1          	pop	bc
2248  0FF8  21 00 00    	ld	hl,0	;const
2249  0FFB  39          	add	hl,sp
2250  0FFC  CD 00 00    	call	l_glong2sp
2251  0FFF  2E 15       	ld	l,#(21 % 256)
2252  1001  CD 00 00    	call	l_long_asr
2253  1004  D5          	push	de
2254  1005  E5          	push	hl
2255  1006  21 00 FC    	ld	hl,64512	;const
2256  1009  11 FF FF    	ld	de,65535
2257  100C  CD 00 00    	call	l_long_eq
2258  100F  E5          	push	hl
2259  1010  21 00 00    	ld	hl,i_1+0
2260  1013  E5          	push	hl
2261  1014  21 AE 00    	ld	hl,174	;const
2262  1017  E5          	push	hl
2263  1018  21 68 00    	ld	hl,i_1+104
2264  101B  E5          	push	hl
2265  101C  CD 00 00    	call	_Assert_real
2266  101F  C1          	pop	bc
2267  1020  C1          	pop	bc
2268  1021  C1          	pop	bc
2269  1022  C1          	pop	bc
2270  1023  21 00 00    	ld	hl,0	;const
2271  1026  39          	add	hl,sp
2272  1027  CD 00 00    	call	l_glong2sp
2273  102A  2E 16       	ld	l,#(22 % 256)
2274  102C  CD 00 00    	call	l_long_asr
2275  102F  D5          	push	de
2276  1030  E5          	push	hl
2277  1031  21 00 FE    	ld	hl,65024	;const
2278  1034  11 FF FF    	ld	de,65535
2279  1037  CD 00 00    	call	l_long_eq
2280  103A  E5          	push	hl
2281  103B  21 00 00    	ld	hl,i_1+0
2282  103E  E5          	push	hl
2283  103F  21 AF 00    	ld	hl,175	;const
2284  1042  E5          	push	hl
2285  1043  21 6D 00    	ld	hl,i_1+109
2286  1046  E5          	push	hl
2287  1047  CD 00 00    	call	_Assert_real
2288  104A  C1          	pop	bc
2289  104B  C1          	pop	bc
2290  104C  C1          	pop	bc
2291  104D  C1          	pop	bc
2292  104E  21 00 00    	ld	hl,0	;const
2293  1051  39          	add	hl,sp
2294  1052  CD 00 00    	call	l_glong2sp
2295  1055  2E 17       	ld	l,#(23 % 256)
2296  1057  CD 00 00    	call	l_long_asr
2297  105A  D5          	push	de
2298  105B  E5          	push	hl
2299  105C  21 00 FF    	ld	hl,65280	;const
2300  105F  11 FF FF    	ld	de,65535
2301  1062  CD 00 00    	call	l_long_eq
2302  1065  E5          	push	hl
2303  1066  21 00 00    	ld	hl,i_1+0
2304  1069  E5          	push	hl
2305  106A  21 B0 00    	ld	hl,176	;const
2306  106D  E5          	push	hl
2307  106E  21 72 00    	ld	hl,i_1+114
2308  1071  E5          	push	hl
2309  1072  CD 00 00    	call	_Assert_real
2310  1075  C1          	pop	bc
2311  1076  C1          	pop	bc
2312  1077  C1          	pop	bc
2313  1078  C1          	pop	bc
2314  1079  21 00 00    	ld	hl,0	;const
2315  107C  39          	add	hl,sp
2316  107D  CD 00 00    	call	l_glong
2317  1080  6A          	ld	l,d
2318  1081  7A          	ld	a,d
2319  1082  07          	rlca
2320  1083  9F          	sbc	a
2321  1084  57          	ld	d,a
2322  1085  5F          	ld	e,a
2323  1086  67          	ld	h,a
2324  1087  D5          	push	de
2325  1088  E5          	push	hl
2326  1089  21 80 FF    	ld	hl,65408	;const
2327  108C  11 FF FF    	ld	de,65535
2328  108F  CD 00 00    	call	l_long_eq
2329  1092  E5          	push	hl
2330  1093  21 00 00    	ld	hl,i_1+0
2331  1096  E5          	push	hl
2332  1097  21 B1 00    	ld	hl,177	;const
2333  109A  E5          	push	hl
2334  109B  21 77 00    	ld	hl,i_1+119
2335  109E  E5          	push	hl
2336  109F  CD 00 00    	call	_Assert_real
2337  10A2  C1          	pop	bc
2338  10A3  C1          	pop	bc
2339  10A4  C1          	pop	bc
2340  10A5  C1          	pop	bc
2341  10A6  21 00 00    	ld	hl,0	;const
2342  10A9  39          	add	hl,sp
2343  10AA  CD 00 00    	call	l_glong2sp
2344  10AD  2E 19       	ld	l,#(25 % 256)
2345  10AF  CD 00 00    	call	l_long_asr
2346  10B2  D5          	push	de
2347  10B3  E5          	push	hl
2348  10B4  21 C0 FF    	ld	hl,65472	;const
2349  10B7  11 FF FF    	ld	de,65535
2350  10BA  CD 00 00    	call	l_long_eq
2351  10BD  E5          	push	hl
2352  10BE  21 00 00    	ld	hl,i_1+0
2353  10C1  E5          	push	hl
2354  10C2  21 B2 00    	ld	hl,178	;const
2355  10C5  E5          	push	hl
2356  10C6  21 7C 00    	ld	hl,i_1+124
2357  10C9  E5          	push	hl
2358  10CA  CD 00 00    	call	_Assert_real
2359  10CD  C1          	pop	bc
2360  10CE  C1          	pop	bc
2361  10CF  C1          	pop	bc
2362  10D0  C1          	pop	bc
2363  10D1  21 00 00    	ld	hl,0	;const
2364  10D4  39          	add	hl,sp
2365  10D5  CD 00 00    	call	l_glong2sp
2366  10D8  2E 1A       	ld	l,#(26 % 256)
2367  10DA  CD 00 00    	call	l_long_asr
2368  10DD  D5          	push	de
2369  10DE  E5          	push	hl
2370  10DF  21 E0 FF    	ld	hl,65504	;const
2371  10E2  11 FF FF    	ld	de,65535
2372  10E5  CD 00 00    	call	l_long_eq
2373  10E8  E5          	push	hl
2374  10E9  21 00 00    	ld	hl,i_1+0
2375  10EC  E5          	push	hl
2376  10ED  21 B3 00    	ld	hl,179	;const
2377  10F0  E5          	push	hl
2378  10F1  21 81 00    	ld	hl,i_1+129
2379  10F4  E5          	push	hl
2380  10F5  CD 00 00    	call	_Assert_real
2381  10F8  C1          	pop	bc
2382  10F9  C1          	pop	bc
2383  10FA  C1          	pop	bc
2384  10FB  C1          	pop	bc
2385  10FC  21 00 00    	ld	hl,0	;const
2386  10FF  39          	add	hl,sp
2387  1100  CD 00 00    	call	l_glong2sp
2388  1103  2E 1B       	ld	l,#(27 % 256)
2389  1105  CD 00 00    	call	l_long_asr
2390  1108  D5          	push	de
2391  1109  E5          	push	hl
2392  110A  21 F0 FF    	ld	hl,65520	;const
2393  110D  11 FF FF    	ld	de,65535
2394  1110  CD 00 00    	call	l_long_eq
2395  1113  E5          	push	hl
2396  1114  21 00 00    	ld	hl,i_1+0
2397  1117  E5          	push	hl
2398  1118  21 B4 00    	ld	hl,180	;const
2399  111B  E5          	push	hl
2400  111C  21 86 00    	ld	hl,i_1+134
2401  111F  E5          	push	hl
2402  1120  CD 00 00    	call	_Assert_real
2403  1123  C1          	pop	bc
2404  1124  C1          	pop	bc
2405  1125  C1          	pop	bc
2406  1126  C1          	pop	bc
2407  1127  21 00 00    	ld	hl,0	;const
2408  112A  39          	add	hl,sp
2409  112B  CD 00 00    	call	l_glong2sp
2410  112E  2E 1C       	ld	l,#(28 % 256)
2411  1130  CD 00 00    	call	l_long_asr
2412  1133  D5          	push	de
2413  1134  E5          	push	hl
2414  1135  21 F8 FF    	ld	hl,65528	;const
2415  1138  11 FF FF    	ld	de,65535
2416  113B  CD 00 00    	call	l_long_eq
2417  113E  E5          	push	hl
2418  113F  21 00 00    	ld	hl,i_1+0
2419  1142  E5          	push	hl
2420  1143  21 B5 00    	ld	hl,181	;const
2421  1146  E5          	push	hl
2422  1147  21 8B 00    	ld	hl,i_1+139
2423  114A  E5          	push	hl
2424  114B  CD 00 00    	call	_Assert_real
2425  114E  C1          	pop	bc
2426  114F  C1          	pop	bc
2427  1150  C1          	pop	bc
2428  1151  C1          	pop	bc
2429  1152  21 00 00    	ld	hl,0	;const
2430  1155  39          	add	hl,sp
2431  1156  CD 00 00    	call	l_glong2sp
2432  1159  2E 1D       	ld	l,#(29 % 256)
2433  115B  CD 00 00    	call	l_long_asr
2434  115E  D5          	push	de
2435  115F  E5          	push	hl
2436  1160  21 FC FF    	ld	hl,65532	;const
2437  1163  11 FF FF    	ld	de,65535
2438  1166  CD 00 00    	call	l_long_eq
2439  1169  E5          	push	hl
2440  116A  21 00 00    	ld	hl,i_1+0
2441  116D  E5          	push	hl
2442  116E  21 B6 00    	ld	hl,182	;const
2443  1171  E5          	push	hl
2444  1172  21 90 00    	ld	hl,i_1+144
2445  1175  E5          	push	hl
2446  1176  CD 00 00    	call	_Assert_real
2447  1179  C1          	pop	bc
2448  117A  C1          	pop	bc
2449  117B  C1          	pop	bc
2450  117C  C1          	pop	bc
2451  117D  21 00 00    	ld	hl,0	;const
2452  1180  39          	add	hl,sp
2453  1181  CD 00 00    	call	l_glong2sp
2454  1184  2E 1E       	ld	l,#(30 % 256)
2455  1186  CD 00 00    	call	l_long_asr
2456  1189  D5          	push	de
2457  118A  E5          	push	hl
2458  118B  21 FE FF    	ld	hl,65534	;const
2459  118E  11 FF FF    	ld	de,65535
2460  1191  CD 00 00    	call	l_long_eq
2461  1194  E5          	push	hl
2462  1195  21 00 00    	ld	hl,i_1+0
2463  1198  E5          	push	hl
2464  1199  21 B7 00    	ld	hl,183	;const
2465  119C  E5          	push	hl
2466  119D  21 95 00    	ld	hl,i_1+149
2467  11A0  E5          	push	hl
2468  11A1  CD 00 00    	call	_Assert_real
2469  11A4  C1          	pop	bc
2470  11A5  C1          	pop	bc
2471  11A6  C1          	pop	bc
2472  11A7  C1          	pop	bc
2473  11A8  21 00 00    	ld	hl,0	;const
2474  11AB  39          	add	hl,sp
2475  11AC  CD 00 00    	call	l_glong2sp
2476  11AF  2E 1F       	ld	l,#(31 % 256)
2477  11B1  CD 00 00    	call	l_long_asr
2478  11B4  D5          	push	de
2479  11B5  E5          	push	hl
2480  11B6  21 FF FF    	ld	hl,65535	;const
2481  11B9  11 FF FF    	ld	de,65535
2482  11BC  CD 00 00    	call	l_long_eq
2483  11BF  E5          	push	hl
2484  11C0  21 00 00    	ld	hl,i_1+0
2485  11C3  E5          	push	hl
2486  11C4  21 B8 00    	ld	hl,184	;const
2487  11C7  E5          	push	hl
2488  11C8  21 9A 00    	ld	hl,i_1+154
2489  11CB  E5          	push	hl
2490  11CC  CD 00 00    	call	_Assert_real
2491  11CF  C1          	pop	bc
2492  11D0  C1          	pop	bc
2493  11D1  C1          	pop	bc
2494  11D2  C1          	pop	bc
2495  11D3  C1          	pop	bc
2496  11D4  C1          	pop	bc
2497  11D5  C9          	ret
2498  11D6              
2499  11D6              
2500  11D6              
2501  11D6              ; Function test_rshift32_const_unsigned flags 0x00000200 __smallc
2502  11D6              ; void test_rshift32_const_unsigned()
2503  11D6              ._test_rshift32_const_unsigned
2504  11D6  21 00 00    	ld	hl,0	;const
2505  11D9  11 00 80    	ld	de,32768
2506  11DC  D5          	push	de
2507  11DD  E5          	push	hl
2508  11DE  21 00 00    	ld	hl,0	;const
2509  11E1  39          	add	hl,sp
2510  11E2  CD 00 00    	call	l_glong2sp
2511  11E5  21 00 00    	ld	hl,0	;const
2512  11E8  11 00 80    	ld	de,32768
2513  11EB  CD 00 00    	call	l_long_eq
2514  11EE  E5          	push	hl
2515  11EF  21 00 00    	ld	hl,i_1+0
2516  11F2  E5          	push	hl
2517  11F3  21 C2 00    	ld	hl,194	;const
2518  11F6  E5          	push	hl
2519  11F7  21 09 00    	ld	hl,i_1+9
2520  11FA  E5          	push	hl
2521  11FB  CD 00 00    	call	_Assert_real
2522  11FE  C1          	pop	bc
2523  11FF  C1          	pop	bc
2524  1200  C1          	pop	bc
2525  1201  C1          	pop	bc
2526  1202  21 00 00    	ld	hl,0	;const
2527  1205  39          	add	hl,sp
2528  1206  CD 00 00    	call	l_glong
2529  1209  CB 3A       	srl	d
2530  120B  CB 1B       	rr	e
2531  120D  CB 1C       	rr	h
2532  120F  CB 1D       	rr	l
2533  1211  D5          	push	de
2534  1212  E5          	push	hl
2535  1213  21 00 00    	ld	hl,0	;const
2536  1216  11 00 40    	ld	de,16384
2537  1219  CD 00 00    	call	l_long_eq
2538  121C  E5          	push	hl
2539  121D  21 00 00    	ld	hl,i_1+0
2540  1220  E5          	push	hl
2541  1221  21 C3 00    	ld	hl,195	;const
2542  1224  E5          	push	hl
2543  1225  21 0D 00    	ld	hl,i_1+13
2544  1228  E5          	push	hl
2545  1229  CD 00 00    	call	_Assert_real
2546  122C  C1          	pop	bc
2547  122D  C1          	pop	bc
2548  122E  C1          	pop	bc
2549  122F  C1          	pop	bc
2550  1230  21 00 00    	ld	hl,0	;const
2551  1233  39          	add	hl,sp
2552  1234  CD 00 00    	call	l_glong2sp
2553  1237  2E 02       	ld	l,#(2 % 256)
2554  1239  CD 00 00    	call	l_long_asr_u
2555  123C  D5          	push	de
2556  123D  E5          	push	hl
2557  123E  21 00 00    	ld	hl,0	;const
2558  1241  11 00 20    	ld	de,8192
2559  1244  CD 00 00    	call	l_long_eq
2560  1247  E5          	push	hl
2561  1248  21 00 00    	ld	hl,i_1+0
2562  124B  E5          	push	hl
2563  124C  21 C4 00    	ld	hl,196	;const
2564  124F  E5          	push	hl
2565  1250  21 11 00    	ld	hl,i_1+17
2566  1253  E5          	push	hl
2567  1254  CD 00 00    	call	_Assert_real
2568  1257  C1          	pop	bc
2569  1258  C1          	pop	bc
2570  1259  C1          	pop	bc
2571  125A  C1          	pop	bc
2572  125B  21 00 00    	ld	hl,0	;const
2573  125E  39          	add	hl,sp
2574  125F  CD 00 00    	call	l_glong2sp
2575  1262  2E 03       	ld	l,#(3 % 256)
2576  1264  CD 00 00    	call	l_long_asr_u
2577  1267  D5          	push	de
2578  1268  E5          	push	hl
2579  1269  21 00 00    	ld	hl,0	;const
2580  126C  11 00 10    	ld	de,4096
2581  126F  CD 00 00    	call	l_long_eq
2582  1272  E5          	push	hl
2583  1273  21 00 00    	ld	hl,i_1+0
2584  1276  E5          	push	hl
2585  1277  21 C5 00    	ld	hl,197	;const
2586  127A  E5          	push	hl
2587  127B  21 15 00    	ld	hl,i_1+21
2588  127E  E5          	push	hl
2589  127F  CD 00 00    	call	_Assert_real
2590  1282  C1          	pop	bc
2591  1283  C1          	pop	bc
2592  1284  C1          	pop	bc
2593  1285  C1          	pop	bc
2594  1286  21 00 00    	ld	hl,0	;const
2595  1289  39          	add	hl,sp
2596  128A  CD 00 00    	call	l_glong2sp
2597  128D  2E 04       	ld	l,#(4 % 256)
2598  128F  CD 00 00    	call	l_long_asr_u
2599  1292  D5          	push	de
2600  1293  E5          	push	hl
2601  1294  21 00 00    	ld	hl,0	;const
2602  1297  11 00 08    	ld	de,2048
2603  129A  CD 00 00    	call	l_long_eq
2604  129D  E5          	push	hl
2605  129E  21 00 00    	ld	hl,i_1+0
2606  12A1  E5          	push	hl
2607  12A2  21 C6 00    	ld	hl,198	;const
2608  12A5  E5          	push	hl
2609  12A6  21 19 00    	ld	hl,i_1+25
2610  12A9  E5          	push	hl
2611  12AA  CD 00 00    	call	_Assert_real
2612  12AD  C1          	pop	bc
2613  12AE  C1          	pop	bc
2614  12AF  C1          	pop	bc
2615  12B0  C1          	pop	bc
2616  12B1  21 00 00    	ld	hl,0	;const
2617  12B4  39          	add	hl,sp
2618  12B5  CD 00 00    	call	l_glong2sp
2619  12B8  2E 05       	ld	l,#(5 % 256)
2620  12BA  CD 00 00    	call	l_long_asr_u
2621  12BD  D5          	push	de
2622  12BE  E5          	push	hl
2623  12BF  21 00 00    	ld	hl,0	;const
2624  12C2  11 00 04    	ld	de,1024
2625  12C5  CD 00 00    	call	l_long_eq
2626  12C8  E5          	push	hl
2627  12C9  21 00 00    	ld	hl,i_1+0
2628  12CC  E5          	push	hl
2629  12CD  21 C7 00    	ld	hl,199	;const
2630  12D0  E5          	push	hl
2631  12D1  21 1D 00    	ld	hl,i_1+29
2632  12D4  E5          	push	hl
2633  12D5  CD 00 00    	call	_Assert_real
2634  12D8  C1          	pop	bc
2635  12D9  C1          	pop	bc
2636  12DA  C1          	pop	bc
2637  12DB  C1          	pop	bc
2638  12DC  21 00 00    	ld	hl,0	;const
2639  12DF  39          	add	hl,sp
2640  12E0  CD 00 00    	call	l_glong2sp
2641  12E3  2E 06       	ld	l,#(6 % 256)
2642  12E5  CD 00 00    	call	l_long_asr_u
2643  12E8  D5          	push	de
2644  12E9  E5          	push	hl
2645  12EA  21 00 00    	ld	hl,0	;const
2646  12ED  11 00 02    	ld	de,512
2647  12F0  CD 00 00    	call	l_long_eq
2648  12F3  E5          	push	hl
2649  12F4  21 00 00    	ld	hl,i_1+0
2650  12F7  E5          	push	hl
2651  12F8  21 C8 00    	ld	hl,200	;const
2652  12FB  E5          	push	hl
2653  12FC  21 21 00    	ld	hl,i_1+33
2654  12FF  E5          	push	hl
2655  1300  CD 00 00    	call	_Assert_real
2656  1303  C1          	pop	bc
2657  1304  C1          	pop	bc
2658  1305  C1          	pop	bc
2659  1306  C1          	pop	bc
2660  1307  21 00 00    	ld	hl,0	;const
2661  130A  39          	add	hl,sp
2662  130B  CD 00 00    	call	l_glong2sp
2663  130E  2E 07       	ld	l,#(7 % 256)
2664  1310  CD 00 00    	call	l_long_asr_u
2665  1313  D5          	push	de
2666  1314  E5          	push	hl
2667  1315  21 00 00    	ld	hl,0	;const
2668  1318  11 00 01    	ld	de,256
2669  131B  CD 00 00    	call	l_long_eq
2670  131E  E5          	push	hl
2671  131F  21 00 00    	ld	hl,i_1+0
2672  1322  E5          	push	hl
2673  1323  21 C9 00    	ld	hl,201	;const
2674  1326  E5          	push	hl
2675  1327  21 25 00    	ld	hl,i_1+37
2676  132A  E5          	push	hl
2677  132B  CD 00 00    	call	_Assert_real
2678  132E  C1          	pop	bc
2679  132F  C1          	pop	bc
2680  1330  C1          	pop	bc
2681  1331  C1          	pop	bc
2682  1332  21 01 00    	ld	hl,0+1	;const
2683  1335  39          	add	hl,sp
2684  1336  5E          	ld	e,(hl)
2685  1337  23          	inc	hl
2686  1338  56          	ld	d,(hl)
2687  1339  23          	inc	hl
2688  133A  6E          	ld	l,(hl)
2689  133B  26 00       	ld	h,0
2690  133D  EB          	ex	de,hl
2691  133E  D5          	push	de
2692  133F  E5          	push	hl
2693  1340  21 00 00    	ld	hl,0	;const
2694  1343  11 80 00    	ld	de,128
2695  1346  CD 00 00    	call	l_long_eq
2696  1349  E5          	push	hl
2697  134A  21 00 00    	ld	hl,i_1+0
2698  134D  E5          	push	hl
2699  134E  21 CA 00    	ld	hl,202	;const
2700  1351  E5          	push	hl
2701  1352  21 29 00    	ld	hl,i_1+41
2702  1355  E5          	push	hl
2703  1356  CD 00 00    	call	_Assert_real
2704  1359  C1          	pop	bc
2705  135A  C1          	pop	bc
2706  135B  C1          	pop	bc
2707  135C  C1          	pop	bc
2708  135D  21 01 00    	ld	hl,0+1	;const
2709  1360  39          	add	hl,sp
2710  1361  5E          	ld	e,(hl)
2711  1362  23          	inc	hl
2712  1363  56          	ld	d,(hl)
2713  1364  23          	inc	hl
2714  1365  6E          	ld	l,(hl)
2715  1366  26 00       	ld	h,0
2716  1368  EB          	ex	de,hl
2717  1369  CB 3B       	srl	e
2718  136B  CB 1C       	rr	h
2719  136D  CB 1D       	rr	l
2720  136F  D5          	push	de
2721  1370  E5          	push	hl
2722  1371  21 00 00    	ld	hl,0	;const
2723  1374  11 40 00    	ld	de,64
2724  1377  CD 00 00    	call	l_long_eq
2725  137A  E5          	push	hl
2726  137B  21 00 00    	ld	hl,i_1+0
2727  137E  E5          	push	hl
2728  137F  21 CB 00    	ld	hl,203	;const
2729  1382  E5          	push	hl
2730  1383  21 2D 00    	ld	hl,i_1+45
2731  1386  E5          	push	hl
2732  1387  CD 00 00    	call	_Assert_real
2733  138A  C1          	pop	bc
2734  138B  C1          	pop	bc
2735  138C  C1          	pop	bc
2736  138D  C1          	pop	bc
2737  138E  21 01 00    	ld	hl,0+1	;const
2738  1391  39          	add	hl,sp
2739  1392  5E          	ld	e,(hl)
2740  1393  23          	inc	hl
2741  1394  56          	ld	d,(hl)
2742  1395  23          	inc	hl
2743  1396  6E          	ld	l,(hl)
2744  1397  26 00       	ld	h,0
2745  1399  EB          	ex	de,hl
2746  139A  CB 3B       	srl	e
2747  139C  CB 1C       	rr	h
2748  139E  CB 1D       	rr	l
2749  13A0  CB 3B       	srl	e
2750  13A2  CB 1C       	rr	h
2751  13A4  CB 1D       	rr	l
2752  13A6  D5          	push	de
2753  13A7  E5          	push	hl
2754  13A8  21 00 00    	ld	hl,0	;const
2755  13AB  11 20 00    	ld	de,32
2756  13AE  CD 00 00    	call	l_long_eq
2757  13B1  E5          	push	hl
2758  13B2  21 00 00    	ld	hl,i_1+0
2759  13B5  E5          	push	hl
2760  13B6  21 CC 00    	ld	hl,204	;const
2761  13B9  E5          	push	hl
2762  13BA  21 31 00    	ld	hl,i_1+49
2763  13BD  E5          	push	hl
2764  13BE  CD 00 00    	call	_Assert_real
2765  13C1  C1          	pop	bc
2766  13C2  C1          	pop	bc
2767  13C3  C1          	pop	bc
2768  13C4  C1          	pop	bc
2769  13C5  21 01 00    	ld	hl,0+1	;const
2770  13C8  39          	add	hl,sp
2771  13C9  5E          	ld	e,(hl)
2772  13CA  23          	inc	hl
2773  13CB  56          	ld	d,(hl)
2774  13CC  23          	inc	hl
2775  13CD  6E          	ld	l,(hl)
2776  13CE  26 00       	ld	h,0
2777  13D0  EB          	ex	de,hl
2778  13D1  0E 03       	ld	c,3
2779  13D3  CD 00 00    	call	l_long_asr_uo
2780  13D6  D5          	push	de
2781  13D7  E5          	push	hl
2782  13D8  21 00 00    	ld	hl,0	;const
2783  13DB  11 10 00    	ld	de,16
2784  13DE  CD 00 00    	call	l_long_eq
2785  13E1  E5          	push	hl
2786  13E2  21 00 00    	ld	hl,i_1+0
2787  13E5  E5          	push	hl
2788  13E6  21 CD 00    	ld	hl,205	;const
2789  13E9  E5          	push	hl
2790  13EA  21 36 00    	ld	hl,i_1+54
2791  13ED  E5          	push	hl
2792  13EE  CD 00 00    	call	_Assert_real
2793  13F1  C1          	pop	bc
2794  13F2  C1          	pop	bc
2795  13F3  C1          	pop	bc
2796  13F4  C1          	pop	bc
2797  13F5  21 01 00    	ld	hl,0+1	;const
2798  13F8  39          	add	hl,sp
2799  13F9  5E          	ld	e,(hl)
2800  13FA  23          	inc	hl
2801  13FB  56          	ld	d,(hl)
2802  13FC  23          	inc	hl
2803  13FD  6E          	ld	l,(hl)
2804  13FE  26 00       	ld	h,0
2805  1400  EB          	ex	de,hl
2806  1401  0E 04       	ld	c,4
2807  1403  CD 00 00    	call	l_long_asr_uo
2808  1406  D5          	push	de
2809  1407  E5          	push	hl
2810  1408  21 00 00    	ld	hl,0	;const
2811  140B  11 08 00    	ld	de,8
2812  140E  CD 00 00    	call	l_long_eq
2813  1411  E5          	push	hl
2814  1412  21 00 00    	ld	hl,i_1+0
2815  1415  E5          	push	hl
2816  1416  21 CE 00    	ld	hl,206	;const
2817  1419  E5          	push	hl
2818  141A  21 3B 00    	ld	hl,i_1+59
2819  141D  E5          	push	hl
2820  141E  CD 00 00    	call	_Assert_real
2821  1421  C1          	pop	bc
2822  1422  C1          	pop	bc
2823  1423  C1          	pop	bc
2824  1424  C1          	pop	bc
2825  1425  21 01 00    	ld	hl,0+1	;const
2826  1428  39          	add	hl,sp
2827  1429  5E          	ld	e,(hl)
2828  142A  23          	inc	hl
2829  142B  56          	ld	d,(hl)
2830  142C  23          	inc	hl
2831  142D  6E          	ld	l,(hl)
2832  142E  26 00       	ld	h,0
2833  1430  EB          	ex	de,hl
2834  1431  0E 05       	ld	c,5
2835  1433  CD 00 00    	call	l_long_asr_uo
2836  1436  D5          	push	de
2837  1437  E5          	push	hl
2838  1438  21 00 00    	ld	hl,0	;const
2839  143B  11 04 00    	ld	de,4
2840  143E  CD 00 00    	call	l_long_eq
2841  1441  E5          	push	hl
2842  1442  21 00 00    	ld	hl,i_1+0
2843  1445  E5          	push	hl
2844  1446  21 CF 00    	ld	hl,207	;const
2845  1449  E5          	push	hl
2846  144A  21 40 00    	ld	hl,i_1+64
2847  144D  E5          	push	hl
2848  144E  CD 00 00    	call	_Assert_real
2849  1451  C1          	pop	bc
2850  1452  C1          	pop	bc
2851  1453  C1          	pop	bc
2852  1454  C1          	pop	bc
2853  1455  21 01 00    	ld	hl,0+1	;const
2854  1458  39          	add	hl,sp
2855  1459  5E          	ld	e,(hl)
2856  145A  23          	inc	hl
2857  145B  56          	ld	d,(hl)
2858  145C  23          	inc	hl
2859  145D  6E          	ld	l,(hl)
2860  145E  26 00       	ld	h,0
2861  1460  EB          	ex	de,hl
2862  1461  0E 06       	ld	c,6
2863  1463  CD 00 00    	call	l_long_asr_uo
2864  1466  D5          	push	de
2865  1467  E5          	push	hl
2866  1468  21 00 00    	ld	hl,0	;const
2867  146B  11 02 00    	ld	de,2
2868  146E  CD 00 00    	call	l_long_eq
2869  1471  E5          	push	hl
2870  1472  21 00 00    	ld	hl,i_1+0
2871  1475  E5          	push	hl
2872  1476  21 D0 00    	ld	hl,208	;const
2873  1479  E5          	push	hl
2874  147A  21 45 00    	ld	hl,i_1+69
2875  147D  E5          	push	hl
2876  147E  CD 00 00    	call	_Assert_real
2877  1481  C1          	pop	bc
2878  1482  C1          	pop	bc
2879  1483  C1          	pop	bc
2880  1484  C1          	pop	bc
2881  1485  21 00 00    	ld	hl,0	;const
2882  1488  39          	add	hl,sp
2883  1489  CD 00 00    	call	l_glong
2884  148C  EB          	ex	de,hl
2885  148D  CB 12       	rl	d
2886  148F  ED 6A       	adc	hl,hl
2887  1491  11 00 00    	ld	de,0
2888  1494  CB 13       	rl	e
2889  1496  D5          	push	de
2890  1497  E5          	push	hl
2891  1498  21 00 00    	ld	hl,0	;const
2892  149B  11 01 00    	ld	de,1
2893  149E  CD 00 00    	call	l_long_eq
2894  14A1  E5          	push	hl
2895  14A2  21 00 00    	ld	hl,i_1+0
2896  14A5  E5          	push	hl
2897  14A6  21 D1 00    	ld	hl,209	;const
2898  14A9  E5          	push	hl
2899  14AA  21 4A 00    	ld	hl,i_1+74
2900  14AD  E5          	push	hl
2901  14AE  CD 00 00    	call	_Assert_real
2902  14B1  C1          	pop	bc
2903  14B2  C1          	pop	bc
2904  14B3  C1          	pop	bc
2905  14B4  C1          	pop	bc
2906  14B5  21 02 00    	ld	hl,0+1+1	;const
2907  14B8  39          	add	hl,sp
2908  14B9  5E          	ld	e,(hl)
2909  14BA  23          	inc	hl
2910  14BB  56          	ld	d,(hl)
2911  14BC  EB          	ex	de,hl
2912  14BD  11 00 00    	ld	de,0
2913  14C0  D5          	push	de
2914  14C1  E5          	push	hl
2915  14C2  21 00 80    	ld	hl,32768	;const
2916  14C5  11 00 00    	ld	de,0
2917  14C8  CD 00 00    	call	l_long_eq
2918  14CB  E5          	push	hl
2919  14CC  21 00 00    	ld	hl,i_1+0
2920  14CF  E5          	push	hl
2921  14D0  21 D2 00    	ld	hl,210	;const
2922  14D3  E5          	push	hl
2923  14D4  21 4F 00    	ld	hl,i_1+79
2924  14D7  E5          	push	hl
2925  14D8  CD 00 00    	call	_Assert_real
2926  14DB  C1          	pop	bc
2927  14DC  C1          	pop	bc
2928  14DD  C1          	pop	bc
2929  14DE  C1          	pop	bc
2930  14DF  21 00 00    	ld	hl,0	;const
2931  14E2  39          	add	hl,sp
2932  14E3  CD 00 00    	call	l_glong
2933  14E6  CB 3A       	srl	d
2934  14E8  CB 1B       	rr	e
2935  14EA  EB          	ex	de,hl
2936  14EB  11 00 00    	ld	de,0
2937  14EE  D5          	push	de
2938  14EF  E5          	push	hl
2939  14F0  21 00 40    	ld	hl,16384	;const
2940  14F3  11 00 00    	ld	de,0
2941  14F6  CD 00 00    	call	l_long_eq
2942  14F9  E5          	push	hl
2943  14FA  21 00 00    	ld	hl,i_1+0
2944  14FD  E5          	push	hl
2945  14FE  21 D3 00    	ld	hl,211	;const
2946  1501  E5          	push	hl
2947  1502  21 54 00    	ld	hl,i_1+84
2948  1505  E5          	push	hl
2949  1506  CD 00 00    	call	_Assert_real
2950  1509  C1          	pop	bc
2951  150A  C1          	pop	bc
2952  150B  C1          	pop	bc
2953  150C  C1          	pop	bc
2954  150D  21 00 00    	ld	hl,0	;const
2955  1510  39          	add	hl,sp
2956  1511  CD 00 00    	call	l_glong
2957  1514  21 00 00    	ld	hl,0
2958  1517  EB          	ex	de,hl
2959  1518  CB 3C       	srl	h
2960  151A  CB 1D       	rr	l
2961  151C  CB 3C       	srl	h
2962  151E  CB 1D       	rr	l
2963  1520  D5          	push	de
2964  1521  E5          	push	hl
2965  1522  21 00 20    	ld	hl,8192	;const
2966  1525  11 00 00    	ld	de,0
2967  1528  CD 00 00    	call	l_long_eq
2968  152B  E5          	push	hl
2969  152C  21 00 00    	ld	hl,i_1+0
2970  152F  E5          	push	hl
2971  1530  21 D4 00    	ld	hl,212	;const
2972  1533  E5          	push	hl
2973  1534  21 59 00    	ld	hl,i_1+89
2974  1537  E5          	push	hl
2975  1538  CD 00 00    	call	_Assert_real
2976  153B  C1          	pop	bc
2977  153C  C1          	pop	bc
2978  153D  C1          	pop	bc
2979  153E  C1          	pop	bc
2980  153F  21 00 00    	ld	hl,0	;const
2981  1542  39          	add	hl,sp
2982  1543  CD 00 00    	call	l_glong
2983  1546  21 03 00    	ld	hl,3
2984  1549  CD 00 00    	call	l_asr_u
2985  154C  1C          	inc	e
2986  154D  D5          	push	de
2987  154E  E5          	push	hl
2988  154F  21 00 10    	ld	hl,4096	;const
2989  1552  11 00 00    	ld	de,0
2990  1555  CD 00 00    	call	l_long_eq
2991  1558  E5          	push	hl
2992  1559  21 00 00    	ld	hl,i_1+0
2993  155C  E5          	push	hl
2994  155D  21 D5 00    	ld	hl,213	;const
2995  1560  E5          	push	hl
2996  1561  21 5E 00    	ld	hl,i_1+94
2997  1564  E5          	push	hl
2998  1565  CD 00 00    	call	_Assert_real
2999  1568  C1          	pop	bc
3000  1569  C1          	pop	bc
3001  156A  C1          	pop	bc
3002  156B  C1          	pop	bc
3003  156C  21 02 00    	ld	hl,0+1+1	;const
3004  156F  39          	add	hl,sp
3005  1570  5E          	ld	e,(hl)
3006  1571  23          	inc	hl
3007  1572  56          	ld	d,(hl)
3008  1573  EB          	ex	de,hl
3009  1574  11 00 00    	ld	de,0
3010  1577  CB 3C       	srl	h
3011  1579  CB 1D       	rr	l
3012  157B  CB 3C       	srl	h
3013  157D  CB 1D       	rr	l
3014  157F  CB 3C       	srl	h
3015  1581  CB 1D       	rr	l
3016  1583  CB 3C       	srl	h
3017  1585  CB 1D       	rr	l
3018  1587  D5          	push	de
3019  1588  E5          	push	hl
3020  1589  21 00 08    	ld	hl,2048	;const
3021  158C  11 00 00    	ld	de,0
3022  158F  CD 00 00    	call	l_long_eq
3023  1592  E5          	push	hl
3024  1593  21 00 00    	ld	hl,i_1+0
3025  1596  E5          	push	hl
3026  1597  21 D6 00    	ld	hl,214	;const
3027  159A  E5          	push	hl
3028  159B  21 63 00    	ld	hl,i_1+99
3029  159E  E5          	push	hl
3030  159F  CD 00 00    	call	_Assert_real
3031  15A2  C1          	pop	bc
3032  15A3  C1          	pop	bc
3033  15A4  C1          	pop	bc
3034  15A5  C1          	pop	bc
3035  15A6  21 00 00    	ld	hl,0	;const
3036  15A9  39          	add	hl,sp
3037  15AA  CD 00 00    	call	l_glong
3038  15AD  21 05 00    	ld	hl,5
3039  15B0  CD 00 00    	call	l_asr_u
3040  15B3  1C          	inc	e
3041  15B4  D5          	push	de
3042  15B5  E5          	push	hl
3043  15B6  21 00 04    	ld	hl,1024	;const
3044  15B9  11 00 00    	ld	de,0
3045  15BC  CD 00 00    	call	l_long_eq
3046  15BF  E5          	push	hl
3047  15C0  21 00 00    	ld	hl,i_1+0
3048  15C3  E5          	push	hl
3049  15C4  21 D7 00    	ld	hl,215	;const
3050  15C7  E5          	push	hl
3051  15C8  21 68 00    	ld	hl,i_1+104
3052  15CB  E5          	push	hl
3053  15CC  CD 00 00    	call	_Assert_real
3054  15CF  C1          	pop	bc
3055  15D0  C1          	pop	bc
3056  15D1  C1          	pop	bc
3057  15D2  C1          	pop	bc
3058  15D3  21 00 00    	ld	hl,0	;const
3059  15D6  39          	add	hl,sp
3060  15D7  CD 00 00    	call	l_glong
3061  15DA  21 06 00    	ld	hl,6
3062  15DD  CD 00 00    	call	l_asr_u
3063  15E0  1C          	inc	e
3064  15E1  D5          	push	de
3065  15E2  E5          	push	hl
3066  15E3  21 00 02    	ld	hl,512	;const
3067  15E6  11 00 00    	ld	de,0
3068  15E9  CD 00 00    	call	l_long_eq
3069  15EC  E5          	push	hl
3070  15ED  21 00 00    	ld	hl,i_1+0
3071  15F0  E5          	push	hl
3072  15F1  21 D8 00    	ld	hl,216	;const
3073  15F4  E5          	push	hl
3074  15F5  21 6D 00    	ld	hl,i_1+109
3075  15F8  E5          	push	hl
3076  15F9  CD 00 00    	call	_Assert_real
3077  15FC  C1          	pop	bc
3078  15FD  C1          	pop	bc
3079  15FE  C1          	pop	bc
3080  15FF  C1          	pop	bc
3081  1600  21 00 00    	ld	hl,0	;const
3082  1603  39          	add	hl,sp
3083  1604  CD 00 00    	call	l_glong
3084  1607  6A          	ld	l,d
3085  1608  CB 13       	rl	e
3086  160A  CB 15       	rl	l
3087  160C  26 00       	ld	h,0
3088  160E  CB 14       	rl	h
3089  1610  11 00 00    	ld	de,0
3090  1613  D5          	push	de
3091  1614  E5          	push	hl
3092  1615  21 00 01    	ld	hl,256	;const
3093  1618  11 00 00    	ld	de,0
3094  161B  CD 00 00    	call	l_long_eq
3095  161E  E5          	push	hl
3096  161F  21 00 00    	ld	hl,i_1+0
3097  1622  E5          	push	hl
3098  1623  21 D9 00    	ld	hl,217	;const
3099  1626  E5          	push	hl
3100  1627  21 72 00    	ld	hl,i_1+114
3101  162A  E5          	push	hl
3102  162B  CD 00 00    	call	_Assert_real
3103  162E  C1          	pop	bc
3104  162F  C1          	pop	bc
3105  1630  C1          	pop	bc
3106  1631  C1          	pop	bc
3107  1632  21 00 00    	ld	hl,0	;const
3108  1635  39          	add	hl,sp
3109  1636  CD 00 00    	call	l_glong
3110  1639  6A          	ld	l,d
3111  163A  26 00       	ld	h,0
3112  163C  11 00 00    	ld	de,0
3113  163F  D5          	push	de
3114  1640  E5          	push	hl
3115  1641  21 80 00    	ld	hl,128	;const
3116  1644  11 00 00    	ld	de,0
3117  1647  CD 00 00    	call	l_long_eq
3118  164A  E5          	push	hl
3119  164B  21 00 00    	ld	hl,i_1+0
3120  164E  E5          	push	hl
3121  164F  21 DA 00    	ld	hl,218	;const
3122  1652  E5          	push	hl
3123  1653  21 77 00    	ld	hl,i_1+119
3124  1656  E5          	push	hl
3125  1657  CD 00 00    	call	_Assert_real
3126  165A  C1          	pop	bc
3127  165B  C1          	pop	bc
3128  165C  C1          	pop	bc
3129  165D  C1          	pop	bc
3130  165E  21 00 00    	ld	hl,0	;const
3131  1661  39          	add	hl,sp
3132  1662  CD 00 00    	call	l_glong
3133  1665  6A          	ld	l,d
3134  1666  CB 3D       	srl	l
3135  1668  26 00       	ld	h,0
3136  166A  11 00 00    	ld	de,0
3137  166D  D5          	push	de
3138  166E  E5          	push	hl
3139  166F  21 40 00    	ld	hl,64	;const
3140  1672  11 00 00    	ld	de,0
3141  1675  CD 00 00    	call	l_long_eq
3142  1678  E5          	push	hl
3143  1679  21 00 00    	ld	hl,i_1+0
3144  167C  E5          	push	hl
3145  167D  21 DB 00    	ld	hl,219	;const
3146  1680  E5          	push	hl
3147  1681  21 7C 00    	ld	hl,i_1+124
3148  1684  E5          	push	hl
3149  1685  CD 00 00    	call	_Assert_real
3150  1688  C1          	pop	bc
3151  1689  C1          	pop	bc
3152  168A  C1          	pop	bc
3153  168B  C1          	pop	bc
3154  168C  21 00 00    	ld	hl,0	;const
3155  168F  39          	add	hl,sp
3156  1690  CD 00 00    	call	l_glong
3157  1693  21 0A 00    	ld	hl,10
3158  1696  CD 00 00    	call	l_asr_u
3159  1699  1C          	inc	e
3160  169A  D5          	push	de
3161  169B  E5          	push	hl
3162  169C  21 20 00    	ld	hl,32	;const
3163  169F  11 00 00    	ld	de,0
3164  16A2  CD 00 00    	call	l_long_eq
3165  16A5  E5          	push	hl
3166  16A6  21 00 00    	ld	hl,i_1+0
3167  16A9  E5          	push	hl
3168  16AA  21 DC 00    	ld	hl,220	;const
3169  16AD  E5          	push	hl
3170  16AE  21 81 00    	ld	hl,i_1+129
3171  16B1  E5          	push	hl
3172  16B2  CD 00 00    	call	_Assert_real
3173  16B5  C1          	pop	bc
3174  16B6  C1          	pop	bc
3175  16B7  C1          	pop	bc
3176  16B8  C1          	pop	bc
3177  16B9  21 00 00    	ld	hl,0	;const
3178  16BC  39          	add	hl,sp
3179  16BD  CD 00 00    	call	l_glong
3180  16C0  6A          	ld	l,d
3181  16C1  CB 3D       	srl	l
3182  16C3  CB 3D       	srl	l
3183  16C5  CB 3D       	srl	l
3184  16C7  26 00       	ld	h,0
3185  16C9  11 00 00    	ld	de,0
3186  16CC  D5          	push	de
3187  16CD  E5          	push	hl
3188  16CE  21 10 00    	ld	hl,16	;const
3189  16D1  11 00 00    	ld	de,0
3190  16D4  CD 00 00    	call	l_long_eq
3191  16D7  E5          	push	hl
3192  16D8  21 00 00    	ld	hl,i_1+0
3193  16DB  E5          	push	hl
3194  16DC  21 DD 00    	ld	hl,221	;const
3195  16DF  E5          	push	hl
3196  16E0  21 86 00    	ld	hl,i_1+134
3197  16E3  E5          	push	hl
3198  16E4  CD 00 00    	call	_Assert_real
3199  16E7  C1          	pop	bc
3200  16E8  C1          	pop	bc
3201  16E9  C1          	pop	bc
3202  16EA  C1          	pop	bc
3203  16EB  21 00 00    	ld	hl,0	;const
3204  16EE  39          	add	hl,sp
3205  16EF  CD 00 00    	call	l_glong
3206  16F2  21 0C 00    	ld	hl,12
3207  16F5  CD 00 00    	call	l_asr_u
3208  16F8  1C          	inc	e
3209  16F9  D5          	push	de
3210  16FA  E5          	push	hl
3211  16FB  21 08 00    	ld	hl,8	;const
3212  16FE  11 00 00    	ld	de,0
3213  1701  CD 00 00    	call	l_long_eq
3214  1704  E5          	push	hl
3215  1705  21 00 00    	ld	hl,i_1+0
3216  1708  E5          	push	hl
3217  1709  21 DE 00    	ld	hl,222	;const
3218  170C  E5          	push	hl
3219  170D  21 8B 00    	ld	hl,i_1+139
3220  1710  E5          	push	hl
3221  1711  CD 00 00    	call	_Assert_real
3222  1714  C1          	pop	bc
3223  1715  C1          	pop	bc
3224  1716  C1          	pop	bc
3225  1717  C1          	pop	bc
3226  1718  21 00 00    	ld	hl,0	;const
3227  171B  39          	add	hl,sp
3228  171C  CD 00 00    	call	l_glong
3229  171F  21 0D 00    	ld	hl,13
3230  1722  CD 00 00    	call	l_asr_u
3231  1725  1C          	inc	e
3232  1726  D5          	push	de
3233  1727  E5          	push	hl
3234  1728  21 04 00    	ld	hl,4	;const
3235  172B  11 00 00    	ld	de,0
3236  172E  CD 00 00    	call	l_long_eq
3237  1731  E5          	push	hl
3238  1732  21 00 00    	ld	hl,i_1+0
3239  1735  E5          	push	hl
3240  1736  21 DF 00    	ld	hl,223	;const
3241  1739  E5          	push	hl
3242  173A  21 90 00    	ld	hl,i_1+144
3243  173D  E5          	push	hl
3244  173E  CD 00 00    	call	_Assert_real
3245  1741  C1          	pop	bc
3246  1742  C1          	pop	bc
3247  1743  C1          	pop	bc
3248  1744  C1          	pop	bc
3249  1745  21 00 00    	ld	hl,0	;const
3250  1748  39          	add	hl,sp
3251  1749  CD 00 00    	call	l_glong
3252  174C  2E 00       	ld	l,0
3253  174E  CB 12       	rl	d
3254  1750  CB 15       	rl	l
3255  1752  CB 12       	rl	d
3256  1754  CB 15       	rl	l
3257  1756  26 00       	ld	h,0
3258  1758  11 00 00    	ld	de,0
3259  175B  D5          	push	de
3260  175C  E5          	push	hl
3261  175D  21 02 00    	ld	hl,2	;const
3262  1760  11 00 00    	ld	de,0
3263  1763  CD 00 00    	call	l_long_eq
3264  1766  E5          	push	hl
3265  1767  21 00 00    	ld	hl,i_1+0
3266  176A  E5          	push	hl
3267  176B  21 E0 00    	ld	hl,224	;const
3268  176E  E5          	push	hl
3269  176F  21 95 00    	ld	hl,i_1+149
3270  1772  E5          	push	hl
3271  1773  CD 00 00    	call	_Assert_real
3272  1776  C1          	pop	bc
3273  1777  C1          	pop	bc
3274  1778  C1          	pop	bc
3275  1779  C1          	pop	bc
3276  177A  21 00 00    	ld	hl,0	;const
3277  177D  39          	add	hl,sp
3278  177E  CD 00 00    	call	l_glong
3279  1781  2E 00       	ld	l,0
3280  1783  CB 12       	rl	d
3281  1785  CB 15       	rl	l
3282  1787  26 00       	ld	h,0
3283  1789  11 00 00    	ld	de,0
3284  178C  D5          	push	de
3285  178D  E5          	push	hl
3286  178E  21 01 00    	ld	hl,1	;const
3287  1791  11 00 00    	ld	de,0
3288  1794  CD 00 00    	call	l_long_eq
3289  1797  E5          	push	hl
3290  1798  21 00 00    	ld	hl,i_1+0
3291  179B  E5          	push	hl
3292  179C  21 E1 00    	ld	hl,225	;const
3293  179F  E5          	push	hl
3294  17A0  21 9A 00    	ld	hl,i_1+154
3295  17A3  E5          	push	hl
3296  17A4  CD 00 00    	call	_Assert_real
3297  17A7  C1          	pop	bc
3298  17A8  C1          	pop	bc
3299  17A9  C1          	pop	bc
3300  17AA  C1          	pop	bc
3301  17AB  C1          	pop	bc
3302  17AC  C1          	pop	bc
3303  17AD  C9          	ret
3304  17AE              
3305  17AE              
3306  17AE              
3307  17AE              ; Function suite_rshift flags 0x00000200 __smallc
3308  17AE              ; int suite_rshift()
3309  17AE              ._suite_rshift
3310  17AE  21 9F 00    	ld	hl,i_1+159
3311  17B1  E5          	push	hl
3312  17B2  CD 00 00    	call	_suite_setup
3313  17B5  C1          	pop	bc
3314  17B6  21 B1 00    	ld	hl,i_1+177
3315  17B9  E5          	push	hl
3316  17BA  21 6A 0C    	ld	hl,_test_rshift32_const
3317  17BD  E5          	push	hl
3318  17BE  CD 00 00    	call	_suite_add_test_real
3319  17C1  C1          	pop	bc
3320  17C2  C1          	pop	bc
3321  17C3  21 C5 00    	ld	hl,i_1+197
3322  17C6  E5          	push	hl
3323  17C7  21 D6 11    	ld	hl,_test_rshift32_const_unsigned
3324  17CA  E5          	push	hl
3325  17CB  CD 00 00    	call	_suite_add_test_real
3326  17CE  C1          	pop	bc
3327  17CF  C1          	pop	bc
3328  17D0  21 E2 00    	ld	hl,i_1+226
3329  17D3  E5          	push	hl
3330  17D4  21 1C 03    	ld	hl,_test_rshift32_var
3331  17D7  E5          	push	hl
3332  17D8  CD 00 00    	call	_suite_add_test_real
3333  17DB  C1          	pop	bc
3334  17DC  C1          	pop	bc
3335  17DD  21 F4 00    	ld	hl,i_1+244
3336  17E0  E5          	push	hl
3337  17E1  21 ED 09    	ld	hl,_test_rshift16_const
3338  17E4  E5          	push	hl
3339  17E5  CD 00 00    	call	_suite_add_test_real
3340  17E8  C1          	pop	bc
3341  17E9  C1          	pop	bc
3342  17EA  21 08 01    	ld	hl,i_1+264
3343  17ED  E5          	push	hl
3344  17EE  21 00 00    	ld	hl,_test_rshift16_var
3345  17F1  E5          	push	hl
3346  17F2  CD 00 00    	call	_suite_add_test_real
3347  17F5  C1          	pop	bc
3348  17F6  C1          	pop	bc
3349  17F7  CD 00 00    	call	_suite_run
3350  17FA  C9          	ret
3351  17FB              
3352  17FB              
3353  17FB              
3354  17FB              ; Function main flags 0x00000000 __stdc
3355  17FB              ; int main(int argc, char **argv)
3356  17FB              ; parameter 'int argc' at 2 size(2)
3357  17FB              ; parameter 'char **argv' at 4 size(2)
3358  17FB              ._main
3359  17FB  21 00 00    	ld	hl,0	;const
3360  17FE  E5          	push	hl
3361  17FF  39          	add	hl,sp
3362  1800  CD 00 00    	call	l_gint	;
3363  1803  E5          	push	hl
3364  1804  CD AE 17    	call	_suite_rshift
3365  1807  D1          	pop	de
3366  1808  19          	add	hl,de
3367  1809  C1          	pop	bc
3368  180A  E5          	push	hl
3369  180B  C3 00 00    	jp	exit
3370  180E              
3371  180E              
3372  180E              	SECTION	rodata_compiler
3373  0000              .i_1
3374  0000  72 73 68 69 66 74 2E 63 
                        	defm	"rshift.c"
3375  0008  00          	defb	0
3376  0009              
3377  0009  3E 3E 30    	defm	">>0"
3378  000C  00          	defb	0
3379  000D              
3380  000D  3E 3E 31    	defm	">>1"
3381  0010  00          	defb	0
3382  0011              
3383  0011  3E 3E 32    	defm	">>2"
3384  0014  00          	defb	0
3385  0015              
3386  0015  3E 3E 33    	defm	">>3"
3387  0018  00          	defb	0
3388  0019              
3389  0019  3E 3E 34    	defm	">>4"
3390  001C  00          	defb	0
3391  001D              
3392  001D  3E 3E 35    	defm	">>5"
3393  0020  00          	defb	0
3394  0021              
3395  0021  3E 3E 36    	defm	">>6"
3396  0024  00          	defb	0
3397  0025              
3398  0025  3E 3E 37    	defm	">>7"
3399  0028  00          	defb	0
3400  0029              
3401  0029  3E 3E 38    	defm	">>8"
3402  002C  00          	defb	0
3403  002D              
3404  002D  3E 3E 39    	defm	">>9"
3405  0030  00          	defb	0
3406  0031              
3407  0031  3E 3E 31 30 	defm	">>10"
3408  0035  00          	defb	0
3409  0036              
3410  0036  3E 3E 31 31 	defm	">>11"
3411  003A  00          	defb	0
3412  003B              
3413  003B  3E 3E 31 32 	defm	">>12"
3414  003F  00          	defb	0
3415  0040              
3416  0040  3E 3E 31 33 	defm	">>13"
3417  0044  00          	defb	0
3418  0045              
3419  0045  3E 3E 31 34 	defm	">>14"
3420  0049  00          	defb	0
3421  004A              
3422  004A  3E 3E 31 35 	defm	">>15"
3423  004E  00          	defb	0
3424  004F              
3425  004F  3E 3E 31 36 	defm	">>16"
3426  0053  00          	defb	0
3427  0054              
3428  0054  3E 3E 31 37 	defm	">>17"
3429  0058  00          	defb	0
3430  0059              
3431  0059  3E 3E 31 38 	defm	">>18"
3432  005D  00          	defb	0
3433  005E              
3434  005E  3E 3E 31 39 	defm	">>19"
3435  0062  00          	defb	0
3436  0063              
3437  0063  3E 3E 32 30 	defm	">>20"
3438  0067  00          	defb	0
3439  0068              
3440  0068  3E 3E 32 31 	defm	">>21"
3441  006C  00          	defb	0
3442  006D              
3443  006D  3E 3E 32 32 	defm	">>22"
3444  0071  00          	defb	0
3445  0072              
3446  0072  3E 3E 32 33 	defm	">>23"
3447  0076  00          	defb	0
3448  0077              
3449  0077  3E 3E 32 34 	defm	">>24"
3450  007B  00          	defb	0
3451  007C              
3452  007C  3E 3E 32 35 	defm	">>25"
3453  0080  00          	defb	0
3454  0081              
3455  0081  3E 3E 32 36 	defm	">>26"
3456  0085  00          	defb	0
3457  0086              
3458  0086  3E 3E 32 37 	defm	">>27"
3459  008A  00          	defb	0
3460  008B              
3461  008B  3E 3E 32 38 	defm	">>28"
3462  008F  00          	defb	0
3463  0090              
3464  0090  3E 3E 32 39 	defm	">>29"
3465  0094  00          	defb	0
3466  0095              
3467  0095  3E 3E 33 30 	defm	">>30"
3468  0099  00          	defb	0
3469  009A              
3470  009A  3E 3E 33 31 	defm	">>31"
3471  009E  00          	defb	0
3472  009F              
3473  009F  52 69 67 68 74 20 73 68 69 66 74 20 54 65 73 74 73 
                        	defm	"Right shift Tests"
3474  00B0  00          	defb	0
3475  00B1              
3476  00B1  74 65 73 74 5F 72 73 68 69 66 74 33 32 5F 63 6F 6E 73 74 
                        	defm	"test_rshift32_const"
3477  00C4  00          	defb	0
3478  00C5              
3479  00C5  74 65 73 74 5F 72 73 68 69 66 74 33 32 5F 63 6F 6E 73 74 5F 75 6E 73 69 67 6E 65 64 
                        	defm	"test_rshift32_const_unsigned"
3480  00E1  00          	defb	0
3481  00E2              
3482  00E2  74 65 73 74 5F 72 73 68 69 66 74 33 32 5F 76 61 72 
                        	defm	"test_rshift32_var"
3483  00F3  00          	defb	0
3484  00F4              
3485  00F4  74 65 73 74 5F 72 73 68 69 66 74 31 36 5F 63 6F 6E 73 74 
                        	defm	"test_rshift16_const"
3486  0107  00          	defb	0
3487  0108              
3488  0108  74 65 73 74 5F 72 73 68 69 66 74 31 36 5F 76 61 72 
                        	defm	"test_rshift16_var"
3489  0119  00          	defb	0
3490  011A              
3491  011A              
3492  011A              ; --- Start of Static Variables ---
3493  011A              
3494  011A              	SECTION	bss_compiler
3495  0000              	SECTION	code_compiler
3496  180E              
3497  180E              
3498  180E              ; --- Start of Scope Defns ---
3499  180E              
3500  180E              	GLOBAL	_Assert_real
3501  180E              	GLOBAL	_suite_run
3502  180E              	GLOBAL	_suite_setup
3503  180E              	GLOBAL	_suite_add_fixture
3504  180E              	GLOBAL	_suite_add_test_real
3505  180E              	GLOBAL	open
3506  180E              	GLOBAL	creat
3507  180E              	GLOBAL	close
3508  180E              	GLOBAL	read
3509  180E              	GLOBAL	write
3510  180E              	GLOBAL	lseek
3511  180E              	GLOBAL	readbyte
3512  180E              	GLOBAL	writebyte
3513  180E              	GLOBAL	getcwd
3514  180E              	GLOBAL	rmdir
3515  180E              	GLOBAL	getwd
3516  180E              	GLOBAL	_RND_BLOCKSIZE
3517  180E              	GLOBAL	rnd_loadblock
3518  180E              	GLOBAL	rnd_saveblock
3519  180E              	GLOBAL	rnd_erase
3520  180E              	GLOBAL	__FOPEN_MAX
3521  180E              	GLOBAL	__sgoioblk
3522  180E              	GLOBAL	__sgoioblk_end
3523  180E              	GLOBAL	fopen_zsock
3524  180E              	GLOBAL	fopen
3525  180E              	GLOBAL	freopen
3526  180E              	GLOBAL	fdopen
3527  180E              	GLOBAL	_freopen1
3528  180E              	GLOBAL	fmemopen
3529  180E              	GLOBAL	funopen
3530  180E              	GLOBAL	fclose
3531  180E              	GLOBAL	fflush
3532  180E              	GLOBAL	closeall
3533  180E              	GLOBAL	fgets
3534  180E              	GLOBAL	fputs
3535  180E              	GLOBAL	fputc
3536  180E              	GLOBAL	fputs_callee
3537  180E              	GLOBAL	fputc_callee
3538  180E              	GLOBAL	fgetc
3539  180E              	GLOBAL	ungetc
3540  180E              	GLOBAL	feof
3541  180E              	GLOBAL	puts
3542  180E              	GLOBAL	ftell
3543  180E              	GLOBAL	fgetpos
3544  180E              	GLOBAL	fseek
3545  180E              	GLOBAL	fread
3546  180E              	GLOBAL	fwrite
3547  180E              	GLOBAL	gets
3548  180E              	GLOBAL	printf
3549  180E              	GLOBAL	fprintf
3550  180E              	GLOBAL	sprintf
3551  180E              	GLOBAL	snprintf
3552  180E              	GLOBAL	vfprintf
3553  180E              	GLOBAL	vsnprintf
3554  180E              	GLOBAL	printn
3555  180E              	GLOBAL	scanf
3556  180E              	GLOBAL	fscanf
3557  180E              	GLOBAL	sscanf
3558  180E              	GLOBAL	vfscanf
3559  180E              	GLOBAL	vsscanf
3560  180E              	GLOBAL	getarg
3561  180E              	GLOBAL	fchkstd
3562  180E              	GLOBAL	fgetc_cons
3563  180E              	GLOBAL	fputc_cons
3564  180E              	GLOBAL	fgets_cons
3565  180E              	GLOBAL	fabandon
3566  180E              	GLOBAL	fdtell
3567  180E              	GLOBAL	fdgetpos
3568  180E              	GLOBAL	rename
3569  180E              	GLOBAL	remove
3570  180E              	GLOBAL	getk
3571  180E              	GLOBAL	puts_cons
3572  180E              	GLOBAL	printk
3573  180E              	GLOBAL	atoi
3574  180E              	GLOBAL	atol
3575  180E              	GLOBAL	itoa
3576  180E              	GLOBAL	itoa_callee
3577  180E              	GLOBAL	ltoa
3578  180E              	GLOBAL	ltoa_callee
3579  180E              	GLOBAL	strtol
3580  180E              	GLOBAL	strtol_callee
3581  180E              	GLOBAL	strtoul
3582  180E              	GLOBAL	strtoul_callee
3583  180E              	GLOBAL	ultoa
3584  180E              	GLOBAL	ultoa_callee
3585  180E              	GLOBAL	utoa
3586  180E              	GLOBAL	utoa_callee
3587  180E              	GLOBAL	rand
3588  180E              	GLOBAL	srand
3589  180E              	GLOBAL	mallinit
3590  180E              	GLOBAL	sbrk
3591  180E              	GLOBAL	sbrk_callee
3592  180E              	GLOBAL	calloc
3593  180E              	GLOBAL	calloc_callee
3594  180E              	GLOBAL	free
3595  180E              	GLOBAL	malloc
3596  180E              	GLOBAL	realloc
3597  180E              	GLOBAL	realloc_callee
3598  180E              	GLOBAL	mallinfo
3599  180E              	GLOBAL	mallinfo_callee
3600  180E              	GLOBAL	HeapCreate
3601  180E              	GLOBAL	HeapSbrk
3602  180E              	GLOBAL	HeapSbrk_callee
3603  180E              	GLOBAL	HeapCalloc
3604  180E              	GLOBAL	HeapCalloc_callee
3605  180E              	GLOBAL	HeapFree
3606  180E              	GLOBAL	HeapFree_callee
3607  180E              	GLOBAL	HeapAlloc
3608  180E              	GLOBAL	HeapAlloc_callee
3609  180E              	GLOBAL	HeapRealloc
3610  180E              	GLOBAL	HeapRealloc_callee
3611  180E              	GLOBAL	HeapInfo
3612  180E              	GLOBAL	HeapInfo_callee
3613  180E              	GLOBAL	exit
3614  180E              	GLOBAL	atexit
3615  180E              	GLOBAL	getopt
3616  180E              	GLOBAL	_optarg
3617  180E              	GLOBAL	_opterr
3618  180E              	GLOBAL	_optind
3619  180E              	GLOBAL	_optopt
3620  180E              	GLOBAL	_optreset
3621  180E              	GLOBAL	l_bsearch
3622  180E              	GLOBAL	l_bsearch_callee
3623  180E              	GLOBAL	l_qsort
3624  180E              	GLOBAL	l_qsort_callee
3625  180E              	GLOBAL	qsort_sccz80
3626  180E              	GLOBAL	qsort_sccz80_callee
3627  180E              	GLOBAL	qsort_sdcc
3628  180E              	GLOBAL	qsort_sdcc_callee
3629  180E              	GLOBAL	_div_
3630  180E              	GLOBAL	_div__callee
3631  180E              	GLOBAL	_divu_
3632  180E              	GLOBAL	_divu__callee
3633  180E              	GLOBAL	_ldiv_
3634  180E              	GLOBAL	_ldiv__callee
3635  180E              	GLOBAL	_ldivu_
3636  180E              	GLOBAL	_ldivu__callee
3637  180E              	GLOBAL	abs
3638  180E              	GLOBAL	labs
3639  180E              	GLOBAL	isqrt
3640  180E              	GLOBAL	inp
3641  180E              	GLOBAL	outp
3642  180E              	GLOBAL	outp_callee
3643  180E              	GLOBAL	swapendian
3644  180E              	GLOBAL	bpoke
3645  180E              	GLOBAL	bpoke_callee
3646  180E              	GLOBAL	wpoke
3647  180E              	GLOBAL	wpoke_callee
3648  180E              	GLOBAL	bpeek
3649  180E              	GLOBAL	wpeek
3650  180E              	GLOBAL	t_delay
3651  180E              	GLOBAL	sleep
3652  180E              	GLOBAL	msleep
3653  180E              	GLOBAL	extract_bits
3654  180E              	GLOBAL	extract_bits_callee
3655  180E              	GLOBAL	wcmatch
3656  180E              	GLOBAL	unbcd
3657  180E              	GLOBAL	_test_rshift16_var
3658  180E              	GLOBAL	_test_rshift32_var
3659  180E              	GLOBAL	_test_rshift16_const
3660  180E              	GLOBAL	_test_rshift32_const
3661  180E              	GLOBAL	_test_rshift32_const_unsigned
3662  180E              	GLOBAL	_suite_rshift
3663  180E              	GLOBAL	_main
3664  180E              
3665  180E              
3666  180E              ; --- End of Scope Defns ---
3667  180E              
3668  180E              
3669  180E              ; --- End of Compilation ---
3670  180E              
