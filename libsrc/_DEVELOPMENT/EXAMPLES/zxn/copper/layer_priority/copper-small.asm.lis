1     0000              MODULE copper_small_asm
2     0000              LINE -1, "copper-small.asm"
-1    0000              
0     0000              
1     0000              ;; COPPER LIST
2     0000              ;; Reduced to fit in 1k for testing.
3     0000              ;; Doing the whole screen will involve streaming instructions to the copper.
4     0000              
5     0000              ;; This is an asm file that is passed through m4 before assembling.
6     0000              
7     0000              ;; To see what m4 does to this file, ask zcc to process it
8     0000              ;;    zcc +zxn -vn -m4 copper-small.asm.m4
9     0000              
10    0000                              ; useful m4 macros
11    0000              
12    0000              INCLUDE "config_zxn_private.inc"
1     0000              
2     0000              
3     0000              
4     0000              
5     0000              IFNDEF __CONFIG_Z88DK_INC_
6     0000              defc   __CONFIG_Z88DK_INC_ = 1
7     0000              
8     0000              ; Automatically Generated at Library Build Time
9     0000              
10    0000              
11    0000              
12    0000              
13    0000              
14    0000              
15    0000              
16    0000              
17    0000              
18    0000              
19    0000              
20    0000              
21    0000              
22    0000              defc __Z88DK = 1992
23    0000              
24    0000              
25    0000              
26    0000              
27    0000              
28    0000              
29    0000              
30    0000              
31    0000              
32    0000              
33    0000              
34    0000              
35    0000              defc __ZXNEXT = 1
36    0000              
37    0000              ; define(`__ENV_FILENAME', "/sys/env")
38    0000              
39    0000              defc __ENV_GETENV_BUFSZ = 64
40    0000              
41    0000              ; define(`__ENV_TMPDIR', "/tmp/")
42    0000              
43    0000              defc __ENV_LTMPNAM = 12
44    0000              defc __ENV_TMPMAX = 0xffff
45    0000              
46    0000              defc __SPECTRUM = 2
47    0000              
48    0000              defc __SPECTRUM_48 = 1
49    0000              defc __SPECTRUM_128 = 2
50    0000              defc __SPECTRUM_128_P2 = 4
51    0000              defc __SPECTRUM_128_P2A = 8
52    0000              defc __SPECTRUM_128_P3 = 16
53    0000              defc __SPECTRUM_PENTAGON = 32
54    0000              
55    0000              defc __USE_SPECTRUM_128_SECOND_DFILE = 0
56    0000              
57    0000              defc __USE_SYSVAR = 0
58    0000              
59    0000              defc __USE_ZXN_OPCODES = 0
60    0000              
61    0000              defc __USE_ZXN_OPCODES_NEXTREG = 1
62    0000              defc __USE_ZXN_OPCODES_MLT = 2
63    0000              defc __USE_ZXN_OPCODES_LDIR = 4
64    0000              defc __USE_ZXN_OPCODES_DISPLAY = 8
65    0000              defc __USE_ZXN_OPCODES_OTHER = 16
66    0000              
67    0000              
68    0000              
69    0000              
70    0000              
71    0000              
72    0000              
73    0000              
74    0000              
75    0000              
76    0000              
77    0000              
78    0000              defc __Z80 = 0x01
79    0000              
80    0000              defc __Z80_NMOS = 0x01
81    0000              defc __Z80_CMOS = 0x02
82    0000              
83    0000              defc __CPU_CLOCK = 3500000
84    0000              
85    0000              defc __CPU_INFO = 0x00
86    0000              
87    0000              defc __CPU_INFO_ENABLE_SLL = 0x01
88    0000              
89    0000              
90    0000              
91    0000              
92    0000              
93    0000              
94    0000              
95    0000              
96    0000              
97    0000              
98    0000              
99    0000              
100   0000              defc __CLIB_OPT_MULTITHREAD = 0x00
101   0000              
102   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_HEAPS = 0x01
103   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FILES = 0x02
104   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FLIST = 0x04
105   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FDTBL = 0x08
106   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FDSTR = 0x10
107   0000              
108   0000              defc __CLIB_OPT_IMATH = 0
109   0000              
110   0000              defc __CLIB_OPT_IMATH_FAST = 0x0f
111   0000              
112   0000              defc __CLIB_OPT_IMATH_FAST_DIV_UNROLL = 0x01
113   0000              defc __CLIB_OPT_IMATH_FAST_DIV_LZEROS = 0x02
114   0000              defc __CLIB_OPT_IMATH_FAST_MUL_UNROLL = 0x04
115   0000              defc __CLIB_OPT_IMATH_FAST_MUL_LZEROS = 0x08
116   0000              defc __CLIB_OPT_IMATH_FAST_LIA = 0x80
117   0000              
118   0000              defc __CLIB_OPT_IMATH_SELECT = 0x00
119   0000              
120   0000              defc __CLIB_OPT_IMATH_SELECT_FAST_ASR = 0x01
121   0000              defc __CLIB_OPT_IMATH_SELECT_FAST_LSR = 0x02
122   0000              defc __CLIB_OPT_IMATH_SELECT_FAST_LSL = 0x04
123   0000              
124   0000              defc __CLIB_OPT_TXT2NUM = 0x04
125   0000              
126   0000              defc __CLIB_OPT_TXT2NUM_INT_BIN = 0x01
127   0000              defc __CLIB_OPT_TXT2NUM_INT_OCT = 0x02
128   0000              defc __CLIB_OPT_TXT2NUM_INT_DEC = 0x04
129   0000              defc __CLIB_OPT_TXT2NUM_INT_HEX = 0x08
130   0000              
131   0000              defc __CLIB_OPT_TXT2NUM_LONG_BIN = 0x10
132   0000              defc __CLIB_OPT_TXT2NUM_LONG_OCT = 0x20
133   0000              defc __CLIB_OPT_TXT2NUM_LONG_DEC = 0x40
134   0000              defc __CLIB_OPT_TXT2NUM_LONG_HEX = 0x80
135   0000              
136   0000              defc __CLIB_OPT_TXT2NUM_SELECT = 0x00
137   0000              
138   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_BIN = 0x01
139   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_OCT = 0x02
140   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_DEC = 0x04
141   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_HEX = 0x08
142   0000              
143   0000              defc __CLIB_OPT_NUM2TXT = 0x00
144   0000              
145   0000              defc __CLIB_OPT_NUM2TXT_INT_BIN = 0x01
146   0000              defc __CLIB_OPT_NUM2TXT_INT_OCT = 0x02
147   0000              defc __CLIB_OPT_NUM2TXT_INT_DEC = 0x04
148   0000              defc __CLIB_OPT_NUM2TXT_INT_HEX = 0x08
149   0000              
150   0000              defc __CLIB_OPT_NUM2TXT_LONG_BIN = 0x10
151   0000              defc __CLIB_OPT_NUM2TXT_LONG_OCT = 0x20
152   0000              defc __CLIB_OPT_NUM2TXT_LONG_DEC = 0x40
153   0000              defc __CLIB_OPT_NUM2TXT_LONG_HEX = 0x80
154   0000              
155   0000              defc __CLIB_OPT_NUM2TXT_SELECT = 0x00
156   0000              
157   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_BIN = 0x01
158   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_OCT = 0x02
159   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_DEC = 0x04
160   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_HEX = 0x08
161   0000              
162   0000              defc __CLIB_OPT_STDIO = 0x00
163   0000              
164   0000              defc __CLIB_OPT_STDIO_VALID = 0x01
165   0000              
166   0000              defc CHAR_CR = 13
167   0000              defc CHAR_LF = 10
168   0000              defc CHAR_BS = 12
169   0000              defc CHAR_ESC = 27
170   0000              defc CHAR_CAPS = 6
171   0000              defc CHAR_BELL = 7
172   0000              defc CHAR_CTRL_C = 3
173   0000              defc CHAR_CTRL_D = 4
174   0000              defc CHAR_CTRL_Z = 26
175   0000              defc CHAR_CURSOR_UC = 45
176   0000              defc CHAR_CURSOR_LC = 95
177   0000              defc CHAR_PASSWORD = 42
178   0000              
179   0000              defc __CLIB_OPT_PRINTF = 0x002ff6ff
180   0000              
181   0000              defc __CLIB_OPT_PRINTF_d = 0x00000001
182   0000              defc __CLIB_OPT_PRINTF_u = 0x00000002
183   0000              defc __CLIB_OPT_PRINTF_x = 0x00000004
184   0000              defc __CLIB_OPT_PRINTF_X = 0x00000008
185   0000              defc __CLIB_OPT_PRINTF_o = 0x00000010
186   0000              defc __CLIB_OPT_PRINTF_n = 0x00000020
187   0000              defc __CLIB_OPT_PRINTF_i = 0x00000040
188   0000              defc __CLIB_OPT_PRINTF_p = 0x00000080
189   0000              defc __CLIB_OPT_PRINTF_B = 0x00000100
190   0000              defc __CLIB_OPT_PRINTF_s = 0x00000200
191   0000              defc __CLIB_OPT_PRINTF_c = 0x00000400
192   0000              defc __CLIB_OPT_PRINTF_I = 0x00000800
193   0000              defc __CLIB_OPT_PRINTF_ld = 0x00001000
194   0000              defc __CLIB_OPT_PRINTF_lu = 0x00002000
195   0000              defc __CLIB_OPT_PRINTF_lx = 0x00004000
196   0000              defc __CLIB_OPT_PRINTF_lX = 0x00008000
197   0000              defc __CLIB_OPT_PRINTF_lo = 0x00010000
198   0000              defc __CLIB_OPT_PRINTF_ln = 0x00020000
199   0000              defc __CLIB_OPT_PRINTF_li = 0x00040000
200   0000              defc __CLIB_OPT_PRINTF_lp = 0x00080000
201   0000              defc __CLIB_OPT_PRINTF_lB = 0x00100000
202   0000              defc __CLIB_OPT_PRINTF_a = 0x00400000
203   0000              defc __CLIB_OPT_PRINTF_A = 0x00800000
204   0000              defc __CLIB_OPT_PRINTF_e = 0x01000000
205   0000              defc __CLIB_OPT_PRINTF_E = 0x02000000
206   0000              defc __CLIB_OPT_PRINTF_f = 0x04000000
207   0000              defc __CLIB_OPT_PRINTF_F = 0x08000000
208   0000              defc __CLIB_OPT_PRINTF_g = 0x10000000
209   0000              defc __CLIB_OPT_PRINTF_G = 0x20000000
210   0000              
211   0000              defc __CLIB_OPT_PRINTF_2 = 0x00
212   0000              
213   0000              defc __CLIB_OPT_PRINTF_2_lld = 0x01
214   0000              defc __CLIB_OPT_PRINTF_2_llu = 0x02
215   0000              defc __CLIB_OPT_PRINTF_2_llx = 0x04
216   0000              defc __CLIB_OPT_PRINTF_2_llX = 0x08
217   0000              defc __CLIB_OPT_PRINTF_2_llo = 0x10
218   0000              defc __CLIB_OPT_PRINTF_2_lli = 0x40
219   0000              
220   0000              defc __CLIB_OPT_SCANF = 0x002ff6ff
221   0000              
222   0000              defc __CLIB_OPT_SCANF_d = 0x00000001
223   0000              defc __CLIB_OPT_SCANF_u = 0x00000002
224   0000              defc __CLIB_OPT_SCANF_x = 0x00000004
225   0000              defc __CLIB_OPT_SCANF_X = 0x00000008
226   0000              defc __CLIB_OPT_SCANF_o = 0x00000010
227   0000              defc __CLIB_OPT_SCANF_n = 0x00000020
228   0000              defc __CLIB_OPT_SCANF_i = 0x00000040
229   0000              defc __CLIB_OPT_SCANF_p = 0x00000080
230   0000              defc __CLIB_OPT_SCANF_B = 0x00000100
231   0000              defc __CLIB_OPT_SCANF_s = 0x00000200
232   0000              defc __CLIB_OPT_SCANF_c = 0x00000400
233   0000              defc __CLIB_OPT_SCANF_I = 0x00000800
234   0000              defc __CLIB_OPT_SCANF_ld = 0x00001000
235   0000              defc __CLIB_OPT_SCANF_lu = 0x00002000
236   0000              defc __CLIB_OPT_SCANF_lx = 0x00004000
237   0000              defc __CLIB_OPT_SCANF_lX = 0x00008000
238   0000              defc __CLIB_OPT_SCANF_lo = 0x00010000
239   0000              defc __CLIB_OPT_SCANF_ln = 0x00020000
240   0000              defc __CLIB_OPT_SCANF_li = 0x00040000
241   0000              defc __CLIB_OPT_SCANF_lp = 0x00080000
242   0000              defc __CLIB_OPT_SCANF_lB = 0x00100000
243   0000              defc __CLIB_OPT_SCANF_BRACKET = 0x00200000
244   0000              defc __CLIB_OPT_SCANF_a = 0x00400000
245   0000              defc __CLIB_OPT_SCANF_A = 0x00800000
246   0000              defc __CLIB_OPT_SCANF_e = 0x01000000
247   0000              defc __CLIB_OPT_SCANF_E = 0x02000000
248   0000              defc __CLIB_OPT_SCANF_f = 0x04000000
249   0000              defc __CLIB_OPT_SCANF_F = 0x08000000
250   0000              defc __CLIB_OPT_SCANF_g = 0x10000000
251   0000              defc __CLIB_OPT_SCANF_G = 0x20000000
252   0000              
253   0000              defc __CLIB_OPT_SCANF_2 = 0x00
254   0000              
255   0000              defc __CLIB_OPT_SCANF_2_lld = 0x01
256   0000              defc __CLIB_OPT_SCANF_2_llu = 0x02
257   0000              defc __CLIB_OPT_SCANF_2_llx = 0x04
258   0000              defc __CLIB_OPT_SCANF_2_llX = 0x08
259   0000              defc __CLIB_OPT_SCANF_2_llo = 0x10
260   0000              defc __CLIB_OPT_SCANF_2_lli = 0x40
261   0000              
262   0000              defc __CLIB_OPT_UNROLL = 0x00
263   0000              
264   0000              defc __CLIB_OPT_UNROLL_MEMCPY = 0x01
265   0000              defc __CLIB_OPT_UNROLL_MEMSET = 0x02
266   0000              defc __CLIB_OPT_UNROLL_OTIR = 0x10
267   0000              defc __CLIB_OPT_UNROLL_LDIR = 0x20
268   0000              defc __CLIB_OPT_UNROLL_USER_SMC = 0x40
269   0000              defc __CLIB_OPT_UNROLL_LIB_SMC = 0x80
270   0000              
271   0000              defc __CLIB_OPT_STRTOD = 0x00
272   0000              
273   0000              defc __CLIB_OPT_STRTOD_NAN = 0x01
274   0000              defc __CLIB_OPT_STRTOD_INF = 0x01
275   0000              defc __CLIB_OPT_STRTOD_HEX = 0x02
276   0000              
277   0000              defc __CLIB_OPT_SORT = 1
278   0000              
279   0000              defc __CLIB_OPT_SORT_INSERTION = 0
280   0000              defc __CLIB_OPT_SORT_SHELL = 1
281   0000              defc __CLIB_OPT_SORT_QUICK = 2
282   0000              
283   0000              defc __CLIB_OPT_SORT_QSORT = 0x0c
284   0000              
285   0000              defc __CLIB_OPT_SORT_QSORT_PIVOT = 0x3
286   0000              defc __CLIB_OPT_SORT_QSORT_PIVOT_MID = 0x0
287   0000              defc __CLIB_OPT_SORT_QSORT_PIVOT_RAN = 0x1
288   0000              defc __CLIB_OPT_SORT_QSORT_ENABLE_INSERTION = 0x04
289   0000              defc __CLIB_OPT_SORT_QSORT_ENABLE_EQUAL = 0x08
290   0000              
291   0000              defc __CLIB_OPT_ERROR = 0x00
292   0000              
293   0000              defc __CLIB_OPT_ERROR_ENABLED = 0x01
294   0000              defc __CLIB_OPT_ERROR_VERBOSE = 0x02
295   0000              
296   0000              
297   0000              
298   0000              
299   0000              
300   0000              
301   0000              
302   0000              
303   0000              
304   0000              
305   0000              
306   0000              
307   0000              
308   0000              
309   0000              
310   0000              
311   0000              defc __EOK = 0
312   0000              defc __EACCES = 1
313   0000              defc __EBADF = 2
314   0000              defc __EBDFD = 3
315   0000              defc __EDOM = 4
316   0000              defc __EFBIG = 5
317   0000              defc __EINVAL = 6
318   0000              defc __EIO = 7
319   0000              defc __EMFILE = 8
320   0000              defc __ENFILE = 9
321   0000              defc __ENOLCK = 10
322   0000              defc __ENOMEM = 11
323   0000              defc __ENOTSUP = 12
324   0000              defc __EOVERFLOW = 13
325   0000              defc __ERANGE = 14
326   0000              defc __ESTAT = 15
327   0000              defc __EAGAIN = 16
328   0000              defc __EWOULDBLOCK = 16
329   0000              
330   0000              defc __ERROR_NEXT = 50
331   0000              
332   0000              defc STDIO_SEEK_SET = 0
333   0000              defc STDIO_SEEK_CUR = 1
334   0000              defc STDIO_SEEK_END = 2
335   0000              
336   0000              defc STDIO_MSG_PUTC = 1
337   0000              defc STDIO_MSG_WRIT = 2
338   0000              defc STDIO_MSG_GETC = 3
339   0000              defc STDIO_MSG_EATC = 4
340   0000              defc STDIO_MSG_READ = 5
341   0000              defc STDIO_MSG_SEEK = 6
342   0000              defc STDIO_MSG_ICTL = 7
343   0000              defc STDIO_MSG_FLSH = 8
344   0000              defc STDIO_MSG_CLOS = 9
345   0000              
346   0000              defc ITERM_MSG_GETC = 15
347   0000              defc ITERM_MSG_REJECT = 16
348   0000              defc ITERM_MSG_INTERRUPT = 17
349   0000              defc ITERM_MSG_PUTC = 18
350   0000              defc ITERM_MSG_PRINT_CURSOR = 19
351   0000              defc ITERM_MSG_ERASE_CURSOR = 20
352   0000              defc ITERM_MSG_ERASE_CURSOR_PWD = 21
353   0000              defc ITERM_MSG_BS = 22
354   0000              defc ITERM_MSG_BS_PWD = 23
355   0000              defc ITERM_MSG_READLINE_BEGIN = 24
356   0000              defc ITERM_MSG_READLINE_END = 25
357   0000              defc ITERM_MSG_BELL = 26
358   0000              
359   0000              defc __MESSAGE_ITERM_NEXT__ = 27
360   0000              
361   0000              defc OTERM_MSG_PUTC = 30
362   0000              defc OTERM_MSG_TTY = 31
363   0000              defc OTERM_MSG_FZX_PUTC = 32
364   0000              defc OTERM_MSG_PRINTC = 33
365   0000              defc OTERM_MSG_SCROLL = 34
366   0000              defc OTERM_MSG_CLS = 35
367   0000              defc OTERM_MSG_PAUSE = 36
368   0000              defc OTERM_MSG_BELL = 37
369   0000              defc OTERM_MSG_PSCROLL = 38
370   0000              defc OTERM_MSG_FZX_GET_XOR_DRAW = 39
371   0000              
372   0000              defc __MESSAGE_OTERM_NEXT__ = 40
373   0000              
374   0000              defc ICHAR_MSG_GETC = 15
375   0000              defc OCHAR_MSG_PUTC_BIN = 30
376   0000              defc OCHAR_MSG_PUTC = 33
377   0000              
378   0000              defc __MESSAGE_NEXT__ = 45
379   0000              
380   0000              defc mtx_plain = 0x01
381   0000              defc mtx_recursive = 0x02
382   0000              defc mtx_timed = 0x04
383   0000              
384   0000              defc thrd_success = 0x00
385   0000              defc thrd_error = 0x01
386   0000              defc thrd_nomem = 0x02
387   0000              defc thrd_busy = 0x04
388   0000              defc thrd_timedout = 0x08
389   0000              
390   0000              defc IOCTL_RESET = 0x0000
391   0000              
392   0000              defc IOCTL_ITERM_ECHO = 0xc081
393   0000              defc IOCTL_ITERM_PASS = 0xc041
394   0000              defc IOCTL_ITERM_LINE = 0xc021
395   0000              defc IOCTL_ITERM_COOK = 0xc011
396   0000              defc IOCTL_ITERM_CAPS = 0xc009
397   0000              defc IOCTL_ITERM_CRLF = 0xc101
398   0000              defc IOCTL_ITERM_CURS = 0xc201
399   0000              
400   0000              defc IOCTL_ITERM_TIE = 0x0201
401   0000              defc IOCTL_ITERM_GET_EDITBUF = 0x0381
402   0000              defc IOCTL_ITERM_SET_EDITBUF = 0x0301
403   0000              
404   0000              defc IOCTL_OTERM_PAGE = 0xc082
405   0000              defc IOCTL_OTERM_PAUSE = 0xc042
406   0000              defc IOCTL_OTERM_COOK = 0xc022
407   0000              defc IOCTL_OTERM_CRLF = 0xc012
408   0000              defc IOCTL_OTERM_CLEAR = 0xe002
409   0000              defc IOCTL_OTERM_SIGNAL = 0xc202
410   0000              defc IOCTL_OTERM_BELL = 0xc102
411   0000              
412   0000              defc IOCTL_OTERM_CLS = 0x0102
413   0000              defc IOCTL_OTERM_RESET_SCROLL = 0x0202
414   0000              defc IOCTL_OTERM_GET_WINDOW_COORD = 0x0382
415   0000              defc IOCTL_OTERM_SET_WINDOW_COORD = 0x0302
416   0000              defc IOCTL_OTERM_GET_WINDOW_RECT = 0x0482
417   0000              defc IOCTL_OTERM_SET_WINDOW_RECT = 0x0402
418   0000              defc IOCTL_OTERM_GET_CURSOR_COORD = 0x0582
419   0000              defc IOCTL_OTERM_SET_CURSOR_COORD = 0x0502
420   0000              defc IOCTL_OTERM_GET_OTERM = 0x0602
421   0000              defc IOCTL_OTERM_SCROLL = 0x0702
422   0000              defc IOCTL_OTERM_FONT = 0x0802
423   0000              
424   0000              defc IOCTL_OTERM_FZX_GET_PAPER_COORD = 0x0a82
425   0000              defc IOCTL_OTERM_FZX_SET_PAPER_COORD = 0x0a02
426   0000              defc IOCTL_OTERM_FZX_GET_PAPER_RECT = 0x0b82
427   0000              defc IOCTL_OTERM_FZX_SET_PAPER_RECT = 0x0b02
428   0000              defc IOCTL_OTERM_FZX_LEFT_MARGIN = 0x0c02
429   0000              defc IOCTL_OTERM_FZX_LINE_SPACING = 0x0d02
430   0000              defc IOCTL_OTERM_FZX_SPACE_EXPAND = 0x0e02
431   0000              defc IOCTL_OTERM_FZX_GET_FZX_STATE = 0x0f82
432   0000              defc IOCTL_OTERM_FZX_SET_FZX_STATE = 0x0f02
433   0000              
434   0000              defc IOCTL_ICHAR_CRLF = 0xc103
435   0000              
436   0000              defc IOCTL_OCHAR_CRLF = 0xc014
437   0000              
438   0000              
439   0000              
440   0000              
441   0000              
442   0000              
443   0000              
444   0000              
445   0000              
446   0000              
447   0000              
448   0000              
449   0000              
450   0000              
451   0000              defc IOCTL_ITERM_GET_DELAY = 0x1081
452   0000              defc IOCTL_ITERM_SET_DELAY = 0x1001
453   0000              
454   0000              defc IOCTL_ITERM_LASTK     = 0x1101
455   0000              
456   0000              defc IOCTL_OTERM_FCOLOR    = 0x1002
457   0000              defc IOCTL_OTERM_FMASK     = 0x1102
458   0000              defc IOCTL_OTERM_BCOLOR    = 0x1202
459   0000              
460   0000              
461   0000              
462   0000              
463   0000              
464   0000              
465   0000              
466   0000              
467   0000              
468   0000              
469   0000              
470   0000              
471   0000              
472   0000              
473   0000              
474   0000              defc __BIFROST2_ANIM_GROUP     = 4
475   0000              defc __BIFROST2_STATIC_MIN     = 128
476   0000              defc __BIFROST2_STATIC_OVERLAP = 128
477   0000              defc __BIFROST2_TILE_IMAGES    = 49000
478   0000              defc __BIFROST2_TILE_ORDER     = 7
479   0000              defc __BIFROST2_TILE_MAP       = 65281
480   0000              defc __BIFROST2_TOTAL_ROWS     = 22
481   0000              defc __BIFROST2_HOLE           = 64839
482   0000              defc _BIFROST2_HOLE            = 64839
483   0000              defc __BIFROST2_HOLE_SIZE      = 0
484   0000              
485   0000              ; define(`__BIFROST2_TOTAL_ROWS', 22)
486   0000              
487   0000              
488   0000              
489   0000              
490   0000              
491   0000              
492   0000              
493   0000              
494   0000              
495   0000              
496   0000              
497   0000              
498   0000              defc __BIFROSTH_ANIM_SPEED     = 4
499   0000              defc __BIFROSTH_ANIM_GROUP     = 4
500   0000              defc __BIFROSTH_STATIC_MIN     = 128
501   0000              defc __BIFROSTH_STATIC_OVERLAP = 128
502   0000              defc __BIFROSTH_TILE_IMAGES    = 48500
503   0000              defc __BIFROSTH_TILE_MAP       = 65281
504   0000              defc __BIFROSTH_TILE_ORDER     = 7
505   0000              defc __BIFROSTH_SHIFT_COLUMNS  = 0
506   0000              defc __BIFROSTH_SPRITE_MODE    = 0
507   0000              
508   0000              
509   0000              
510   0000              
511   0000              
512   0000              
513   0000              
514   0000              
515   0000              
516   0000              
517   0000              
518   0000              
519   0000              defc __BIFROSTL_ANIM_SPEED     = 4
520   0000              defc __BIFROSTL_ANIM_GROUP     = 4
521   0000              defc __BIFROSTL_STATIC_MIN     = 128
522   0000              defc __BIFROSTL_STATIC_OVERLAP = 128
523   0000              defc __BIFROSTL_TILE_IMAGES    = 48500
524   0000              defc __BIFROSTL_TILE_MAP       = 65281
525   0000              defc __BIFROSTL_TILE_ORDER     = 7
526   0000              
527   0000              
528   0000              
529   0000              
530   0000              
531   0000              
532   0000              
533   0000              
534   0000              
535   0000              
536   0000              
537   0000              
538   0000              defc __ESXDOS_BASE_HOOK = 128
539   0000              defc __ESXDOS_BASE_MISC = 136
540   0000              defc __ESXDOS_BASE_FSYS = 152
541   0000              
542   0000              defc __ESXDOS_SYSCALL = 0x08
543   0000              defc __ESXDOS_ROMCALL = 0x18
544   0000              defc __ESXDOS_AUXCALL = 0x30
545   0000              
546   0000              defc __ESXDOS_SYS_DISK_STATUS = 128
547   0000              defc __ESXDOS_SYS_DISK_READ = 129
548   0000              defc __ESXDOS_SYS_DISK_WRITE = 130
549   0000              defc __ESXDOS_SYS_DISK_IOCTL = 131
550   0000              defc __ESXDOS_SYS_DISK_INFO = 132
551   0000              
552   0000              defc __ESXDOS_SYS_M_DOSVERSION = 136
553   0000              defc __ESXDOS_SYS_M_GETSETDRV = 137
554   0000              defc __ESXDOS_SYS_M_DRIVEINFO = 138
555   0000              defc __ESXDOS_SYS_M_TAPEIN = 139
556   0000              defc __ESXDOS_SYS_M_TAPEOUT = 140
557   0000              defc __ESXDOS_SYS_M_GETHANDLE = 141
558   0000              defc __ESXDOS_SYS_M_GETDATE = 142
559   0000              
560   0000              defc __ESXDOS_SYS_F_MOUNT = 152
561   0000              defc __ESXDOS_SYS_F_UMOUNT = 153
562   0000              defc __ESXDOS_SYS_F_OPEN = 154
563   0000              defc __ESXDOS_SYS_F_CLOSE = 155
564   0000              defc __ESXDOS_SYS_F_SYNC = 156
565   0000              defc __ESXDOS_SYS_F_READ = 157
566   0000              defc __ESXDOS_SYS_F_WRITE = 158
567   0000              defc __ESXDOS_SYS_F_SEEK = 159
568   0000              defc __ESXDOS_SYS_F_FGETPOS = 160
569   0000              defc __ESXDOS_SYS_F_FSTAT = 161
570   0000              defc __ESXDOS_SYS_F_FTRUNCATE = 162
571   0000              defc __ESXDOS_SYS_F_OPENDIR = 163
572   0000              defc __ESXDOS_SYS_F_READDIR = 164
573   0000              defc __ESXDOS_SYS_F_TELLDIR = 165
574   0000              defc __ESXDOS_SYS_F_SEEKDIR = 166
575   0000              defc __ESXDOS_SYS_F_REWINDDIR = 167
576   0000              defc __ESXDOS_SYS_F_GETCWD = 168
577   0000              defc __ESXDOS_SYS_F_CHDIR = 169
578   0000              defc __ESXDOS_SYS_F_MKDIR = 170
579   0000              defc __ESXDOS_SYS_F_RMDIR = 171
580   0000              defc __ESXDOS_SYS_F_STAT = 172
581   0000              defc __ESXDOS_SYS_F_UNLINK = 173
582   0000              defc __ESXDOS_SYS_F_TRUNCATE = 174
583   0000              defc __ESXDOS_SYS_F_CHMOD = 175
584   0000              defc __ESXDOS_SYS_F_RENAME = 176
585   0000              defc __ESXDOS_SYS_F_GETFREE = 177
586   0000              
587   0000              defc __ESXDOS_PATH_MAX = 256
588   0000              defc __ESXDOS_NAME_MAX = 12
589   0000              
590   0000              defc __ESXDOS_MODE_READ = 0x01
591   0000              defc __ESXDOS_MODE_WRITE = 0x02
592   0000              defc __ESXDOS_MODE_OPEN_EXIST = 0x00
593   0000              defc __ESXDOS_MODE_OPEN_CREAT = 0x08
594   0000              defc __ESXDOS_MODE_CREAT_NOEXIST = 0x04
595   0000              defc __ESXDOS_MODE_CREAT_TRUNC = 0x0c
596   0000              defc __ESXDOS_MODE_USE_HEADER = 0x40
597   0000              
598   0000              defc __ESXDOS_ATTR_READ_ONLY = 0x01
599   0000              defc __ESXDOS_ATTR_HIDDEN = 0x02
600   0000              defc __ESXDOS_ATTR_SYSTEM = 0x04
601   0000              defc __ESXDOS_ATTR_VOLUME_LABEL = 0x08
602   0000              defc __ESXDOS_ATTR_DIRECTORY = 0x10
603   0000              defc __ESXDOS_ATTR_ARCHIVE = 0x20
604   0000              
605   0000              defc __ESXDOS_DRIVE_CURRENT = 0x2a
606   0000              defc __ESXDOS_DRIVE_SYSTEM = 0x24
607   0000              
608   0000              defc __ESXDOS_SEEK_SET = 0
609   0000              defc __ESXDOS_SEEK_FWD = 1
610   0000              defc __ESXDOS_SEEK_BWD = 2
611   0000              
612   0000              defc __ESXDOS_OK = 0
613   0000              defc __ESXDOS_EOK = 1
614   0000              defc __ESXDOS_ENONSENSE = 2
615   0000              defc __ESXDOS_ESTEND = 3
616   0000              defc __ESXDOS_EWRTYPE = 4
617   0000              defc __ESXDOS_ENOENT = 5
618   0000              defc __ESXDOS_EIO = 6
619   0000              defc __ESXDOS_EINVAL = 7
620   0000              defc __ESXDOS_EACCES = 8
621   0000              defc __ESXDOS_ENOSPC = 9
622   0000              defc __ESXDOS_ENXIO = 10
623   0000              defc __ESXDOS_ENODRV = 11
624   0000              defc __ESXDOS_ENFILE = 12
625   0000              defc __ESXDOS_EBADF = 13
626   0000              defc __ESXDOS_ENODEV = 14
627   0000              defc __ESXDOS_EOVERFLOW = 15
628   0000              defc __ESXDOS_EISDIR = 16
629   0000              defc __ESXDOS_ENOTDIR = 17
630   0000              defc __ESXDOS_EEXIST = 18
631   0000              defc __ESXDOS_EPATH = 19
632   0000              defc __ESXDOS_ENOSYS = 20
633   0000              defc __ESXDOS_ENAMETOOLONG = 21
634   0000              defc __ESXDOS_ENOCMD = 22
635   0000              defc __ESXDOS_EINUSE = 23
636   0000              defc __ESXDOS_ERDONLY = 24
637   0000              defc __ESXDOS_EVERIFY = 25
638   0000              defc __ESXDOS_ELOADINGKO = 26
639   0000              defc __ESXDOS_EDIRINUSE = 27
640   0000              defc __ESXDOS_EMAPRAMACTIVE = 28
641   0000              defc __ESXDOS_EDRIVEBUSY = 29
642   0000              defc __ESXDOS_EFSUNKNOWN = 30
643   0000              defc __ESXDOS_EDEVICEBUSY = 31
644   0000              defc __ESXDOS_EMAXCODE = 31
645   0000              
646   0000              
647   0000              
648   0000              
649   0000              
650   0000              
651   0000              
652   0000              
653   0000              
654   0000              
655   0000              
656   0000              
657   0000              defc __NIRVANAM_OPTIONS = 0
658   0000              
659   0000              defc __NIRVANAM_OPTIONS_WIDE_DRAW    = 0x01
660   0000              defc __NIRVANAM_OPTIONS_WIDE_SPRITES = 0x02
661   0000              
662   0000              defc __NIRVANAM_TOTAL_ROWS  = 22
663   0000              defc __NIRVANAM_HOLE        = 64994
664   0000              defc _NIRVANAM_HOLE         = 64994
665   0000              defc __NIRVANAM_HOLE_SIZE   = 0
666   0000              
667   0000              defc __NIRVANAM_TILE_IMAGES = 48000
668   0000              defc __NIRVANAM_WIDE_IMAGES = 54000
669   0000              defc __NIRVANAM_CHAR_TABLE  = 15360
670   0000              
671   0000              ; define(`__NIRVANAM_TOTAL_ROWS', 22)
672   0000              
673   0000              
674   0000              
675   0000              
676   0000              
677   0000              
678   0000              
679   0000              
680   0000              
681   0000              
682   0000              
683   0000              
684   0000              defc __NIRVANAP_OPTIONS = 0
685   0000              
686   0000              defc __NIRVANAP_OPTIONS_WIDE_DRAW    = 0x01
687   0000              defc __NIRVANAP_OPTIONS_WIDE_SPRITES = 0x02
688   0000              
689   0000              defc __NIRVANAP_TOTAL_ROWS  = 23
690   0000              defc __NIRVANAP_HOLE        = 64262
691   0000              defc _NIRVANAP_HOLE         = 64262
692   0000              defc __NIRVANAP_HOLE_SIZE   = 0
693   0000              
694   0000              defc __NIRVANAP_TILE_IMAGES = 48000
695   0000              defc __NIRVANAP_WIDE_IMAGES = 54000
696   0000              defc __NIRVANAP_CHAR_TABLE  = 15360
697   0000              
698   0000              ; define(`__NIRVANAP_TOTAL_ROWS', 23)
699   0000              
700   0000              
701   0000              
702   0000              
703   0000              
704   0000              
705   0000              
706   0000              
707   0000              
708   0000              
709   0000              
710   0000              
711   0000              defc __SOUND_BIT_METHOD     =  1
712   0000              defc __SOUND_BIT_PORT       =  0xfe
713   0000              defc __SOUND_BIT_TOGGLE     =  0x10
714   0000              defc __SOUND_BIT_TOGGLE_POS =  4
715   0000              defc __SOUND_BIT_READ_MASK  =  0x17
716   0000              defc __SOUND_BIT_WRITE_MASK =  0xe8
717   0000              
718   0000              
719   0000              
720   0000              
721   0000              
722   0000              
723   0000              
724   0000              
725   0000              
726   0000              
727   0000              
728   0000              
729   0000              defc SP1V_DISPORIGX   = 0
730   0000              defc SP1V_DISPORIGY   = 0
731   0000              defc SP1V_DISPWIDTH   = 32
732   0000              defc SP1V_DISPHEIGHT  = 24
733   0000              
734   0000              defc SP1V_PIXELBUFFER = 0xd1f7
735   0000              defc SP1V_ATTRBUFFER  = 0xd1ff
736   0000              
737   0000              defc SP1V_TILEARRAY   = 0xf000
738   0000              defc SP1V_UPDATEARRAY = 0xd200
739   0000              defc SP1V_ROTTBL      = 0xf000
740   0000              
741   0000              defc SP1V_UPDATELISTH = 0xd1ed
742   0000              defc SP1V_UPDATELISTT = 0xd1ef
743   0000              
744   0000              
745   0000              
746   0000              
747   0000              
748   0000              
749   0000              
750   0000              
751   0000              
752   0000              
753   0000              
754   0000              defc __LAYER2_COLOR_MONO_BLACK = 0x00
755   0000              defc __LAYER2_COLOR_MONO_GREY_0 = 0x00
756   0000              defc __LAYER2_COLOR_MONO_GREY_1 = 0x49
757   0000              defc __LAYER2_COLOR_MONO_GREY_2 = 0x92
758   0000              defc __LAYER2_COLOR_MONO_GREY_3 = 0xff
759   0000              defc __LAYER2_COLOR_MONO_WHITE = 0xff
760   0000              
761   0000              defc __LAYER2_COLOR_AMBER_0 = 0x00
762   0000              defc __LAYER2_COLOR_AMBER_1 = 0x20
763   0000              defc __LAYER2_COLOR_AMBER_2 = 0x44
764   0000              defc __LAYER2_COLOR_AMBER_3 = 0x64
765   0000              defc __LAYER2_COLOR_AMBER_4 = 0x88
766   0000              defc __LAYER2_COLOR_AMBER_5 = 0xa8
767   0000              defc __LAYER2_COLOR_AMBER_6 = 0xcc
768   0000              defc __LAYER2_COLOR_AMBER_7 = 0xec
769   0000              
770   0000              defc __LAYER2_COLOR_GREEN_0 = 0x00
771   0000              defc __LAYER2_COLOR_GREEN_1 = 0x04
772   0000              defc __LAYER2_COLOR_GREEN_2 = 0x08
773   0000              defc __LAYER2_COLOR_GREEN_3 = 0x0c
774   0000              defc __LAYER2_COLOR_GREEN_4 = 0x10
775   0000              defc __LAYER2_COLOR_GREEN_5 = 0x14
776   0000              defc __LAYER2_COLOR_GREEN_6 = 0x18
777   0000              defc __LAYER2_COLOR_GREEN_7 = 0x1c
778   0000              
779   0000              defc __LAYER2_COLOR_RB_RED = 0xe0
780   0000              defc __LAYER2_COLOR_RB_ORANGE = 0xec
781   0000              defc __LAYER2_COLOR_RB_YELLOW = 0xfc
782   0000              defc __LAYER2_COLOR_RB_GREEN = 0x1c
783   0000              defc __LAYER2_COLOR_RB_BLUE = 0x03
784   0000              defc __LAYER2_COLOR_RB_VIOLET = 0x42
785   0000              defc __LAYER2_COLOR_RB_INDIGO = 0x83
786   0000              
787   0000              defc __LAYER2_COLOR_ZX_BLACK = 0x00
788   0000              defc __LAYER2_COLOR_ZX_BLUE = 0x02
789   0000              defc __LAYER2_COLOR_ZX_RED = 0xc0
790   0000              defc __LAYER2_COLOR_ZX_MAGENTA = 0xc3
791   0000              defc __LAYER2_COLOR_ZX_GREEN = 0x18
792   0000              defc __LAYER2_COLOR_ZX_CYAN = 0x1b
793   0000              defc __LAYER2_COLOR_ZX_YELLOW = 0xd8
794   0000              defc __LAYER2_COLOR_ZX_WHITE = 0xdb
795   0000              defc __LAYER2_COLOR_ZX_BRIGHT_BLACK = 0x00
796   0000              defc __LAYER2_COLOR_ZX_BRIGHT_BLUE = 0x03
797   0000              defc __LAYER2_COLOR_ZX_BRIGHT_RED = 0xe0
798   0000              defc __LAYER2_COLOR_ZX_BRIGHT_MAGENTA = 0xe3
799   0000              defc __LAYER2_COLOR_ZX_BRIGHT_GREEN = 0x1c
800   0000              defc __LAYER2_COLOR_ZX_BRIGHT_CYAN = 0x1f
801   0000              defc __LAYER2_COLOR_ZX_BRIGHT_YELLOW = 0xfc
802   0000              defc __LAYER2_COLOR_ZX_BRIGHT_WHITE = 0xff
803   0000              
804   0000              defc __LAYER2_COLOR_ZXNR_NAVY = 0x01
805   0000              defc __LAYER2_COLOR_ZXNR_MAROON = 0x40
806   0000              defc __LAYER2_COLOR_ZXNR_INDIGO = 0x41
807   0000              defc __LAYER2_COLOR_ZXNR_RACING_GREEN = 0x08
808   0000              defc __LAYER2_COLOR_ZXNR_SHERPA_BLUE = 0x09
809   0000              defc __LAYER2_COLOR_ZXNR_OLIVE = 0x48
810   0000              defc __LAYER2_COLOR_ZXNR_BLACK = 0x00
811   0000              defc __LAYER2_COLOR_ZXNR_MIDNIGHT_BLUE = 0x02
812   0000              defc __LAYER2_COLOR_ZXNR_DARK_RED = 0x80
813   0000              defc __LAYER2_COLOR_ZXNR_DARK_VIOLET = 0x82
814   0000              defc __LAYER2_COLOR_ZXNR_ISLAMIC_GREEN = 0x10
815   0000              defc __LAYER2_COLOR_ZXNR_BONDI_BLUE = 0x12
816   0000              defc __LAYER2_COLOR_ZXNR_BRIGHT_OLIVE = 0x90
817   0000              defc __LAYER2_COLOR_ZXNR_GUNPOWDER_GRAY = 0x49
818   0000              defc __LAYER2_COLOR_ZXNR_BLUE = 0x03
819   0000              defc __LAYER2_COLOR_ZXNR_RED = 0xe0
820   0000              defc __LAYER2_COLOR_ZXNR_MAGENTA = 0xe7
821   0000              defc __LAYER2_COLOR_ZXNR_GREEN = 0x1c
822   0000              defc __LAYER2_COLOR_ZXNR_AQUA = 0x1f
823   0000              defc __LAYER2_COLOR_ZXNR_YELLOW = 0xfc
824   0000              defc __LAYER2_COLOR_ZXNR_MIST_GRAY = 0xb6
825   0000              defc __LAYER2_COLOR_ZXNR_SLATE_BLUE = 0x6f
826   0000              defc __LAYER2_COLOR_ZXNR_BITTERSWEET = 0xed
827   0000              defc __LAYER2_COLOR_ZXNR_ULTRA_PINK = 0xef
828   0000              defc __LAYER2_COLOR_ZXNR_SCREAMING_GREEN = 0x7d
829   0000              defc __LAYER2_COLOR_ZXNR_ELECTRIC_BLUE = 0x9f
830   0000              defc __LAYER2_COLOR_ZXNR_LASER_LEMON = 0xfd
831   0000              defc __LAYER2_COLOR_ZXNR_WHITE = 0xff
832   0000              defc __LAYER2_COLOR_ZXNR_LAVENDER_BLUE = 0xb7
833   0000              defc __LAYER2_COLOR_ZXNR_MELON = 0xf6
834   0000              defc __LAYER2_COLOR_ZXNR_LAVENDER_ROSE = 0xf7
835   0000              defc __LAYER2_COLOR_ZXNR_MINT_GREEN = 0xbe
836   0000              defc __LAYER2_COLOR_ZXNR_COLUMBIA_BLUE = 0xbf
837   0000              defc __LAYER2_COLOR_ZXNR_CANARY = 0xfe
838   0000              
839   0000              defc __LAYER2_COLOR_C64_BLACK = 0x00
840   0000              defc __LAYER2_COLOR_C64_WHITE = 0xff
841   0000              defc __LAYER2_COLOR_C64_RED = 0x84
842   0000              defc __LAYER2_COLOR_C64_CYAN = 0x77
843   0000              defc __LAYER2_COLOR_C64_VIOLET = 0x8a
844   0000              defc __LAYER2_COLOR_C64_GREEN = 0x75
845   0000              defc __LAYER2_COLOR_C64_BLUE = 0x26
846   0000              defc __LAYER2_COLOR_C64_YELLOW = 0xd9
847   0000              defc __LAYER2_COLOR_C64_ORANGE = 0x88
848   0000              defc __LAYER2_COLOR_C64_BROWN = 0x48
849   0000              defc __LAYER2_COLOR_C64_LIGHTRED = 0xad
850   0000              defc __LAYER2_COLOR_C64_GREY1 = 0x49
851   0000              defc __LAYER2_COLOR_C64_GREY2 = 0x92
852   0000              defc __LAYER2_COLOR_C64_LIGHTGREEN = 0xbe
853   0000              defc __LAYER2_COLOR_C64_LIGHTBLUE = 0x6f
854   0000              defc __LAYER2_COLOR_C64_GREY3 = 0xb6
855   0000              
856   0000              defc __LAYER2_COLOR_G1_BLACK = 0x00
857   0000              defc __LAYER2_COLOR_G1_GREY = 0x6d
858   0000              defc __LAYER2_COLOR_G1_SILVER = 0xb6
859   0000              defc __LAYER2_COLOR_G1_DARK_TEAL = 0x0e
860   0000              defc __LAYER2_COLOR_G1_GREEN = 0x14
861   0000              defc __LAYER2_COLOR_G1_GREENYELLOW = 0x9c
862   0000              defc __LAYER2_COLOR_G1_MAROON = 0x60
863   0000              defc __LAYER2_COLOR_G1_SIENNA = 0xa8
864   0000              defc __LAYER2_COLOR_G1_SANDYBROWN = 0xf0
865   0000              defc __LAYER2_COLOR_G1_KHAKI = 0xfd
866   0000              defc __LAYER2_COLOR_G1_WHITE = 0xff
867   0000              defc __LAYER2_COLOR_G1_SKYBLUE = 0x9b
868   0000              defc __LAYER2_COLOR_G1_SLATEBLUE = 0x4f
869   0000              defc __LAYER2_COLOR_G1_BLUE = 0x02
870   0000              
871   0000              defc __LAYER2_COLOR_STD_DARK_BLUE = 0x02
872   0000              defc __LAYER2_COLOR_STD_BRIGHT_BLUE = 0xdb
873   0000              defc __LAYER2_COLOR_STD_BLUE = 0x03
874   0000              defc __LAYER2_COLOR_STD_CYAN = 0x1f
875   0000              defc __LAYER2_COLOR_STD_BRIGHT_YELLOW = 0xf9
876   0000              defc __LAYER2_COLOR_STD_YELLOW = 0xfc
877   0000              defc __LAYER2_COLOR_STD_ORANGE = 0xf1
878   0000              defc __LAYER2_COLOR_STD_BRIGHT_RED = 0xe9
879   0000              defc __LAYER2_COLOR_STD_RED = 0xe0
880   0000              defc __LAYER2_COLOR_STD_DARK_RED = 0x80
881   0000              defc __LAYER2_COLOR_STD_MAGENTA = 0xe3
882   0000              defc __LAYER2_COLOR_STD_BRIGHT_GREEN = 0x9e
883   0000              defc __LAYER2_COLOR_STD_GREEN = 0x1c
884   0000              defc __LAYER2_COLOR_STD_DARK_GREEN = 0x10
885   0000              defc __LAYER2_COLOR_STD_BRIGHT_GREY = 0x49
886   0000              defc __LAYER2_COLOR_STD_LIGHT_GREY = 0x6d
887   0000              defc __LAYER2_COLOR_STD_GREY = 0x24
888   0000              defc __LAYER2_COLOR_STD_WHITE = 0xff
889   0000              defc __LAYER2_COLOR_STD_BLACK = 0x00
890   0000              
891   0000              defc __LAYER2_COLOR_HTML_Black = 0x00
892   0000              defc __LAYER2_COLOR_HTML_Navy = 0x02
893   0000              defc __LAYER2_COLOR_HTML_DarkBlue = 0x02
894   0000              defc __LAYER2_COLOR_HTML_MediumBlue = 0x03
895   0000              defc __LAYER2_COLOR_HTML_Blue = 0x03
896   0000              defc __LAYER2_COLOR_HTML_DarkGreen = 0x0c
897   0000              defc __LAYER2_COLOR_HTML_Green = 0x10
898   0000              defc __LAYER2_COLOR_HTML_Teal = 0x12
899   0000              defc __LAYER2_COLOR_HTML_DarkCyan = 0x12
900   0000              defc __LAYER2_COLOR_HTML_DeepSkyBlue = 0x17
901   0000              defc __LAYER2_COLOR_HTML_DarkTurquoise = 0x1b
902   0000              defc __LAYER2_COLOR_HTML_MediumSpringGreen = 0x1e
903   0000              defc __LAYER2_COLOR_HTML_Lime = 0x1c
904   0000              defc __LAYER2_COLOR_HTML_SpringGreen = 0x1d
905   0000              defc __LAYER2_COLOR_HTML_Aqua = 0x1f
906   0000              defc __LAYER2_COLOR_HTML_Cyan = 0x1f
907   0000              defc __LAYER2_COLOR_HTML_MidnightBlue = 0x01
908   0000              defc __LAYER2_COLOR_HTML_DodgerBlue = 0x13
909   0000              defc __LAYER2_COLOR_HTML_LightSeaGreen = 0x36
910   0000              defc __LAYER2_COLOR_HTML_ForestGreen = 0x30
911   0000              defc __LAYER2_COLOR_HTML_SeaGreen = 0x31
912   0000              defc __LAYER2_COLOR_HTML_DarkSlateGray = 0x29
913   0000              defc __LAYER2_COLOR_HTML_DarkSlateGrey = 0x29
914   0000              defc __LAYER2_COLOR_HTML_LimeGreen = 0x38
915   0000              defc __LAYER2_COLOR_HTML_MediumSeaGreen = 0x35
916   0000              defc __LAYER2_COLOR_HTML_Turquoise = 0x5f
917   0000              defc __LAYER2_COLOR_HTML_RoyalBlue = 0x4f
918   0000              defc __LAYER2_COLOR_HTML_SteelBlue = 0x52
919   0000              defc __LAYER2_COLOR_HTML_DarkSlateBlue = 0x46
920   0000              defc __LAYER2_COLOR_HTML_MediumTurquoise = 0x5b
921   0000              defc __LAYER2_COLOR_HTML_Indigo = 0x42
922   0000              defc __LAYER2_COLOR_HTML_DarkOliveGreen = 0x4c
923   0000              defc __LAYER2_COLOR_HTML_CadetBlue = 0x52
924   0000              defc __LAYER2_COLOR_HTML_CornflowerBlue = 0x73
925   0000              defc __LAYER2_COLOR_HTML_RebeccaPurple = 0x66
926   0000              defc __LAYER2_COLOR_HTML_MediumAquaMarine = 0x7a
927   0000              defc __LAYER2_COLOR_HTML_DimGray = 0x6d
928   0000              defc __LAYER2_COLOR_HTML_DimGrey = 0x6d
929   0000              defc __LAYER2_COLOR_HTML_SlateBlue = 0x6b
930   0000              defc __LAYER2_COLOR_HTML_OliveDrab = 0x70
931   0000              defc __LAYER2_COLOR_HTML_SlateGray = 0x72
932   0000              defc __LAYER2_COLOR_HTML_SlateGrey = 0x72
933   0000              defc __LAYER2_COLOR_HTML_LightSlateGray = 0x72
934   0000              defc __LAYER2_COLOR_HTML_LightSlateGrey = 0x72
935   0000              defc __LAYER2_COLOR_HTML_MediumSlateBlue = 0x6f
936   0000              defc __LAYER2_COLOR_HTML_LawnGreen = 0x7c
937   0000              defc __LAYER2_COLOR_HTML_Chartreuse = 0x7c
938   0000              defc __LAYER2_COLOR_HTML_Aquamarine = 0x7f
939   0000              defc __LAYER2_COLOR_HTML_Maroon = 0x80
940   0000              defc __LAYER2_COLOR_HTML_Purple = 0x82
941   0000              defc __LAYER2_COLOR_HTML_Olive = 0x90
942   0000              defc __LAYER2_COLOR_HTML_Gray = 0x92
943   0000              defc __LAYER2_COLOR_HTML_Grey = 0x92
944   0000              defc __LAYER2_COLOR_HTML_SkyBlue = 0x9b
945   0000              defc __LAYER2_COLOR_HTML_LightSkyBlue = 0x9b
946   0000              defc __LAYER2_COLOR_HTML_BlueViolet = 0x87
947   0000              defc __LAYER2_COLOR_HTML_DarkRed = 0x80
948   0000              defc __LAYER2_COLOR_HTML_DarkMagenta = 0x82
949   0000              defc __LAYER2_COLOR_HTML_SaddleBrown = 0x88
950   0000              defc __LAYER2_COLOR_HTML_DarkSeaGreen = 0x96
951   0000              defc __LAYER2_COLOR_HTML_LightGreen = 0x9e
952   0000              defc __LAYER2_COLOR_HTML_MediumPurple = 0x8f
953   0000              defc __LAYER2_COLOR_HTML_DarkViolet = 0x83
954   0000              defc __LAYER2_COLOR_HTML_PaleGreen = 0x9e
955   0000              defc __LAYER2_COLOR_HTML_DarkOrchid = 0x87
956   0000              defc __LAYER2_COLOR_HTML_YellowGreen = 0x98
957   0000              defc __LAYER2_COLOR_HTML_Sienna = 0xa8
958   0000              defc __LAYER2_COLOR_HTML_Brown = 0xa4
959   0000              defc __LAYER2_COLOR_HTML_DarkGray = 0xb6
960   0000              defc __LAYER2_COLOR_HTML_DarkGrey = 0xb6
961   0000              defc __LAYER2_COLOR_HTML_LightBlue = 0xbb
962   0000              defc __LAYER2_COLOR_HTML_GreenYellow = 0xbc
963   0000              defc __LAYER2_COLOR_HTML_PaleTurquoise = 0xbf
964   0000              defc __LAYER2_COLOR_HTML_LightSteelBlue = 0xbb
965   0000              defc __LAYER2_COLOR_HTML_PowderBlue = 0xbf
966   0000              defc __LAYER2_COLOR_HTML_FireBrick = 0xa4
967   0000              defc __LAYER2_COLOR_HTML_DarkGoldenRod = 0xb0
968   0000              defc __LAYER2_COLOR_HTML_MediumOrchid = 0xab
969   0000              defc __LAYER2_COLOR_HTML_RosyBrown = 0xb2
970   0000              defc __LAYER2_COLOR_HTML_DarkKhaki = 0xb5
971   0000              defc __LAYER2_COLOR_HTML_Silver = 0xdb
972   0000              defc __LAYER2_COLOR_HTML_MediumVioletRed = 0xc2
973   0000              defc __LAYER2_COLOR_HTML_IndianRed = 0xc9
974   0000              defc __LAYER2_COLOR_HTML_Peru = 0xd0
975   0000              defc __LAYER2_COLOR_HTML_Chocolate = 0xcc
976   0000              defc __LAYER2_COLOR_HTML_Tan = 0xd6
977   0000              defc __LAYER2_COLOR_HTML_LightGray = 0xdb
978   0000              defc __LAYER2_COLOR_HTML_LightGrey = 0xdb
979   0000              defc __LAYER2_COLOR_HTML_Thistle = 0xd7
980   0000              defc __LAYER2_COLOR_HTML_Orchid = 0xcf
981   0000              defc __LAYER2_COLOR_HTML_GoldenRod = 0xd4
982   0000              defc __LAYER2_COLOR_HTML_PaleVioletRed = 0xce
983   0000              defc __LAYER2_COLOR_HTML_Crimson = 0xc0
984   0000              defc __LAYER2_COLOR_HTML_Gainsboro = 0xdb
985   0000              defc __LAYER2_COLOR_HTML_Plum = 0xd7
986   0000              defc __LAYER2_COLOR_HTML_BurlyWood = 0xd6
987   0000              defc __LAYER2_COLOR_HTML_LightCyan = 0xff
988   0000              defc __LAYER2_COLOR_HTML_Lavender = 0xff
989   0000              defc __LAYER2_COLOR_HTML_DarkSalmon = 0xf1
990   0000              defc __LAYER2_COLOR_HTML_Violet = 0xf3
991   0000              defc __LAYER2_COLOR_HTML_PaleGoldenRod = 0xfe
992   0000              defc __LAYER2_COLOR_HTML_LightCoral = 0xf2
993   0000              defc __LAYER2_COLOR_HTML_Khaki = 0xfe
994   0000              defc __LAYER2_COLOR_HTML_AliceBlue = 0xff
995   0000              defc __LAYER2_COLOR_HTML_HoneyDew = 0xff
996   0000              defc __LAYER2_COLOR_HTML_Azure = 0xff
997   0000              defc __LAYER2_COLOR_HTML_SandyBrown = 0xf5
998   0000              defc __LAYER2_COLOR_HTML_Wheat = 0xfa
999   0000              defc __LAYER2_COLOR_HTML_Beige = 0xff
1000  0000              defc __LAYER2_COLOR_HTML_WhiteSmoke = 0xff
1001  0000              defc __LAYER2_COLOR_HTML_MintCream = 0xff
1002  0000              defc __LAYER2_COLOR_HTML_GhostWhite = 0xff
1003  0000              defc __LAYER2_COLOR_HTML_Salmon = 0xf1
1004  0000              defc __LAYER2_COLOR_HTML_AntiqueWhite = 0xff
1005  0000              defc __LAYER2_COLOR_HTML_Linen = 0xff
1006  0000              defc __LAYER2_COLOR_HTML_LightGoldenRodYellow = 0xff
1007  0000              defc __LAYER2_COLOR_HTML_OldLace = 0xff
1008  0000              defc __LAYER2_COLOR_HTML_Red = 0xe0
1009  0000              defc __LAYER2_COLOR_HTML_Fuchsia = 0xe3
1010  0000              defc __LAYER2_COLOR_HTML_Magenta = 0xe3
1011  0000              defc __LAYER2_COLOR_HTML_DeepPink = 0xe2
1012  0000              defc __LAYER2_COLOR_HTML_OrangeRed = 0xe8
1013  0000              defc __LAYER2_COLOR_HTML_Tomato = 0xed
1014  0000              defc __LAYER2_COLOR_HTML_HotPink = 0xee
1015  0000              defc __LAYER2_COLOR_HTML_Coral = 0xed
1016  0000              defc __LAYER2_COLOR_HTML_DarkOrange = 0xf0
1017  0000              defc __LAYER2_COLOR_HTML_LightSalmon = 0xf5
1018  0000              defc __LAYER2_COLOR_HTML_Orange = 0xf4
1019  0000              defc __LAYER2_COLOR_HTML_LightPink = 0xf7
1020  0000              defc __LAYER2_COLOR_HTML_Pink = 0xfb
1021  0000              defc __LAYER2_COLOR_HTML_Gold = 0xf8
1022  0000              defc __LAYER2_COLOR_HTML_PeachPuff = 0xfa
1023  0000              defc __LAYER2_COLOR_HTML_NavajoWhite = 0xfa
1024  0000              defc __LAYER2_COLOR_HTML_Moccasin = 0xfe
1025  0000              defc __LAYER2_COLOR_HTML_Bisque = 0xff
1026  0000              defc __LAYER2_COLOR_HTML_MistyRose = 0xff
1027  0000              defc __LAYER2_COLOR_HTML_BlanchedAlmond = 0xff
1028  0000              defc __LAYER2_COLOR_HTML_PapayaWhip = 0xff
1029  0000              defc __LAYER2_COLOR_HTML_LavenderBlush = 0xff
1030  0000              defc __LAYER2_COLOR_HTML_SeaShell = 0xff
1031  0000              defc __LAYER2_COLOR_HTML_Cornsilk = 0xff
1032  0000              defc __LAYER2_COLOR_HTML_LemonChiffon = 0xff
1033  0000              defc __LAYER2_COLOR_HTML_FloralWhite = 0xff
1034  0000              defc __LAYER2_COLOR_HTML_Snow = 0xff
1035  0000              defc __LAYER2_COLOR_HTML_Yellow = 0xfc
1036  0000              defc __LAYER2_COLOR_HTML_LightYellow = 0xff
1037  0000              defc __LAYER2_COLOR_HTML_Ivory = 0xff
1038  0000              defc __LAYER2_COLOR_HTML_White = 0xff
1039  0000              
1040  0000              
1041  0000              
1042  0000              
1043  0000              
1044  0000              
1045  0000              
1046  0000              
1047  0000              
1048  0000              
1049  0000              
1050  0000              
1051  0000              defc __IO_DAC_L0 = 0x0f
1052  0000              defc __IO_DAC_L1 = 0x1f
1053  0000              defc __IO_DAC_R0 = 0x4f
1054  0000              defc __IO_DAC_R1 = 0x5f
1055  0000              
1056  0000              defc __IO_DAC_M0 = 0xdf
1057  0000              
1058  0000              defc __IO_DAC_SPECDRUM = 0xdf
1059  0000              
1060  0000              defc __IO_DAC_PROFI_L = 0x3f
1061  0000              defc __IO_DAC_PROFI_R = 0x5f
1062  0000              
1063  0000              defc __IO_DAC_COVOX_L = 0x0f
1064  0000              defc __IO_DAC_COVOX_R = 0x4f
1065  0000              
1066  0000              defc __IO_SOUNDRIVE_L_A = 0x0f
1067  0000              defc __IO_SOUNDRIVE_L_B = 0x1f
1068  0000              defc __IO_SOUNDRIVE_R_C = 0x4f
1069  0000              defc __IO_SOUNDRIVE_R_D = 0x5f
1070  0000              
1071  0000              defc __IO_SOUNDRIVE_L_A2 = 0xf1
1072  0000              defc __IO_SOUNDRIVE_L_B2 = 0xf3
1073  0000              defc __IO_SOUNDRIVE_R_C2 = 0xf9
1074  0000              defc __IO_SOUNDRIVE_R_D2 = 0xfb
1075  0000              
1076  0000              defc __IO_TURBOSOUND = 0xfffd
1077  0000              defc __IT_ENABLE_L = 0xd0
1078  0000              defc __IT_ENABLE_R = 0xb0
1079  0000              defc __IT_ENABLE_LR = 0xf0
1080  0000              defc __IT_SELECT_PSG_0 = 0x0f
1081  0000              defc __IT_SELECT_PSG_1 = 0x0e
1082  0000              defc __IT_SELECT_PSG_2 = 0x0d
1083  0000              
1084  0000              defc __IO_AY_REG = 0xfffd
1085  0000              defc __IO_AY_DAT = 0xbffd
1086  0000              
1087  0000              
1088  0000              
1089  0000              
1090  0000              
1091  0000              
1092  0000              
1093  0000              
1094  0000              
1095  0000              
1096  0000              
1097  0000              
1098  0000              
1099  0000              
1100  0000              
1101  0000              
1102  0000              
1103  0000              
1104  0000              
1105  0000              
1106  0000              
1107  0000              
1108  0000              
1109  0000              
1110  0000              defc __IO_LAYER_2_CONFIG = 0x123b
1111  0000              defc __IL2C_ENABLE_LOWER_16K = 0x01
1112  0000              defc __IL2C_SHOW_LAYER_2 = 0x02
1113  0000              defc __IL2C_SELECT_SHADOW_BUFFER = 0x08
1114  0000              defc __IL2C_BANK_SELECT_MASK = 0xc0
1115  0000              defc __IL2C_BANK_SELECT_0 = 0x00
1116  0000              defc __IL2C_BANK_SELECT_1 = 0x40
1117  0000              defc __IL2C_BANK_SELECT_2 = 0x80
1118  0000              
1119  0000              
1120  0000              
1121  0000              
1122  0000              
1123  0000              
1124  0000              
1125  0000              
1126  0000              
1127  0000              
1128  0000              
1129  0000              
1130  0000              defc __IO_7FFD = 0x7ffd
1131  0000              defc __IO_7FFD_LOCK = 0x20
1132  0000              defc __IO_7FFD_ROM0 = 0x10
1133  0000              defc __IO_7FFD_ALT_DFILE = 0x08
1134  0000              defc __IO_7FFD_RAM_PAGE_MASK = 0x07
1135  0000              
1136  0000              defc __IO_DFFD = 0xdffd
1137  0000              defc __IO_DFFD_RAM_PAGE_MASK = 0x0f
1138  0000              
1139  0000              defc __IO_1FFD = 0x1ffd
1140  0000              defc __IO_1FFD_PAGING_MODE_NORMAL = 0x00
1141  0000              defc __IO_1FFD_PAGING_MODE_SPECIAL = 0x01
1142  0000              defc __IO_1FFD_PAGING_MODE_SPECIAL_3210 = 0x01
1143  0000              defc __IO_1FFD_PAGING_MODE_SPECIAL_7654 = 0x03
1144  0000              defc __IO_1FFD_PAGING_MODE_SPECIAL_3654 = 0x05
1145  0000              defc __IO_1FFD_PAGING_MODE_SPECIAL_3674 = 0x07
1146  0000              defc __IO_1FFD_ROM1 = 0x04
1147  0000              defc __IO_1FFD_DISK_MOTOR = 0x08
1148  0000              defc __IO_1FFD_PRINTER_STROBE = 0x10
1149  0000              
1150  0000              
1151  0000              
1152  0000              
1153  0000              
1154  0000              
1155  0000              
1156  0000              
1157  0000              
1158  0000              
1159  0000              
1160  0000              
1161  0000              defc __NEXTOS_DOS_VERSION = 0x0103
1162  0000              defc __NEXTOS_DOS_OPEN = 0x0106
1163  0000              defc __NEXTOS_DOS_CLOSE = 0x0109
1164  0000              defc __NEXTOS_DOS_ABANDON = 0x010c
1165  0000              defc __NEXTOS_DOS_REF_HEAD = 0x010f
1166  0000              defc __NEXTOS_DOS_READ = 0x0112
1167  0000              defc __NEXTOS_DOS_WRITE = 0x0115
1168  0000              defc __NEXTOS_DOS_BYTE_READ = 0x0118
1169  0000              defc __NEXTOS_DOS_BYTE_WRITE = 0x011b
1170  0000              defc __NEXTOS_DOS_CATALOG = 0x011e
1171  0000              defc __NEXTOS_DOS_FREE_SPACE = 0x0121
1172  0000              defc __NEXTOS_DOS_DELETE = 0x0124
1173  0000              defc __NEXTOS_DOS_RENAME = 0x0127
1174  0000              defc __NEXTOS_DOS_BOOT = 0x012a
1175  0000              defc __NEXTOS_DOS_SET_DRIVE = 0x012d
1176  0000              defc __NEXTOS_DOS_SET_USER = 0x0130
1177  0000              defc __NEXTOS_DOS_GET_POSITION = 0x0133
1178  0000              defc __NEXTOS_DOS_SET_POSITION = 0x0136
1179  0000              defc __NEXTOS_DOS_GET_EOF = 0x0139
1180  0000              defc __NEXTOS_DOS_GET_1346 = 0x013c
1181  0000              defc __NEXTOS_DOS_SET_1346 = 0x013f
1182  0000              defc __NEXTOS_DOS_FLUSH = 0x0142
1183  0000              defc __NEXTOS_DOS_SET_ACCESS = 0x0145
1184  0000              defc __NEXTOS_DOS_SET_ATTRIBUTES = 0x0148
1185  0000              defc __NEXTOS_DOS_SET_MESSAGE = 0x014e
1186  0000              
1187  0000              defc __NEXTOS_IDE_VERSION = 0x00a0
1188  0000              defc __NEXTOS_IDE_SWAP_OPEN = 0x00d9
1189  0000              defc __NEXTOS_IDE_SWAP_CLOSE = 0x00dc
1190  0000              defc __NEXTOS_IDE_SWAP_OUT = 0x00df
1191  0000              defc __NEXTOS_IDE_SWAP_IN = 0x00e2
1192  0000              defc __NEXTOS_IDE_SWAP_EX = 0x00e5
1193  0000              defc __NEXTOS_IDE_SWAP_POS = 0x00e8
1194  0000              defc __NEXTOS_IDE_SWAP_MOVE = 0x00eb
1195  0000              defc __NEXTOS_IDE_SWAP_RESIZE = 0x00ee
1196  0000              defc __NEXTOS_IDE_PARTITION_FIND = 0x00b5
1197  0000              defc __NEXTOS_IDE_DOS_MAP = 0x00f1
1198  0000              defc __NEXTOS_IDE_DOS_UNMAP = 0x00f4
1199  0000              defc __NEXTOS_IDE_DOS_MAPPING = 0x00f7
1200  0000              defc __NEXTOS_IDE_SNAPLOAD = 0x00fd
1201  0000              
1202  0000              defc __NEXTOS_IDE_PATH = 0x01b1
1203  0000              defc __nextos_rc_path_change = 0
1204  0000              defc __nextos_rc_path_get = 1
1205  0000              defc __nextos_rc_path_make = 2
1206  0000              defc __nextos_rc_path_delete = 3
1207  0000              
1208  0000              defc __NEXTOS_IDE_CAPACITY = 0x01b4
1209  0000              defc __NEXTOS_IDE_GET_LFN = 0x01b7
1210  0000              
1211  0000              defc __NEXTOS_IDE_BROWSER = 0x01ba
1212  0000              defc __nextos_browsercaps_none = 0
1213  0000              defc __nextos_browsercaps_copy = 0x01
1214  0000              defc __nextos_browsercaps_rename = 0x02
1215  0000              defc __nextos_browsercaps_mkdir = 0x04
1216  0000              defc __nextos_browsercaps_erase = 0x08
1217  0000              defc __nextos_browsercaps_remount = 0x10
1218  0000              defc __nextos_browsercaps_syscfg = 0x80
1219  0000              defc __nextos_browsercaps_all = 0x1f
1220  0000              
1221  0000              defc __NEXTOS_IDE_STREAM_OPEN = 0x0056
1222  0000              defc __NEXTOS_IDE_STREAM_CLOSE = 0x0059
1223  0000              defc __NEXTOS_IDE_STREAM_IN = 0x005c
1224  0000              defc __NEXTOS_IDE_STREAM_OUT = 0x005f
1225  0000              defc __NEXTOS_IDE_STREAM_PTR = 0x0062
1226  0000              
1227  0000              defc __NEXTOS_IDE_BANK = 0x01bd
1228  0000              defc __nextos_rc_banktype_zx = 0
1229  0000              defc __nextos_rc_banktype_mmc = 1
1230  0000              defc __nextos_rc_bank_total = 0
1231  0000              defc __nextos_rc_bank_alloc = 1
1232  0000              defc __nextos_rc_bank_reserve = 2
1233  0000              defc __nextos_rc_bank_free = 3
1234  0000              
1235  0000              defc __NEXTOS_IDE_BASIC = 0x01c0
1236  0000              defc __NEXTOS_IDE_STREAM_LINEIN = 0x01c3
1237  0000              defc __NEXTOS_IDE_WINDOW_STRING = 0x01c6
1238  0000              defc __NEXTOS_IDE_INTEGER_VAR = 0x01c9
1239  0000              defc __NEXTOS_IDE_RTC = 0x01cc
1240  0000              
1241  0000              defc __NEXTOS_DOS_REF_XDPB = 0x0151
1242  0000              defc __NEXTOS_DOS_MAP_B = 0x0154
1243  0000              defc __NEXTOS_DD_INTERFACE = 0x0157
1244  0000              defc __NEXTOS_DD_INIT = 0x015a
1245  0000              defc __NEXTOS_DD_SETUP = 0x015d
1246  0000              defc __NEXTOS_DD_SET_RETRY = 0x0160
1247  0000              defc __NEXTOS_DD_READ_SECTOR = 0x0163
1248  0000              defc __NEXTOS_DD_WRITE_SECTOR = 0x0166
1249  0000              defc __NEXTOS_DD_CHECK_SECTOR = 0x0169
1250  0000              defc __NEXTOS_DD_FORMAT = 0x016c
1251  0000              defc __NEXTOS_DD_READ_ID = 0x016f
1252  0000              defc __NEXTOS_DD_TEST_UNSUITABLE = 0x0172
1253  0000              defc __NEXTOS_DD_LOGIN = 0x0175
1254  0000              defc __NEXTOS_DD_SEL_FORMAT = 0x0178
1255  0000              defc __NEXTOS_DD_ASK_1 = 0x017b
1256  0000              defc __NEXTOS_DD_DRIVE_STATUS = 0x017e
1257  0000              defc __NEXTOS_DD_EQUIPMENT = 0x0181
1258  0000              defc __NEXTOS_DD_ENCODE = 0x0184
1259  0000              defc __NEXTOS_DD_L_XDPB = 0x0187
1260  0000              defc __NEXTOS_DD_L_DPB = 0x018a
1261  0000              defc __NEXTOS_DD_L_SEEK = 0x018d
1262  0000              defc __NEXTOS_DD_L_READ = 0x0190
1263  0000              defc __NEXTOS_DD_L_WRITE = 0x0193
1264  0000              defc __NEXTOS_DD_L_ON_MOTOR = 0x0196
1265  0000              defc __NEXTOS_DD_T_OFF_MOTOR = 0x0199
1266  0000              defc __NEXTOS_DD_L_OFF_MOTOR = 0x019c
1267  0000              
1268  0000              defc __NEXTOS_DOS_INITIALISE = 0x0100
1269  0000              defc __NEXTOS_DOS_INITIALIZE = 0x0100
1270  0000              defc __NEXTOS_IDE_INTERFACE = 0x00a3
1271  0000              defc __NEXTOS_IDE_INIT = 0x00a6
1272  0000              defc __NEXTOS_IDE_DRIVE = 0x00a9
1273  0000              defc __NEXTOS_IDE_SECTOR_READ = 0x00ac
1274  0000              defc __NEXTOS_IDE_SECTOR_WRITE = 0x00af
1275  0000              defc __NEXTOS_IDE_PARTITION_NEW = 0x00b8
1276  0000              defc __NEXTOS_IDE_PARTITION_INIT = 0x00bb
1277  0000              defc __NEXTOS_IDE_PARTITION_READ = 0x00c4
1278  0000              defc __NEXTOS_IDE_PARTITION_OPEN = 0x00cd
1279  0000              defc __NEXTOS_IDE_PARTITION_CLOSE = 0x00d0
1280  0000              defc __NEXTOS_IDE_PARTITIONS = 0x01a5
1281  0000              
1282  0000              defc __NEXTOS_DOTN_SP_DIVMMC = 0x4000
1283  0000              
1284  0000              defc __ESX_DISK_FILEMAP = 0x85
1285  0000              defc __ESX_DISK_STRMSTART = 0x86
1286  0000              defc __ESX_DISK_STRMEND = 0x87
1287  0000              
1288  0000              defc __ESX_M_DOSVERSION = 0x88
1289  0000              defc __ESX_M_GETSETDRV = 0x89
1290  0000              defc __ESX_M_TAPEIN = 0x8b
1291  0000              defc __ESX_M_TAPEOUT = 0x8c
1292  0000              defc __ESX_M_GETHANDLE = 0x8d
1293  0000              defc __ESX_M_GETDATE = 0x8e
1294  0000              defc __ESX_M_EXECCMD = 0x8f
1295  0000              defc __ESX_M_GETERR = 0x93
1296  0000              defc __ESX_M_P3DOS = 0x94
1297  0000              defc __ESX_M_ERRH = 0x95
1298  0000              
1299  0000              defc __ESX_F_OPEN = 0x9a
1300  0000              defc __ESX_F_CLOSE = 0x9b
1301  0000              defc __ESX_F_SYNC = 0x9c
1302  0000              defc __ESX_F_READ = 0x9d
1303  0000              defc __ESX_F_WRITE = 0x9e
1304  0000              defc __ESX_F_SEEK = 0x9f
1305  0000              defc __ESX_F_FGETPOS = 0xa0
1306  0000              defc __ESX_F_FSTAT = 0xa1
1307  0000              defc __ESX_F_FTRUNCATE = 0xa2
1308  0000              defc __ESX_F_OPENDIR = 0xa3
1309  0000              defc __ESX_F_READDIR = 0xa4
1310  0000              defc __ESX_F_TELLDIR = 0xa5
1311  0000              defc __ESX_F_SEEKDIR = 0xa6
1312  0000              defc __ESX_F_REWINDDIR = 0xa7
1313  0000              defc __ESX_F_GETCWD = 0xa8
1314  0000              defc __ESX_F_CHDIR = 0xa9
1315  0000              defc __ESX_F_MKDIR = 0xaa
1316  0000              defc __ESX_F_RMDIR = 0xab
1317  0000              defc __ESX_F_STAT = 0xac
1318  0000              defc __ESX_F_UNLINK = 0xad
1319  0000              defc __ESX_F_TRUNCATE = 0xae
1320  0000              defc __ESX_F_CHMOD = 0xaf
1321  0000              defc __ESX_F_RENAME = 0xb0
1322  0000              defc __ESX_F_GETFREE = 0xb1
1323  0000              
1324  0000              defc __NEXTOS_RC_READY = 0
1325  0000              defc __NEXTOS_RC_WP = 1
1326  0000              defc __NEXTOS_RC_SEEK = 2
1327  0000              defc __NEXTOS_RC_CRC = 3
1328  0000              defc __NEXTOS_RC_NODATA = 4
1329  0000              defc __NEXTOS_RC_MARK = 5
1330  0000              defc __NEXTOS_RC_UNRECOG = 6
1331  0000              defc __NEXTOS_RC_UNKNOWN = 7
1332  0000              defc __NEXTOS_RC_DISKCHG = 8
1333  0000              defc __NEXTOS_RC_UNSUIT = 9
1334  0000              
1335  0000              defc __NEXTOS_RC_BADNAME = 20
1336  0000              defc __NEXTOS_RC_BADPARAM = 21
1337  0000              defc __NEXTOS_RC_NODRIVE = 22
1338  0000              defc __NEXTOS_RC_NOFILE = 23
1339  0000              defc __NEXTOS_RC_EXISTS = 24
1340  0000              defc __NEXTOS_RC_EOF = 25
1341  0000              defc __NEXTOS_RC_DISKFULL = 26
1342  0000              defc __NEXTOS_RC_DIRFULL = 27
1343  0000              defc __NEXTOS_RC_RO = 28
1344  0000              defc __NEXTOS_RC_NUMBER = 29
1345  0000              defc __NEXTOS_RC_DENIED = 30
1346  0000              defc __NEXTOS_RC_NORENAME = 31
1347  0000              defc __NEXTOS_RC_EXTENT = 32
1348  0000              defc __NEXTOS_RC_UNCACHED = 33
1349  0000              defc __NEXTOS_RC_TOOBIG = 34
1350  0000              defc __NEXTOS_RC_NOTBOOT = 35
1351  0000              defc __NEXTOS_RC_INUSE = 36
1352  0000              
1353  0000              defc __NEXTOS_RC_INVPARTITION = 56
1354  0000              defc __NEXTOS_RC_PARTEXIST = 57
1355  0000              defc __NEXTOS_RC_NOTIMP = 58
1356  0000              defc __NEXTOS_RC_PARTOPEN = 59
1357  0000              defc __NEXTOS_RC_NOHANDLE = 60
1358  0000              defc __NEXTOS_RC_NOTSWAP = 61
1359  0000              defc __NEXTOS_RC_MAPPED = 62
1360  0000              defc __NEXTOS_RC_NOXDPB = 63
1361  0000              defc __NEXTOS_RC_NOSWAP = 64
1362  0000              defc __NEXTOS_RC_INVDEVICE = 65
1363  0000              defc __NEXTOS_RC_CMDPHASE = 67
1364  0000              defc __NEXTOS_RC_DATAPHASE = 68
1365  0000              defc __NEXTOS_RC_NOTDIR = 69
1366  0000              
1367  0000              
1368  0000              
1369  0000              
1370  0000              
1371  0000              
1372  0000              
1373  0000              
1374  0000              
1375  0000              
1376  0000              
1377  0000              
1378  0000              defc __IO_NEXTREG_REG = 0x243b
1379  0000              defc __IO_NEXTREG_DAT = 0x253b
1380  0000              
1381  0000              defc __REG_MACHINE_ID = 0
1382  0000              
1383  0000              defc __REG_VERSION = 1
1384  0000              defc __RV_MAJOR = 0xf0
1385  0000              defc __RV_MINOR = 0x0f
1386  0000              
1387  0000              defc __REG_RESET = 2
1388  0000              defc __RR_POWER_ON_RESET = 0x04
1389  0000              defc __RR_HARD_RESET = 0x02
1390  0000              defc __RR_SOFT_RESET = 0x01
1391  0000              
1392  0000              defc __REG_MACHINE_TYPE = 3
1393  0000              defc __RMT_LOCK_TIMING = 0x80
1394  0000              defc __RMT_TIMING_48 = 0x10
1395  0000              defc __RMT_TIMING_128 = 0x20
1396  0000              defc __RMT_TIMING_P3E = 0x30
1397  0000              defc __RMT_TIMING_PENTAGON = 0x40
1398  0000              defc __RMT_CONFIG_MODE = 0x00
1399  0000              defc __RMT_48 = 0x01
1400  0000              defc __RMT_128 = 0x02
1401  0000              defc __RMT_P3E = 0x03
1402  0000              defc __RMT_PENTAGON = 0x04
1403  0000              
1404  0000              defc __REG_PAGE_RAM = 4
1405  0000              defc __RPR_MASK = 0x7f
1406  0000              defc __REG_BANK_RAM = 4
1407  0000              defc __RBR_MASK = 0x7f
1408  0000              
1409  0000              defc __REG_PERIPHERAL_1 = 5
1410  0000              defc __RP1_JOY1_SINCLAIR = 0x00
1411  0000              defc __RP1_JOY1_KEMPSTON = 0x40
1412  0000              defc __RP1_JOY1_CURSOR = 0x80
1413  0000              defc __RP1_JOY2_SINCLAIR = 0x00
1414  0000              defc __RP1_JOY2_KEMPSTON = 0x10
1415  0000              defc __RP1_JOY2_CURSOR = 0x20
1416  0000              defc __RP1_RATE_50 = 0x00
1417  0000              defc __RP1_RATE_60 = 0x04
1418  0000              defc __RP1_ENABLE_SCANLINES = 0x02
1419  0000              defc __RP1_ENABLE_SCANDOUBLER = 0x01
1420  0000              
1421  0000              defc __REG_PERIPHERAL_2 = 6
1422  0000              defc __RP2_ENABLE_TURBO = 0x80
1423  0000              defc __RP2_DAC_I2S = 0x00
1424  0000              defc __RP2_DAC_JAP = 0x40
1425  0000              defc __RP2_ENABLE_LIGHTPEN = 0x20
1426  0000              defc __RP2_ENABLE_DIVMMC = 0x10
1427  0000              defc __RP2_ENABLE_MULTIFACE = 0x08
1428  0000              defc __RP2_PS2_KEYBOARD = 0x00
1429  0000              defc __RP2_PS2_MOUSE = 0x04
1430  0000              defc __RP2_PSGMODE_AY = 0x03
1431  0000              defc __RP2_PSGMODE_YM = 0x02
1432  0000              defc __RP2_PSGMODE_DISABLE = 0x00
1433  0000              
1434  0000              defc __REG_TURBO_MODE = 7
1435  0000              defc __RTM_3MHZ = 0x00
1436  0000              defc __RTM_7MHZ = 0x01
1437  0000              defc __RTM_14MHZ = 0x02
1438  0000              defc __RTM_28MHZ = 0x03
1439  0000              
1440  0000              defc __REG_PERIPHERAL_3 = 8
1441  0000              defc __RP3_STEREO_ABC = 0x00
1442  0000              defc __RP3_STEREO_ACB = 0x20
1443  0000              defc __RP3_ENABLE_SPEAKER = 0x10
1444  0000              defc __RP3_ENABLE_SPECDRUM = 0x08
1445  0000              defc __RP3_ENABLE_COVOX = 0x08
1446  0000              defc __RP3_ENABLE_TIMEX = 0x04
1447  0000              defc __RP3_ENABLE_TURBOSOUND = 0x02
1448  0000              defc __RP3_UNLOCK_7FFD = 0x80
1449  0000              
1450  0000              defc __REG_ANTI_BRICK = 10
1451  0000              defc __RAB_START_NORMAL_CORE = 0x80
1452  0000              defc __RAB_BUTTON_DIVMMC = 0x02
1453  0000              defc __RAB_BUTTON_MULTIFACE = 0x01
1454  0000              
1455  0000              defc __REG_LAYER_2_RAM_PAGE = 18
1456  0000              defc __RL2RP_MASK = 0x7f
1457  0000              defc __REG_LAYER_2_RAM_BANK = 18
1458  0000              defc __RL2RB_MASK = 0x7f
1459  0000              
1460  0000              defc __REG_LAYER_2_SHADOW_RAM_PAGE = 19
1461  0000              defc __RL2SRP_MASK = 0x7f
1462  0000              defc __REG_LAYER_2_SHADOW_RAM_BANK = 19
1463  0000              defc __RL2SRB_MASK = 0x7f
1464  0000              
1465  0000              defc __REG_GLOBAL_TRANSPARENCY_COLOR = 20
1466  0000              
1467  0000              defc __REG_SPRITE_LAYER_SYSTEM = 21
1468  0000              defc __RSLS_ENABLE_LORES = 0x80
1469  0000              defc __RSLS_LAYER_PRIORITY_SLU = 0x00
1470  0000              defc __RSLS_LAYER_PRIORITY_LSU = 0x04
1471  0000              defc __RSLS_LAYER_PRIORITY_SUL = 0x08
1472  0000              defc __RSLS_LAYER_PRIORITY_LUS = 0x0c
1473  0000              defc __RSLS_LAYER_PRIORITY_USL = 0x10
1474  0000              defc __RSLS_LAYER_PRIORITY_ULS = 0x14
1475  0000              defc __RSLS_SPRITES_OVER_BORDER = 0x02
1476  0000              defc __RSLS_SPRITES_VISIBLE = 0x01
1477  0000              
1478  0000              defc __REG_LAYER_2_OFFSET_X = 22
1479  0000              
1480  0000              defc __REG_LAYER_2_OFFSET_Y = 23
1481  0000              
1482  0000              defc __REG_CLIP_WINDOW_LAYER_2 = 24
1483  0000              
1484  0000              defc __REG_CLIP_WINDOW_SPRITES = 25
1485  0000              
1486  0000              defc __REG_CLIP_WINDOW_ULA = 26
1487  0000              
1488  0000              defc __REG_CLIP_WINDOW_CONTROL = 28
1489  0000              defc __RCWC_RESET_ULA_CLIP_INDEX = 0x04
1490  0000              defc __RCWC_RESET_SPRITE_CLIP_INDEX = 0x02
1491  0000              defc __RCWC_RESET_LAYER_2_CLIP_INDEX = 0x01
1492  0000              
1493  0000              defc __REG_ACTIVE_VIDEO_LINE_MSB = 30
1494  0000              
1495  0000              defc __REG_ACTIVE_VIDEO_LINE_LSB = 31
1496  0000              
1497  0000              defc __REG_LINE_INTERRUPT_CONTROL = 34
1498  0000              defc __RLIC_INTERRUPT_FLAG = 0x80
1499  0000              defc __RLIC_DISABLE_ULA_INTERRUPT = 0x04
1500  0000              defc __RLIC_ENABLE_LINE_INTERRUPT = 0x02
1501  0000              defc __RLIC_LINE_INTERRUPT_VALUE_MSB = 0x01
1502  0000              
1503  0000              defc __REG_LINE_INTERRUPT_VALUE_LSB = 35
1504  0000              
1505  0000              defc __REG_KEYMAP_ADDRESS_MSB = 40
1506  0000              
1507  0000              defc __REG_KEYMAP_ADDRESS_LSB = 41
1508  0000              
1509  0000              defc __REG_KEYMAP_DATA_MSB = 42
1510  0000              
1511  0000              defc __REG_KEYMAP_DATA_LSB = 43
1512  0000              
1513  0000              defc __REG_AUDIO_MONO_DAC = 45
1514  0000              
1515  0000              defc __REG_LORES_OFFSET_X = 50
1516  0000              
1517  0000              defc __REG_LORES_OFFSET_Y = 51
1518  0000              
1519  0000              defc __REG_PALETTE_INDEX = 64
1520  0000              
1521  0000              defc __REG_PALETTE_VALUE_8 = 65
1522  0000              
1523  0000              defc __REG_ULA_PALETTE_FORMAT = 66
1524  0000              
1525  0000              defc __REG_PALETTE_CONTROL = 67
1526  0000              defc __RPC_SELECT_ULA_PALETTE_0 = 0x00
1527  0000              defc __RPC_SELECT_ULA_PALETTE_1 = 0x40
1528  0000              defc __RPC_SELECT_LAYER_2_PALETTE_0 = 0x10
1529  0000              defc __RPC_SELECT_LAYER_2_PALETTE_1 = 0x50
1530  0000              defc __RPC_SELECT_SPRITES_PALETTE_0 = 0x20
1531  0000              defc __RPC_SELECT_SPRITES_PALETTE_1 = 0x60
1532  0000              defc __RPC_ENABLE_SPRITES_PALETTE_0 = 0x00
1533  0000              defc __RPC_ENABLE_SPRITES_PALETTE_1 = 0x08
1534  0000              defc __RPC_ENABLE_LAYER_2_PALETTE_0 = 0x00
1535  0000              defc __RPC_ENABLE_LAYER_2_PALETTE_1 = 0x04
1536  0000              defc __RPC_ENABLE_ULA_PALETTE_0 = 0x00
1537  0000              defc __RPC_ENABLE_ULA_PALETTE_1 = 0x02
1538  0000              defc __RPC_ENABLE_ULANEXT = 0x01
1539  0000              
1540  0000              defc __REG_PALETTE_VALUE_16 = 68
1541  0000              
1542  0000              defc __REG_MMU0 = 80
1543  0000              defc __REG_MMU1 = 81
1544  0000              defc __REG_MMU2 = 82
1545  0000              defc __REG_MMU3 = 83
1546  0000              defc __REG_MMU4 = 84
1547  0000              defc __REG_MMU5 = 85
1548  0000              defc __REG_MMU6 = 86
1549  0000              defc __REG_MMU7 = 87
1550  0000              
1551  0000              defc __REG_COPPER_DATA = 96
1552  0000              
1553  0000              defc __REG_COPPER_CONTROL_LO = 97
1554  0000              
1555  0000              defc __REG_COPPER_CONTROL_HI = 98
1556  0000              defc __RCCH_COPPER_STOP = 0x00
1557  0000              defc __RCCH_COPPER_RUN_ONCE = 0x40
1558  0000              defc __RCCH_COPPER_RUN_LOOP = 0x80
1559  0000              defc __RCCH_COPPER_RUN_ON_INTERRUPT = 0xc0
1560  0000              
1561  0000              
1562  0000              
1563  0000              
1564  0000              
1565  0000              
1566  0000              
1567  0000              
1568  0000              
1569  0000              
1570  0000              
1571  0000              
1572  0000              defc __IO_SPRITE_SLOT = 0x303b
1573  0000              
1574  0000              defc __IO_SPRITE_FLAGS = 0x303b
1575  0000              defc __ISF_MAX_SPRITES_PER_LINE = 0x02
1576  0000              defc __ISF_COLLISION = 0x01
1577  0000              
1578  0000              defc __IO_SPRITE_PALETTE = 0x53
1579  0000              
1580  0000              defc __IO_SPRITE_ATTRIBUTE = 0x57
1581  0000              
1582  0000              defc __IO_SPRITE_PATTERN = 0x5b
1583  0000              
1584  0000              
1585  0000              
1586  0000              
1587  0000              
1588  0000              
1589  0000              
1590  0000              
1591  0000              
1592  0000              
1593  0000              
1594  0000              
1595  0000              defc __SYS_IY = 0x5c3a
1596  0000              defc __SYS_HLP = 0x2758
1597  0000              
1598  0000              defc __SYSVAR_SWAP = 0x5b00
1599  0000              defc __SYSVAR_STOO = 0x5b10
1600  0000              defc __SYSVAR_YOUNGER = 0x5b21
1601  0000              defc __SYSVAR_REGNUOY = 0x5b2a
1602  0000              defc __SYSVAR_ONERR = 0x5b3a
1603  0000              defc __SYSVAR_OLDHL = 0x5b52
1604  0000              defc __SYSVAR_OLDBC = 0x5b54
1605  0000              defc __SYSVAR_OLDAF = 0x5b56
1606  0000              defc __SYSVAR_TARGET = 0x5b58
1607  0000              defc __SYSVAR_RETADDR = 0x5b5a
1608  0000              defc __SYSVAR_BANKM = 0x5b5c
1609  0000              defc __SYSVAR_RAMRST = 0x5b5d
1610  0000              defc __SYSVAR_RAMERR = 0x5b5e
1611  0000              defc __SYSVAR_BAUD = 0x5b5f
1612  0000              defc __SYSVAR_SERFL = 0x5b61
1613  0000              defc __SYSVAR_COL = 0x5b63
1614  0000              defc __SYSVAR_WIDTH = 0x5b64
1615  0000              defc __SYSVAR_TVPARS = 0x5b65
1616  0000              defc __SYSVAR_FLAGS3 = 0x5b66
1617  0000              defc __SYSVAR_BANK678 = 0x5b67
1618  0000              defc __SYSVAR_FLAGN = 0x5b68
1619  0000              defc __SYSVAR_MAXBNK = 0x5b69
1620  0000              defc __SYSVAR_OLDSP = 0x5b6a
1621  0000              defc __SYSVAR_SYNRET = 0x5b6c
1622  0000              defc __SYSVAR_LASTV = 0x5b6e
1623  0000              defc __SYSVAR_TILEBNKL = 0x5b73
1624  0000              defc __SYSVAR_TILEML = 0x5b74
1625  0000              defc __SYSVAR_TILEBNK2 = 0x5b75
1626  0000              defc __SYSVAR_TILEM2 = 0x5b76
1627  0000              defc __SYSVAR_NXTBNK = 0x5b77
1628  0000              defc __SYSVAR_DATABNK = 0x5b78
1629  0000              defc __SYSVAR_LODDRV = 0x5b79
1630  0000              defc __SYSVAR_SAVDRV = 0x5b7a
1631  0000              defc __SYSVAR_L2SOFT = 0x5b7b
1632  0000              defc __SYSVAR_TILEWL = 0x5b7c
1633  0000              defc __SYSVAR_TILEW2 = 0x5b7e
1634  0000              defc __SYSVAR_TILEOFFL = 0x5b80
1635  0000              defc __SYSVAR_TILEOFF2 = 0x5b82
1636  0000              defc __SYSVAR_COORDSL = 0x5b84
1637  0000              defc __SYSVAR_COORDS2 = 0x5b86
1638  0000              defc __SYSVAR_COORDSULA = 0x5b88
1639  0000              defc __SYSVAR_COORDSHR = 0x5b8a
1640  0000              defc __SYSVAR_COORDSHC = 0x5b8c
1641  0000              defc __SYSVAR_INKL = 0x5b8e
1642  0000              defc __SYSVAR_INK2 = 0x5b8f
1643  0000              defc __SYSVAR_ATTRULA = 0x5b90
1644  0000              defc __SYSVAR_ATTRHR = 0x5b91
1645  0000              defc __SYSVAR_ATTRHC = 0x5b92
1646  0000              defc __SYSVAR_INKMASK = 0x5b93
1647  0000              defc __SYSVAR_TMPVARS = 0x5b94
1648  0000              
1649  0000              defc __SYSVAR_TSTACK = 0x5bff
1650  0000              
1651  0000              defc __SYSVAR_KSTATE = 0x5c00
1652  0000              defc __SYSVAR_LASTK = 0x5c08
1653  0000              defc __SYSVAR_REPDEL = 0x5c09
1654  0000              defc __SYSVAR_REPPER = 0x5c0a
1655  0000              defc __SYSVAR_DEFADD = 0x5c0b
1656  0000              defc __SYSVAR_KDATA = 0x5c0d
1657  0000              defc __SYSVAR_TVDATA = 0x5c0e
1658  0000              defc __SYSVAR_STRMS = 0x5c10
1659  0000              defc __SYSVAR_CHARS = 0x5c36
1660  0000              defc __SYSVAR_RASP = 0x5c38
1661  0000              defc __SYSVAR_PIP = 0x5c39
1662  0000              defc __SYSVAR_ERRNR = 0x5c3a
1663  0000              defc __SYSVAR_FLAGS = 0x5c3b
1664  0000              defc __SYSVAR_TVFLAG = 0x5c3c
1665  0000              defc __SYSVAR_ERRSP = 0x5c3d
1666  0000              defc __SYSVAR_LISTSP = 0x5c3f
1667  0000              defc __SYSVAR_MODE = 0x5c41
1668  0000              defc __SYSVAR_NEWPPC = 0x5c42
1669  0000              defc __SYSVAR_NSPPC = 0x5c44
1670  0000              defc __SYSVAR_PPC = 0x5c45
1671  0000              defc __SYSVAR_SUBPPC = 0x5c47
1672  0000              defc __SYSVAR_BORDCR = 0x5c48
1673  0000              defc __SYSVAR_EPPC = 0x5c49
1674  0000              defc __SYSVAR_VARS = 0x5c4b
1675  0000              defc __SYSVAR_DEST = 0x5c4d
1676  0000              defc __SYSVAR_CHANS = 0x5c4f
1677  0000              defc __SYSVAR_CURCHL = 0x5c51
1678  0000              defc __SYSVAR_PROG = 0x5c53
1679  0000              defc __SYSVAR_NXTLIN = 0x5c55
1680  0000              defc __SYSVAR_DATADD = 0x5c57
1681  0000              defc __SYSVAR_ELINE = 0x5c59
1682  0000              defc __SYSVAR_KCUR = 0x5c5b
1683  0000              defc __SYSVAR_CHADD = 0x5c5d
1684  0000              defc __SYSVAR_XPTR = 0x5c5f
1685  0000              defc __SYSVAR_WORKSP = 0x5c61
1686  0000              defc __SYSVAR_STKBOT = 0x5c63
1687  0000              defc __SYSVAR_STKEND = 0x5c65
1688  0000              defc __SYSVAR_BREG = 0x5c67
1689  0000              defc __SYSVAR_MEM = 0x5c68
1690  0000              defc __SYSVAR_FLAGS2 = 0x5c6a
1691  0000              defc __SYSVAR_DFSZ = 0x5c6b
1692  0000              defc __SYSVAR_STOP = 0x5c6c
1693  0000              defc __SYSVAR_OLDPPC = 0x5c6e
1694  0000              defc __SYSVAR_OSPPC = 0x5c70
1695  0000              defc __SYSVAR_FLAGX = 0x5c71
1696  0000              defc __SYSVAR_STRLEN = 0x5c72
1697  0000              defc __SYSVAR_TADDR = 0x5c74
1698  0000              defc __SYSVAR_SEED = 0x5c76
1699  0000              defc __SYSVAR_FRAMES = 0x5c78
1700  0000              defc __SYSVAR_UDG = 0x5c7b
1701  0000              defc __SYSVAR_COORDS = 0x5c7d
1702  0000              defc __SYSVAR_GMODE = 0x5c7f
1703  0000              defc __SYSVAR_PRCC = 0x5c80
1704  0000              defc __SYSVAR_ECHOE = 0x5c82
1705  0000              defc __SYSVAR_DFCC = 0x5c84
1706  0000              defc __SYSVAR_DFCCL = 0x5c86
1707  0000              defc __SYSVAR_SPOSN = 0x5c88
1708  0000              defc __SYSVAR_SPOSNL = 0x5c8a
1709  0000              defc __SYSVAR_SCRCT = 0x5c8c
1710  0000              defc __SYSVAR_ATTRP = 0x5c8d
1711  0000              defc __SYSVAR_MASKP = 0x5c8e
1712  0000              defc __SYSVAR_ATTRT = 0x5c8f
1713  0000              defc __SYSVAR_MASKT = 0x5c90
1714  0000              defc __SYSVAR_PFLAG = 0x5c91
1715  0000              defc __SYSVAR_MEMBOT = 0x5c92
1716  0000              defc __SYSVAR_NMIADD = 0x5cb0
1717  0000              defc __SYSVAR_RAMTOP = 0x5cb2
1718  0000              defc __SYSVAR_PRAMT = 0x5cb4
1719  0000              
1720  0000              defc __ERRB_0_OK = 0
1721  0000              defc __ERRB_1_NEXT_WITHOUT_FOR = 1
1722  0000              defc __ERRB_2_VARIABLE_NOT_FOUND = 2
1723  0000              defc __ERRB_3_SUBSCRIPT_WRONG = 3
1724  0000              defc __ERRB_4_OUT_OF_MEMORY = 4
1725  0000              defc __ERRB_5_OUT_OF_SCREEN = 5
1726  0000              defc __ERRB_6_NUMBER_TOO_BIG = 6
1727  0000              defc __ERRB_7_RETURN_WITHOUT_GOSUB = 7
1728  0000              defc __ERRB_8_END_OF_FILE = 8
1729  0000              defc __ERRB_9_STOP_STATEMENT = 9
1730  0000              defc __ERRB_A_INVALID_ARGUMENT = 10
1731  0000              defc __ERRB_B_INTEGER_OUT_OF_RANGE = 11
1732  0000              defc __ERRB_C_NONSENSE_IN_BASIC = 12
1733  0000              defc __ERRB_D_BREAK_CONT_REPEATS = 13
1734  0000              defc __ERRB_E_OUT_OF_DATA = 14
1735  0000              defc __ERRB_F_INVALID_FILENAME = 15
1736  0000              defc __ERRB_G_NO_ROOM_FOR_LINE = 16
1737  0000              defc __ERRB_H_STOP_IN_INPUT = 17
1738  0000              defc __ERRB_I_FOR_WITHOUT_NEXT = 18
1739  0000              defc __ERRB_J_INVALID_IO_DEVICE = 19
1740  0000              defc __ERRB_K_INVALID_COLOUR = 20
1741  0000              defc __ERRB_K_INVALID_COLOR = 20
1742  0000              defc __ERRB_L_BREAK_INTO_PROGRAM = 21
1743  0000              defc __ERRB_M_RAMTOP_NO_GOOD = 22
1744  0000              defc __ERRB_N_STATEMENT_LOST = 23
1745  0000              defc __ERRB_O_INVALID_STREAM = 24
1746  0000              defc __ERRB_P_FN_WITHOUT_DEF = 25
1747  0000              defc __ERRB_Q_PARAMETER_ERROR = 26
1748  0000              defc __ERRB_R_TAPE_LOADING_ERROR = 27
1749  0000              
1750  0000              
1751  0000              
1752  0000              
1753  0000              
1754  0000              
1755  0000              
1756  0000              
1757  0000              
1758  0000              
1759  0000              
1760  0000              
1761  0000              defc __IO_UART_RX = 0x143b
1762  0000              
1763  0000              defc __IO_UART_BAUD_RATE = 0x143b
1764  0000              defc __IUBR_115200 = 0
1765  0000              defc __IUBR_57600 = 1
1766  0000              defc __IUBR_38400 = 2
1767  0000              defc __IUBR_31250 = 3
1768  0000              defc __IUBR_19200 = 4
1769  0000              defc __IUBR_9600 = 5
1770  0000              defc __IUBR_4800 = 6
1771  0000              defc __IUBR_2400 = 7
1772  0000              
1773  0000              defc __IO_UART_TX = 0x133b
1774  0000              
1775  0000              defc __IO_UART_STATUS = 0x133b
1776  0000              defc __IUS_RX_AVAIL = 0x01
1777  0000              defc __IUS_TX_READY = 0x02
1778  0000              
1779  0000              
1780  0000              
1781  0000              
1782  0000              
1783  0000              
1784  0000              
1785  0000              
1786  0000              
1787  0000              
1788  0000              
1789  0000              
1790  0000              defc __IO_FE = 0xfe
1791  0000              defc __IO_FE_EAR = 0x10
1792  0000              defc __IO_FE_MIC = 0x08
1793  0000              defc __IO_FE_BORDER_MASK = 0x07
1794  0000              
1795  0000              defc __IO_TIMEX_VIDEO_MODE = 0xff
1796  0000              defc __IO_TVM_DISABLE_ULA_INTERRUPT = 0x40
1797  0000              defc __IO_TVM_DFILE_1 = 0x0
1798  0000              defc __IO_TVM_DFILE_2 = 0x01
1799  0000              defc __IO_TVM_HICOLOR = 0x02
1800  0000              defc __IO_TVM_HIRES = 0x06
1801  0000              defc __IO_TVM_HIRES_BLACK = 0x06
1802  0000              defc __IO_TVM_HIRES_BLUE = 0x0e
1803  0000              defc __IO_TVM_HIRES_RED = 0x16
1804  0000              defc __IO_TVM_HIRES_MAGENTA = 0x1e
1805  0000              defc __IO_TVM_HIRES_GREEN = 0x26
1806  0000              defc __IO_TVM_HIRES_CYAN = 0x2e
1807  0000              defc __IO_TVM_HIRES_YELLOW = 0x36
1808  0000              defc __IO_TVM_HIRES_WHITE = 0x3e
1809  0000              
1810  0000              
1811  0000              
1812  0000              
1813  0000              
1814  0000              
1815  0000              
1816  0000              
1817  0000              
1818  0000              
1819  0000              ENDIF
1820  0000              
1821  0000              
13    0000              
14    0000              SECTION rodata_user
15    0000              
16    0000              PUBLIC _copper
17    0000              PUBLIC _copper_end
18    0000              
19    0000              ; Instead of EXTERN use the INCLUDE above to get hold of these
20    0000              ; constants.  There will be a large defc block at the head of the
21    0000              ; output asm but the asm list file will have all the assembled
22    0000              ; bytes all filled in for debugging.  Will return to EXTERN
23    0000              ; once things work on the real Next.
24    0000              
25    0000              ;EXTERN __REG_SPRITE_LAYER_SYSTEM
26    0000              ;EXTERN __RSLS_LAYER_PRIORITY_SUL, __RSLS_LAYER_PRIORITY_SLU
27    0000              
28    0000              defc _copper_size = _copper_end - _copper
29    0000              
30    0000              _copper:
31    0000              
32    0000                 ; There are two hi-res windows (x,width,y,height) = (2,28,2,16) and (32,28,5,16)
33    0000              
34    0000                 ; These are 64x24 character coordinates but the copper operates in 32x24
35    0000                 ; character coordinates so we want even sizes for the 64-col (x,width) to divide
36    0000                 ; by two to get exact 32x24 x coordinates to make things easier.
37    0000              
38    0000                 ; To make the timex hi-res display appear on top of the scrolling layer 2
39    0000                 ; we'll make use of the nextreg layer priorities register 0x15 (__REG_SPRITE_LAYER_SYSTEM)
40    0000                 ; and have layer 2 on top by default and then ula on top for the hi-res terminals.
41    0000              
42    0000                 ; Layer 2 is on top at start of frame
43    0000              
44    0000              
45    0000                    ; LINE 16
46    0000              
47    0000  82 10             cu.wait 16, 2/2                                             ; wait for x = 2/2 column start of first window
48    0002  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
49    0004              
50    0004  9E 10             cu.wait 16, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
51    0006  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
52    0008              
53    0008                    ; LINE 17
54    0008              
55    0008  82 11             cu.wait 17, 2/2                                             ; wait for x = 2/2 column start of first window
56    000A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
57    000C              
58    000C  9E 11             cu.wait 17, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
59    000E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
60    0010              
61    0010                    ; LINE 18
62    0010              
63    0010  82 12             cu.wait 18, 2/2                                             ; wait for x = 2/2 column start of first window
64    0012  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
65    0014              
66    0014  9E 12             cu.wait 18, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
67    0016  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
68    0018              
69    0018                    ; LINE 19
70    0018              
71    0018  82 13             cu.wait 19, 2/2                                             ; wait for x = 2/2 column start of first window
72    001A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
73    001C              
74    001C  9E 13             cu.wait 19, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
75    001E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
76    0020              
77    0020                    ; LINE 20
78    0020              
79    0020  82 14             cu.wait 20, 2/2                                             ; wait for x = 2/2 column start of first window
80    0022  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
81    0024              
82    0024  9E 14             cu.wait 20, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
83    0026  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
84    0028              
85    0028                    ; LINE 21
86    0028              
87    0028  82 15             cu.wait 21, 2/2                                             ; wait for x = 2/2 column start of first window
88    002A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
89    002C              
90    002C  9E 15             cu.wait 21, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
91    002E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
92    0030              
93    0030                    ; LINE 22
94    0030              
95    0030  82 16             cu.wait 22, 2/2                                             ; wait for x = 2/2 column start of first window
96    0032  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
97    0034              
98    0034  9E 16             cu.wait 22, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
99    0036  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
100   0038              
101   0038                    ; LINE 23
102   0038              
103   0038  82 17             cu.wait 23, 2/2                                             ; wait for x = 2/2 column start of first window
104   003A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
105   003C              
106   003C  9E 17             cu.wait 23, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
107   003E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
108   0040              
109   0040                    ; LINE 24
110   0040              
111   0040  82 18             cu.wait 24, 2/2                                             ; wait for x = 2/2 column start of first window
112   0042  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
113   0044              
114   0044  9E 18             cu.wait 24, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
115   0046  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
116   0048              
117   0048                    ; LINE 25
118   0048              
119   0048  82 19             cu.wait 25, 2/2                                             ; wait for x = 2/2 column start of first window
120   004A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
121   004C              
122   004C  9E 19             cu.wait 25, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
123   004E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
124   0050              
125   0050                    ; LINE 26
126   0050              
127   0050  82 1A             cu.wait 26, 2/2                                             ; wait for x = 2/2 column start of first window
128   0052  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
129   0054              
130   0054  9E 1A             cu.wait 26, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
131   0056  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
132   0058              
133   0058                    ; LINE 27
134   0058              
135   0058  82 1B             cu.wait 27, 2/2                                             ; wait for x = 2/2 column start of first window
136   005A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
137   005C              
138   005C  9E 1B             cu.wait 27, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
139   005E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
140   0060              
141   0060                    ; LINE 28
142   0060              
143   0060  82 1C             cu.wait 28, 2/2                                             ; wait for x = 2/2 column start of first window
144   0062  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
145   0064              
146   0064  9E 1C             cu.wait 28, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
147   0066  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
148   0068              
149   0068                    ; LINE 29
150   0068              
151   0068  82 1D             cu.wait 29, 2/2                                             ; wait for x = 2/2 column start of first window
152   006A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
153   006C              
154   006C  9E 1D             cu.wait 29, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
155   006E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
156   0070              
157   0070                    ; LINE 30
158   0070              
159   0070  82 1E             cu.wait 30, 2/2                                             ; wait for x = 2/2 column start of first window
160   0072  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
161   0074              
162   0074  9E 1E             cu.wait 30, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
163   0076  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
164   0078              
165   0078                    ; LINE 31
166   0078              
167   0078  82 1F             cu.wait 31, 2/2                                             ; wait for x = 2/2 column start of first window
168   007A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
169   007C              
170   007C  9E 1F             cu.wait 31, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
171   007E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
172   0080              
173   0080                    ; LINE 32
174   0080              
175   0080  82 20             cu.wait 32, 2/2                                             ; wait for x = 2/2 column start of first window
176   0082  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
177   0084              
178   0084  9E 20             cu.wait 32, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
179   0086  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
180   0088              
181   0088                    ; LINE 33
182   0088              
183   0088  82 21             cu.wait 33, 2/2                                             ; wait for x = 2/2 column start of first window
184   008A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
185   008C              
186   008C  9E 21             cu.wait 33, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
187   008E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
188   0090              
189   0090                    ; LINE 34
190   0090              
191   0090  82 22             cu.wait 34, 2/2                                             ; wait for x = 2/2 column start of first window
192   0092  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
193   0094              
194   0094  9E 22             cu.wait 34, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
195   0096  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
196   0098              
197   0098                    ; LINE 35
198   0098              
199   0098  82 23             cu.wait 35, 2/2                                             ; wait for x = 2/2 column start of first window
200   009A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
201   009C              
202   009C  9E 23             cu.wait 35, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
203   009E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
204   00A0              
205   00A0                    ; LINE 36
206   00A0              
207   00A0  82 24             cu.wait 36, 2/2                                             ; wait for x = 2/2 column start of first window
208   00A2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
209   00A4              
210   00A4  9E 24             cu.wait 36, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
211   00A6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
212   00A8              
213   00A8                    ; LINE 37
214   00A8              
215   00A8  82 25             cu.wait 37, 2/2                                             ; wait for x = 2/2 column start of first window
216   00AA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
217   00AC              
218   00AC  9E 25             cu.wait 37, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
219   00AE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
220   00B0              
221   00B0                    ; LINE 38
222   00B0              
223   00B0  82 26             cu.wait 38, 2/2                                             ; wait for x = 2/2 column start of first window
224   00B2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
225   00B4              
226   00B4  9E 26             cu.wait 38, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
227   00B6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
228   00B8              
229   00B8                    ; LINE 39
230   00B8              
231   00B8  82 27             cu.wait 39, 2/2                                             ; wait for x = 2/2 column start of first window
232   00BA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
233   00BC              
234   00BC  9E 27             cu.wait 39, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
235   00BE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
236   00C0              
237   00C0              
238   00C0                 ; two windows appear on the same scan line for y char coord in [5,18)
239   00C0                 ; change to ula on top while beam is over either window
240   00C0              
241   00C0              
242   00C0                    ; LINE 40
243   00C0              
244   00C0  82 28             cu.wait 40, 2/2                                             ; wait for x = 2/2 column start of first window
245   00C2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
246   00C4              
247   00C4  9E 28             cu.wait 40, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
248   00C6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
249   00C8              
250   00C8  A0 28             cu.wait 40, 32/2                                            ; wait for x = 32/2 column start of second window
251   00CA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
252   00CC              
253   00CC  BC 28             cu.wait 40, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
254   00CE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
255   00D0              
256   00D0                    ; LINE 41
257   00D0              
258   00D0  82 29             cu.wait 41, 2/2                                             ; wait for x = 2/2 column start of first window
259   00D2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
260   00D4              
261   00D4  9E 29             cu.wait 41, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
262   00D6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
263   00D8              
264   00D8  A0 29             cu.wait 41, 32/2                                            ; wait for x = 32/2 column start of second window
265   00DA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
266   00DC              
267   00DC  BC 29             cu.wait 41, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
268   00DE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
269   00E0              
270   00E0                    ; LINE 42
271   00E0              
272   00E0  82 2A             cu.wait 42, 2/2                                             ; wait for x = 2/2 column start of first window
273   00E2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
274   00E4              
275   00E4  9E 2A             cu.wait 42, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
276   00E6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
277   00E8              
278   00E8  A0 2A             cu.wait 42, 32/2                                            ; wait for x = 32/2 column start of second window
279   00EA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
280   00EC              
281   00EC  BC 2A             cu.wait 42, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
282   00EE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
283   00F0              
284   00F0                    ; LINE 43
285   00F0              
286   00F0  82 2B             cu.wait 43, 2/2                                             ; wait for x = 2/2 column start of first window
287   00F2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
288   00F4              
289   00F4  9E 2B             cu.wait 43, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
290   00F6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
291   00F8              
292   00F8  A0 2B             cu.wait 43, 32/2                                            ; wait for x = 32/2 column start of second window
293   00FA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
294   00FC              
295   00FC  BC 2B             cu.wait 43, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
296   00FE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
297   0100              
298   0100                    ; LINE 44
299   0100              
300   0100  82 2C             cu.wait 44, 2/2                                             ; wait for x = 2/2 column start of first window
301   0102  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
302   0104              
303   0104  9E 2C             cu.wait 44, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
304   0106  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
305   0108              
306   0108  A0 2C             cu.wait 44, 32/2                                            ; wait for x = 32/2 column start of second window
307   010A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
308   010C              
309   010C  BC 2C             cu.wait 44, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
310   010E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
311   0110              
312   0110                    ; LINE 45
313   0110              
314   0110  82 2D             cu.wait 45, 2/2                                             ; wait for x = 2/2 column start of first window
315   0112  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
316   0114              
317   0114  9E 2D             cu.wait 45, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
318   0116  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
319   0118              
320   0118  A0 2D             cu.wait 45, 32/2                                            ; wait for x = 32/2 column start of second window
321   011A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
322   011C              
323   011C  BC 2D             cu.wait 45, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
324   011E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
325   0120              
326   0120                    ; LINE 46
327   0120              
328   0120  82 2E             cu.wait 46, 2/2                                             ; wait for x = 2/2 column start of first window
329   0122  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
330   0124              
331   0124  9E 2E             cu.wait 46, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
332   0126  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
333   0128              
334   0128  A0 2E             cu.wait 46, 32/2                                            ; wait for x = 32/2 column start of second window
335   012A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
336   012C              
337   012C  BC 2E             cu.wait 46, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
338   012E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
339   0130              
340   0130                    ; LINE 47
341   0130              
342   0130  82 2F             cu.wait 47, 2/2                                             ; wait for x = 2/2 column start of first window
343   0132  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
344   0134              
345   0134  9E 2F             cu.wait 47, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
346   0136  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
347   0138              
348   0138  A0 2F             cu.wait 47, 32/2                                            ; wait for x = 32/2 column start of second window
349   013A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
350   013C              
351   013C  BC 2F             cu.wait 47, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
352   013E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
353   0140              
354   0140                    ; LINE 48
355   0140              
356   0140  82 30             cu.wait 48, 2/2                                             ; wait for x = 2/2 column start of first window
357   0142  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
358   0144              
359   0144  9E 30             cu.wait 48, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
360   0146  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
361   0148              
362   0148  A0 30             cu.wait 48, 32/2                                            ; wait for x = 32/2 column start of second window
363   014A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
364   014C              
365   014C  BC 30             cu.wait 48, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
366   014E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
367   0150              
368   0150                    ; LINE 49
369   0150              
370   0150  82 31             cu.wait 49, 2/2                                             ; wait for x = 2/2 column start of first window
371   0152  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
372   0154              
373   0154  9E 31             cu.wait 49, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
374   0156  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
375   0158              
376   0158  A0 31             cu.wait 49, 32/2                                            ; wait for x = 32/2 column start of second window
377   015A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
378   015C              
379   015C  BC 31             cu.wait 49, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
380   015E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
381   0160              
382   0160                    ; LINE 50
383   0160              
384   0160  82 32             cu.wait 50, 2/2                                             ; wait for x = 2/2 column start of first window
385   0162  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
386   0164              
387   0164  9E 32             cu.wait 50, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
388   0166  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
389   0168              
390   0168  A0 32             cu.wait 50, 32/2                                            ; wait for x = 32/2 column start of second window
391   016A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
392   016C              
393   016C  BC 32             cu.wait 50, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
394   016E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
395   0170              
396   0170                    ; LINE 51
397   0170              
398   0170  82 33             cu.wait 51, 2/2                                             ; wait for x = 2/2 column start of first window
399   0172  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
400   0174              
401   0174  9E 33             cu.wait 51, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
402   0176  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
403   0178              
404   0178  A0 33             cu.wait 51, 32/2                                            ; wait for x = 32/2 column start of second window
405   017A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
406   017C              
407   017C  BC 33             cu.wait 51, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
408   017E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
409   0180              
410   0180                    ; LINE 52
411   0180              
412   0180  82 34             cu.wait 52, 2/2                                             ; wait for x = 2/2 column start of first window
413   0182  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
414   0184              
415   0184  9E 34             cu.wait 52, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
416   0186  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
417   0188              
418   0188  A0 34             cu.wait 52, 32/2                                            ; wait for x = 32/2 column start of second window
419   018A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
420   018C              
421   018C  BC 34             cu.wait 52, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
422   018E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
423   0190              
424   0190                    ; LINE 53
425   0190              
426   0190  82 35             cu.wait 53, 2/2                                             ; wait for x = 2/2 column start of first window
427   0192  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
428   0194              
429   0194  9E 35             cu.wait 53, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
430   0196  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
431   0198              
432   0198  A0 35             cu.wait 53, 32/2                                            ; wait for x = 32/2 column start of second window
433   019A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
434   019C              
435   019C  BC 35             cu.wait 53, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
436   019E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
437   01A0              
438   01A0                    ; LINE 54
439   01A0              
440   01A0  82 36             cu.wait 54, 2/2                                             ; wait for x = 2/2 column start of first window
441   01A2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
442   01A4              
443   01A4  9E 36             cu.wait 54, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
444   01A6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
445   01A8              
446   01A8  A0 36             cu.wait 54, 32/2                                            ; wait for x = 32/2 column start of second window
447   01AA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
448   01AC              
449   01AC  BC 36             cu.wait 54, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
450   01AE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
451   01B0              
452   01B0                    ; LINE 55
453   01B0              
454   01B0  82 37             cu.wait 55, 2/2                                             ; wait for x = 2/2 column start of first window
455   01B2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
456   01B4              
457   01B4  9E 37             cu.wait 55, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
458   01B6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
459   01B8              
460   01B8  A0 37             cu.wait 55, 32/2                                            ; wait for x = 32/2 column start of second window
461   01BA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
462   01BC              
463   01BC  BC 37             cu.wait 55, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
464   01BE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
465   01C0              
466   01C0                    ; LINE 56
467   01C0              
468   01C0  82 38             cu.wait 56, 2/2                                             ; wait for x = 2/2 column start of first window
469   01C2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
470   01C4              
471   01C4  9E 38             cu.wait 56, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
472   01C6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
473   01C8              
474   01C8  A0 38             cu.wait 56, 32/2                                            ; wait for x = 32/2 column start of second window
475   01CA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
476   01CC              
477   01CC  BC 38             cu.wait 56, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
478   01CE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
479   01D0              
480   01D0                    ; LINE 57
481   01D0              
482   01D0  82 39             cu.wait 57, 2/2                                             ; wait for x = 2/2 column start of first window
483   01D2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
484   01D4              
485   01D4  9E 39             cu.wait 57, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
486   01D6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
487   01D8              
488   01D8  A0 39             cu.wait 57, 32/2                                            ; wait for x = 32/2 column start of second window
489   01DA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
490   01DC              
491   01DC  BC 39             cu.wait 57, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
492   01DE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
493   01E0              
494   01E0                    ; LINE 58
495   01E0              
496   01E0  82 3A             cu.wait 58, 2/2                                             ; wait for x = 2/2 column start of first window
497   01E2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
498   01E4              
499   01E4  9E 3A             cu.wait 58, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
500   01E6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
501   01E8              
502   01E8  A0 3A             cu.wait 58, 32/2                                            ; wait for x = 32/2 column start of second window
503   01EA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
504   01EC              
505   01EC  BC 3A             cu.wait 58, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
506   01EE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
507   01F0              
508   01F0                    ; LINE 59
509   01F0              
510   01F0  82 3B             cu.wait 59, 2/2                                             ; wait for x = 2/2 column start of first window
511   01F2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
512   01F4              
513   01F4  9E 3B             cu.wait 59, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
514   01F6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
515   01F8              
516   01F8  A0 3B             cu.wait 59, 32/2                                            ; wait for x = 32/2 column start of second window
517   01FA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
518   01FC              
519   01FC  BC 3B             cu.wait 59, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
520   01FE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
521   0200              
522   0200                    ; LINE 60
523   0200              
524   0200  82 3C             cu.wait 60, 2/2                                             ; wait for x = 2/2 column start of first window
525   0202  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
526   0204              
527   0204  9E 3C             cu.wait 60, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
528   0206  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
529   0208              
530   0208  A0 3C             cu.wait 60, 32/2                                            ; wait for x = 32/2 column start of second window
531   020A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
532   020C              
533   020C  BC 3C             cu.wait 60, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
534   020E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
535   0210              
536   0210                    ; LINE 61
537   0210              
538   0210  82 3D             cu.wait 61, 2/2                                             ; wait for x = 2/2 column start of first window
539   0212  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
540   0214              
541   0214  9E 3D             cu.wait 61, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
542   0216  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
543   0218              
544   0218  A0 3D             cu.wait 61, 32/2                                            ; wait for x = 32/2 column start of second window
545   021A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
546   021C              
547   021C  BC 3D             cu.wait 61, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
548   021E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
549   0220              
550   0220                    ; LINE 62
551   0220              
552   0220  82 3E             cu.wait 62, 2/2                                             ; wait for x = 2/2 column start of first window
553   0222  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
554   0224              
555   0224  9E 3E             cu.wait 62, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
556   0226  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
557   0228              
558   0228  A0 3E             cu.wait 62, 32/2                                            ; wait for x = 32/2 column start of second window
559   022A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
560   022C              
561   022C  BC 3E             cu.wait 62, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
562   022E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
563   0230              
564   0230                    ; LINE 63
565   0230              
566   0230  82 3F             cu.wait 63, 2/2                                             ; wait for x = 2/2 column start of first window
567   0232  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
568   0234              
569   0234  9E 3F             cu.wait 63, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
570   0236  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
571   0238              
572   0238  A0 3F             cu.wait 63, 32/2                                            ; wait for x = 32/2 column start of second window
573   023A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
574   023C              
575   023C  BC 3F             cu.wait 63, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
576   023E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
577   0240              
578   0240                    ; LINE 64
579   0240              
580   0240  82 40             cu.wait 64, 2/2                                             ; wait for x = 2/2 column start of first window
581   0242  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
582   0244              
583   0244  9E 40             cu.wait 64, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
584   0246  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
585   0248              
586   0248  A0 40             cu.wait 64, 32/2                                            ; wait for x = 32/2 column start of second window
587   024A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
588   024C              
589   024C  BC 40             cu.wait 64, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
590   024E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
591   0250              
592   0250                    ; LINE 65
593   0250              
594   0250  82 41             cu.wait 65, 2/2                                             ; wait for x = 2/2 column start of first window
595   0252  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
596   0254              
597   0254  9E 41             cu.wait 65, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
598   0256  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
599   0258              
600   0258  A0 41             cu.wait 65, 32/2                                            ; wait for x = 32/2 column start of second window
601   025A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
602   025C              
603   025C  BC 41             cu.wait 65, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
604   025E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
605   0260              
606   0260                    ; LINE 66
607   0260              
608   0260  82 42             cu.wait 66, 2/2                                             ; wait for x = 2/2 column start of first window
609   0262  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
610   0264              
611   0264  9E 42             cu.wait 66, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
612   0266  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
613   0268              
614   0268  A0 42             cu.wait 66, 32/2                                            ; wait for x = 32/2 column start of second window
615   026A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
616   026C              
617   026C  BC 42             cu.wait 66, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
618   026E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
619   0270              
620   0270                    ; LINE 67
621   0270              
622   0270  82 43             cu.wait 67, 2/2                                             ; wait for x = 2/2 column start of first window
623   0272  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
624   0274              
625   0274  9E 43             cu.wait 67, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
626   0276  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
627   0278              
628   0278  A0 43             cu.wait 67, 32/2                                            ; wait for x = 32/2 column start of second window
629   027A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
630   027C              
631   027C  BC 43             cu.wait 67, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
632   027E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
633   0280              
634   0280                    ; LINE 68
635   0280              
636   0280  82 44             cu.wait 68, 2/2                                             ; wait for x = 2/2 column start of first window
637   0282  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
638   0284              
639   0284  9E 44             cu.wait 68, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
640   0286  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
641   0288              
642   0288  A0 44             cu.wait 68, 32/2                                            ; wait for x = 32/2 column start of second window
643   028A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
644   028C              
645   028C  BC 44             cu.wait 68, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
646   028E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
647   0290              
648   0290                    ; LINE 69
649   0290              
650   0290  82 45             cu.wait 69, 2/2                                             ; wait for x = 2/2 column start of first window
651   0292  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
652   0294              
653   0294  9E 45             cu.wait 69, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
654   0296  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
655   0298              
656   0298  A0 45             cu.wait 69, 32/2                                            ; wait for x = 32/2 column start of second window
657   029A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
658   029C              
659   029C  BC 45             cu.wait 69, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
660   029E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
661   02A0              
662   02A0                    ; LINE 70
663   02A0              
664   02A0  82 46             cu.wait 70, 2/2                                             ; wait for x = 2/2 column start of first window
665   02A2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
666   02A4              
667   02A4  9E 46             cu.wait 70, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
668   02A6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
669   02A8              
670   02A8  A0 46             cu.wait 70, 32/2                                            ; wait for x = 32/2 column start of second window
671   02AA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
672   02AC              
673   02AC  BC 46             cu.wait 70, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
674   02AE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
675   02B0              
676   02B0                    ; LINE 71
677   02B0              
678   02B0  82 47             cu.wait 71, 2/2                                             ; wait for x = 2/2 column start of first window
679   02B2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
680   02B4              
681   02B4  9E 47             cu.wait 71, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
682   02B6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
683   02B8              
684   02B8  A0 47             cu.wait 71, 32/2                                            ; wait for x = 32/2 column start of second window
685   02BA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
686   02BC              
687   02BC  BC 47             cu.wait 71, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
688   02BE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
689   02C0              
690   02C0                    ; LINE 72
691   02C0              
692   02C0  82 48             cu.wait 72, 2/2                                             ; wait for x = 2/2 column start of first window
693   02C2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
694   02C4              
695   02C4  9E 48             cu.wait 72, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
696   02C6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
697   02C8              
698   02C8  A0 48             cu.wait 72, 32/2                                            ; wait for x = 32/2 column start of second window
699   02CA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
700   02CC              
701   02CC  BC 48             cu.wait 72, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
702   02CE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
703   02D0              
704   02D0                    ; LINE 73
705   02D0              
706   02D0  82 49             cu.wait 73, 2/2                                             ; wait for x = 2/2 column start of first window
707   02D2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
708   02D4              
709   02D4  9E 49             cu.wait 73, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
710   02D6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
711   02D8              
712   02D8  A0 49             cu.wait 73, 32/2                                            ; wait for x = 32/2 column start of second window
713   02DA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
714   02DC              
715   02DC  BC 49             cu.wait 73, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
716   02DE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
717   02E0              
718   02E0                    ; LINE 74
719   02E0              
720   02E0  82 4A             cu.wait 74, 2/2                                             ; wait for x = 2/2 column start of first window
721   02E2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
722   02E4              
723   02E4  9E 4A             cu.wait 74, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
724   02E6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
725   02E8              
726   02E8  A0 4A             cu.wait 74, 32/2                                            ; wait for x = 32/2 column start of second window
727   02EA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
728   02EC              
729   02EC  BC 4A             cu.wait 74, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
730   02EE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
731   02F0              
732   02F0                    ; LINE 75
733   02F0              
734   02F0  82 4B             cu.wait 75, 2/2                                             ; wait for x = 2/2 column start of first window
735   02F2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
736   02F4              
737   02F4  9E 4B             cu.wait 75, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
738   02F6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
739   02F8              
740   02F8  A0 4B             cu.wait 75, 32/2                                            ; wait for x = 32/2 column start of second window
741   02FA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
742   02FC              
743   02FC  BC 4B             cu.wait 75, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
744   02FE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
745   0300              
746   0300                    ; LINE 76
747   0300              
748   0300  82 4C             cu.wait 76, 2/2                                             ; wait for x = 2/2 column start of first window
749   0302  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
750   0304              
751   0304  9E 4C             cu.wait 76, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
752   0306  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
753   0308              
754   0308  A0 4C             cu.wait 76, 32/2                                            ; wait for x = 32/2 column start of second window
755   030A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
756   030C              
757   030C  BC 4C             cu.wait 76, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
758   030E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
759   0310              
760   0310                    ; LINE 77
761   0310              
762   0310  82 4D             cu.wait 77, 2/2                                             ; wait for x = 2/2 column start of first window
763   0312  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
764   0314              
765   0314  9E 4D             cu.wait 77, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
766   0316  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
767   0318              
768   0318  A0 4D             cu.wait 77, 32/2                                            ; wait for x = 32/2 column start of second window
769   031A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
770   031C              
771   031C  BC 4D             cu.wait 77, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
772   031E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
773   0320              
774   0320                    ; LINE 78
775   0320              
776   0320  82 4E             cu.wait 78, 2/2                                             ; wait for x = 2/2 column start of first window
777   0322  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
778   0324              
779   0324  9E 4E             cu.wait 78, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
780   0326  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
781   0328              
782   0328  A0 4E             cu.wait 78, 32/2                                            ; wait for x = 32/2 column start of second window
783   032A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
784   032C              
785   032C  BC 4E             cu.wait 78, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
786   032E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
787   0330              
788   0330                    ; LINE 79
789   0330              
790   0330  82 4F             cu.wait 79, 2/2                                             ; wait for x = 2/2 column start of first window
791   0332  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
792   0334              
793   0334  9E 4F             cu.wait 79, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
794   0336  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
795   0338              
796   0338  A0 4F             cu.wait 79, 32/2                                            ; wait for x = 32/2 column start of second window
797   033A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
798   033C              
799   033C  BC 4F             cu.wait 79, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
800   033E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
801   0340              
802   0340                    ; LINE 80
803   0340              
804   0340  82 50             cu.wait 80, 2/2                                             ; wait for x = 2/2 column start of first window
805   0342  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
806   0344              
807   0344  9E 50             cu.wait 80, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
808   0346  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
809   0348              
810   0348  A0 50             cu.wait 80, 32/2                                            ; wait for x = 32/2 column start of second window
811   034A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
812   034C              
813   034C  BC 50             cu.wait 80, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
814   034E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
815   0350              
816   0350                    ; LINE 81
817   0350              
818   0350  82 51             cu.wait 81, 2/2                                             ; wait for x = 2/2 column start of first window
819   0352  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
820   0354              
821   0354  9E 51             cu.wait 81, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
822   0356  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
823   0358              
824   0358  A0 51             cu.wait 81, 32/2                                            ; wait for x = 32/2 column start of second window
825   035A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
826   035C              
827   035C  BC 51             cu.wait 81, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
828   035E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
829   0360              
830   0360                    ; LINE 82
831   0360              
832   0360  82 52             cu.wait 82, 2/2                                             ; wait for x = 2/2 column start of first window
833   0362  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
834   0364              
835   0364  9E 52             cu.wait 82, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
836   0366  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
837   0368              
838   0368  A0 52             cu.wait 82, 32/2                                            ; wait for x = 32/2 column start of second window
839   036A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
840   036C              
841   036C  BC 52             cu.wait 82, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
842   036E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
843   0370              
844   0370                    ; LINE 83
845   0370              
846   0370  82 53             cu.wait 83, 2/2                                             ; wait for x = 2/2 column start of first window
847   0372  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
848   0374              
849   0374  9E 53             cu.wait 83, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
850   0376  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
851   0378              
852   0378  A0 53             cu.wait 83, 32/2                                            ; wait for x = 32/2 column start of second window
853   037A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
854   037C              
855   037C  BC 53             cu.wait 83, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
856   037E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
857   0380              
858   0380                    ; LINE 84
859   0380              
860   0380  82 54             cu.wait 84, 2/2                                             ; wait for x = 2/2 column start of first window
861   0382  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
862   0384              
863   0384  9E 54             cu.wait 84, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
864   0386  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
865   0388              
866   0388  A0 54             cu.wait 84, 32/2                                            ; wait for x = 32/2 column start of second window
867   038A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
868   038C              
869   038C  BC 54             cu.wait 84, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
870   038E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
871   0390              
872   0390                    ; LINE 85
873   0390              
874   0390  82 55             cu.wait 85, 2/2                                             ; wait for x = 2/2 column start of first window
875   0392  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
876   0394              
877   0394  9E 55             cu.wait 85, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
878   0396  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
879   0398              
880   0398  A0 55             cu.wait 85, 32/2                                            ; wait for x = 32/2 column start of second window
881   039A  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
882   039C              
883   039C  BC 55             cu.wait 85, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
884   039E  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
885   03A0              
886   03A0                    ; LINE 86
887   03A0              
888   03A0  82 56             cu.wait 86, 2/2                                             ; wait for x = 2/2 column start of first window
889   03A2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
890   03A4              
891   03A4  9E 56             cu.wait 86, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
892   03A6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
893   03A8              
894   03A8  A0 56             cu.wait 86, 32/2                                            ; wait for x = 32/2 column start of second window
895   03AA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
896   03AC              
897   03AC  BC 56             cu.wait 86, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
898   03AE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
899   03B0              
900   03B0                    ; LINE 87
901   03B0              
902   03B0  82 57             cu.wait 87, 2/2                                             ; wait for x = 2/2 column start of first window
903   03B2  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
904   03B4              
905   03B4  9E 57             cu.wait 87, (2+28)/2                                        ; wait for x=(2+28)/2 column after end of first window
906   03B6  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
907   03B8              
908   03B8  A0 57             cu.wait 87, 32/2                                            ; wait for x = 32/2 column start of second window
909   03BA  15 08             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SUL  ; ula on top
910   03BC              
911   03BC  BC 57             cu.wait 87, (32+28)/2                                       ; wait for x=(32+28)/2 column after end of second window
912   03BE  15 00             cu.move __REG_SPRITE_LAYER_SYSTEM, __RSLS_LAYER_PRIORITY_SLU  ; layer 2 on top
913   03C0              
914   03C0              
915   03C0  FF FF          cu.stop
916   03C2              
917   03C2              _copper_end:
918   03C2              
